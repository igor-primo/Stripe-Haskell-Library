-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getBillingAlerts
module StripeAPI.Operations.GetBillingAlerts where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/billing/alerts
-- 
-- \<p>Lists billing active and inactive alerts\<\/p>
getBillingAlerts :: forall m . StripeAPI.Common.MonadHTTP m => GetBillingAlertsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetBillingAlertsResponse) -- ^ Monadic computation which returns the result of the operation
getBillingAlerts parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetBillingAlertsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetBillingAlertsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                  GetBillingAlertsResponseBody200)
                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetBillingAlertsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                    Error)
                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET") "/v1/billing/alerts" [StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "alert_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getBillingAlertsParametersQueryAlertType parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                       StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getBillingAlertsParametersQueryEndingBefore parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                       StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getBillingAlertsParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                       StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getBillingAlertsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                       StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "meter") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getBillingAlertsParametersQueryMeter parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                       StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getBillingAlertsParametersQueryStartingAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.True])
-- | Defines the object schema located at @paths.\/v1\/billing\/alerts.GET.parameters@ in the specification.
-- 
-- 
data GetBillingAlertsParameters = GetBillingAlertsParameters {
  -- | queryAlert_type: Represents the parameter named \'alert_type\'
  -- 
  -- Filter results to only include this type of alert.
  getBillingAlertsParametersQueryAlertType :: (GHC.Maybe.Maybe GetBillingAlertsParametersQueryAlertType')
  -- | queryEnding_before: Represents the parameter named \'ending_before\'
  -- 
  -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getBillingAlertsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryExpand: Represents the parameter named \'expand\'
  -- 
  -- Specifies which fields in the response should be expanded.
  , getBillingAlertsParametersQueryExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  , getBillingAlertsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryMeter: Represents the parameter named \'meter\'
  -- 
  -- Filter results to only include alerts with the given meter.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getBillingAlertsParametersQueryMeter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryStarting_after: Represents the parameter named \'starting_after\'
  -- 
  -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getBillingAlertsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetBillingAlertsParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAlert_type" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryAlertType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeter" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryMeter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryStartingAfter obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAlert_type" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryAlertType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeter" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryMeter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getBillingAlertsParametersQueryStartingAfter obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetBillingAlertsParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetBillingAlertsParameters" (\obj -> (((((GHC.Base.pure GetBillingAlertsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAlert_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMeter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after"))}
-- | Create a new 'GetBillingAlertsParameters' with all required fields.
mkGetBillingAlertsParameters :: GetBillingAlertsParameters
mkGetBillingAlertsParameters = GetBillingAlertsParameters{getBillingAlertsParametersQueryAlertType = GHC.Maybe.Nothing,
                                                          getBillingAlertsParametersQueryEndingBefore = GHC.Maybe.Nothing,
                                                          getBillingAlertsParametersQueryExpand = GHC.Maybe.Nothing,
                                                          getBillingAlertsParametersQueryLimit = GHC.Maybe.Nothing,
                                                          getBillingAlertsParametersQueryMeter = GHC.Maybe.Nothing,
                                                          getBillingAlertsParametersQueryStartingAfter = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/billing\/alerts.GET.parameters.properties.queryAlert_type@ in the specification.
-- 
-- Represents the parameter named \'alert_type\'
-- 
-- Filter results to only include this type of alert.
data GetBillingAlertsParametersQueryAlertType' =
   GetBillingAlertsParametersQueryAlertType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | GetBillingAlertsParametersQueryAlertType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | GetBillingAlertsParametersQueryAlertType'EnumUsageThreshold -- ^ Represents the JSON value @"usage_threshold"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetBillingAlertsParametersQueryAlertType'
    where {toJSON (GetBillingAlertsParametersQueryAlertType'Other val) = val;
           toJSON (GetBillingAlertsParametersQueryAlertType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (GetBillingAlertsParametersQueryAlertType'EnumUsageThreshold) = "usage_threshold"}
instance Data.Aeson.Types.FromJSON.FromJSON GetBillingAlertsParametersQueryAlertType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "usage_threshold" -> GetBillingAlertsParametersQueryAlertType'EnumUsageThreshold
                                             | GHC.Base.otherwise -> GetBillingAlertsParametersQueryAlertType'Other val)}
-- | Represents a response of the operation 'getBillingAlerts'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetBillingAlertsResponseError' is used.
data GetBillingAlertsResponse =
   GetBillingAlertsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetBillingAlertsResponse200 GetBillingAlertsResponseBody200 -- ^ Successful response.
  | GetBillingAlertsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/billing\/alerts.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetBillingAlertsResponseBody200 = GetBillingAlertsResponseBody200 {
  -- | data
  getBillingAlertsResponseBody200Data :: [Billing'alert]
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getBillingAlertsResponseBody200HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  -- * Must match pattern \'^\/v1\/billing\/alerts\'
  , getBillingAlertsResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetBillingAlertsResponseBody200
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getBillingAlertsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getBillingAlertsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getBillingAlertsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getBillingAlertsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getBillingAlertsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getBillingAlertsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetBillingAlertsResponseBody200
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetBillingAlertsResponseBody200" (\obj -> ((GHC.Base.pure GetBillingAlertsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))}
-- | Create a new 'GetBillingAlertsResponseBody200' with all required fields.
mkGetBillingAlertsResponseBody200 :: [Billing'alert] -- ^ 'getBillingAlertsResponseBody200Data'
  -> GHC.Types.Bool -- ^ 'getBillingAlertsResponseBody200HasMore'
  -> Data.Text.Internal.Text -- ^ 'getBillingAlertsResponseBody200Url'
  -> GetBillingAlertsResponseBody200
mkGetBillingAlertsResponseBody200 getBillingAlertsResponseBody200Data getBillingAlertsResponseBody200HasMore getBillingAlertsResponseBody200Url = GetBillingAlertsResponseBody200{getBillingAlertsResponseBody200Data = getBillingAlertsResponseBody200Data,
                                                                                                                                                                                  getBillingAlertsResponseBody200HasMore = getBillingAlertsResponseBody200HasMore,
                                                                                                                                                                                  getBillingAlertsResponseBody200Url = getBillingAlertsResponseBody200Url}
