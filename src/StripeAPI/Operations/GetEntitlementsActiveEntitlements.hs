-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getEntitlementsActiveEntitlements
module StripeAPI.Operations.GetEntitlementsActiveEntitlements where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/entitlements/active_entitlements
-- 
-- \<p>Retrieve a list of active entitlements for a customer\<\/p>
getEntitlementsActiveEntitlements :: forall m . StripeAPI.Common.MonadHTTP m => GetEntitlementsActiveEntitlementsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetEntitlementsActiveEntitlementsResponse) -- ^ Monadic computation which returns the result of the operation
getEntitlementsActiveEntitlements parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetEntitlementsActiveEntitlementsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetEntitlementsActiveEntitlementsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GetEntitlementsActiveEntitlementsResponseBody200)
                                                                                                                                                                                                           | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetEntitlementsActiveEntitlementsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                       Error)
                                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET") "/v1/entitlements/active_entitlements" [StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "customer") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getEntitlementsActiveEntitlementsParametersQueryCustomer parameters)) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                           StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getEntitlementsActiveEntitlementsParametersQueryEndingBefore parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                           StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getEntitlementsActiveEntitlementsParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                           StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getEntitlementsActiveEntitlementsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                           StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getEntitlementsActiveEntitlementsParametersQueryStartingAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.True])
-- | Defines the object schema located at @paths.\/v1\/entitlements\/active_entitlements.GET.parameters@ in the specification.
-- 
-- 
data GetEntitlementsActiveEntitlementsParameters = GetEntitlementsActiveEntitlementsParameters {
  -- | queryCustomer: Represents the parameter named \'customer\'
  -- 
  -- The ID of the customer.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  getEntitlementsActiveEntitlementsParametersQueryCustomer :: Data.Text.Internal.Text
  -- | queryEnding_before: Represents the parameter named \'ending_before\'
  -- 
  -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getEntitlementsActiveEntitlementsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryExpand: Represents the parameter named \'expand\'
  -- 
  -- Specifies which fields in the response should be expanded.
  , getEntitlementsActiveEntitlementsParametersQueryExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  , getEntitlementsActiveEntitlementsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryStarting_after: Represents the parameter named \'starting_after\'
  -- 
  -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getEntitlementsActiveEntitlementsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetEntitlementsActiveEntitlementsParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryCustomer" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsParametersQueryCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryStartingAfter obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryCustomer" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsParametersQueryCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getEntitlementsActiveEntitlementsParametersQueryStartingAfter obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetEntitlementsActiveEntitlementsParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetEntitlementsActiveEntitlementsParameters" (\obj -> ((((GHC.Base.pure GetEntitlementsActiveEntitlementsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after"))}
-- | Create a new 'GetEntitlementsActiveEntitlementsParameters' with all required fields.
mkGetEntitlementsActiveEntitlementsParameters :: Data.Text.Internal.Text -- ^ 'getEntitlementsActiveEntitlementsParametersQueryCustomer'
  -> GetEntitlementsActiveEntitlementsParameters
mkGetEntitlementsActiveEntitlementsParameters getEntitlementsActiveEntitlementsParametersQueryCustomer = GetEntitlementsActiveEntitlementsParameters{getEntitlementsActiveEntitlementsParametersQueryCustomer = getEntitlementsActiveEntitlementsParametersQueryCustomer,
                                                                                                                                                     getEntitlementsActiveEntitlementsParametersQueryEndingBefore = GHC.Maybe.Nothing,
                                                                                                                                                     getEntitlementsActiveEntitlementsParametersQueryExpand = GHC.Maybe.Nothing,
                                                                                                                                                     getEntitlementsActiveEntitlementsParametersQueryLimit = GHC.Maybe.Nothing,
                                                                                                                                                     getEntitlementsActiveEntitlementsParametersQueryStartingAfter = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'getEntitlementsActiveEntitlements'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetEntitlementsActiveEntitlementsResponseError' is used.
data GetEntitlementsActiveEntitlementsResponse =
   GetEntitlementsActiveEntitlementsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetEntitlementsActiveEntitlementsResponse200 GetEntitlementsActiveEntitlementsResponseBody200 -- ^ Successful response.
  | GetEntitlementsActiveEntitlementsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/entitlements\/active_entitlements.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetEntitlementsActiveEntitlementsResponseBody200 = GetEntitlementsActiveEntitlementsResponseBody200 {
  -- | data
  getEntitlementsActiveEntitlementsResponseBody200Data :: [Entitlements'activeEntitlement]
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getEntitlementsActiveEntitlementsResponseBody200HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getEntitlementsActiveEntitlementsResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetEntitlementsActiveEntitlementsResponseBody200
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getEntitlementsActiveEntitlementsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetEntitlementsActiveEntitlementsResponseBody200
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetEntitlementsActiveEntitlementsResponseBody200" (\obj -> ((GHC.Base.pure GetEntitlementsActiveEntitlementsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))}
-- | Create a new 'GetEntitlementsActiveEntitlementsResponseBody200' with all required fields.
mkGetEntitlementsActiveEntitlementsResponseBody200 :: [Entitlements'activeEntitlement] -- ^ 'getEntitlementsActiveEntitlementsResponseBody200Data'
  -> GHC.Types.Bool -- ^ 'getEntitlementsActiveEntitlementsResponseBody200HasMore'
  -> Data.Text.Internal.Text -- ^ 'getEntitlementsActiveEntitlementsResponseBody200Url'
  -> GetEntitlementsActiveEntitlementsResponseBody200
mkGetEntitlementsActiveEntitlementsResponseBody200 getEntitlementsActiveEntitlementsResponseBody200Data getEntitlementsActiveEntitlementsResponseBody200HasMore getEntitlementsActiveEntitlementsResponseBody200Url = GetEntitlementsActiveEntitlementsResponseBody200{getEntitlementsActiveEntitlementsResponseBody200Data = getEntitlementsActiveEntitlementsResponseBody200Data,
                                                                                                                                                                                                                                                                       getEntitlementsActiveEntitlementsResponseBody200HasMore = getEntitlementsActiveEntitlementsResponseBody200HasMore,
                                                                                                                                                                                                                                                                       getEntitlementsActiveEntitlementsResponseBody200Url = getEntitlementsActiveEntitlementsResponseBody200Url}
