-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getForwardingRequests
module StripeAPI.Operations.GetForwardingRequests where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/forwarding/requests
-- 
-- \<p>Lists all ForwardingRequest objects.\<\/p>
getForwardingRequests :: forall m . StripeAPI.Common.MonadHTTP m => GetForwardingRequestsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetForwardingRequestsResponse) -- ^ Monadic computation which returns the result of the operation
getForwardingRequests parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetForwardingRequestsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetForwardingRequestsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                 GetForwardingRequestsResponseBody200)
                                                                                                                                                                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetForwardingRequestsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                   Error)
                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET") "/v1/forwarding/requests" [StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getForwardingRequestsParametersQueryCreated parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                      StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getForwardingRequestsParametersQueryEndingBefore parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                      StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getForwardingRequestsParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                      StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getForwardingRequestsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                      StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getForwardingRequestsParametersQueryStartingAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.True])
-- | Defines the object schema located at @paths.\/v1\/forwarding\/requests.GET.parameters@ in the specification.
-- 
-- 
data GetForwardingRequestsParameters = GetForwardingRequestsParameters {
  -- | queryCreated: Represents the parameter named \'created\'
  -- 
  -- Similar to other List endpoints, filters results based on created timestamp. You can pass gt, gte, lt, and lte timestamp values.
  getForwardingRequestsParametersQueryCreated :: (GHC.Maybe.Maybe GetForwardingRequestsParametersQueryCreated')
  -- | queryEnding_before: Represents the parameter named \'ending_before\'
  -- 
  -- A pagination cursor to fetch the previous page of the list. The value must be a ForwardingRequest ID.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getForwardingRequestsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryExpand: Represents the parameter named \'expand\'
  -- 
  -- Specifies which fields in the response should be expanded.
  , getForwardingRequestsParametersQueryExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  , getForwardingRequestsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryStarting_after: Represents the parameter named \'starting_after\'
  -- 
  -- A pagination cursor to fetch the next page of the list. The value must be a ForwardingRequest ID.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getForwardingRequestsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetForwardingRequestsParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryStartingAfter obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryStartingAfter obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetForwardingRequestsParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetForwardingRequestsParameters" (\obj -> ((((GHC.Base.pure GetForwardingRequestsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after"))}
-- | Create a new 'GetForwardingRequestsParameters' with all required fields.
mkGetForwardingRequestsParameters :: GetForwardingRequestsParameters
mkGetForwardingRequestsParameters = GetForwardingRequestsParameters{getForwardingRequestsParametersQueryCreated = GHC.Maybe.Nothing,
                                                                    getForwardingRequestsParametersQueryEndingBefore = GHC.Maybe.Nothing,
                                                                    getForwardingRequestsParametersQueryExpand = GHC.Maybe.Nothing,
                                                                    getForwardingRequestsParametersQueryLimit = GHC.Maybe.Nothing,
                                                                    getForwardingRequestsParametersQueryStartingAfter = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/forwarding\/requests.GET.parameters.properties.queryCreated@ in the specification.
-- 
-- Represents the parameter named \'created\'
-- 
-- Similar to other List endpoints, filters results based on created timestamp. You can pass gt, gte, lt, and lte timestamp values.
data GetForwardingRequestsParametersQueryCreated' = GetForwardingRequestsParametersQueryCreated' {
  -- | gt
  getForwardingRequestsParametersQueryCreated'Gt :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | gte
  , getForwardingRequestsParametersQueryCreated'Gte :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lt
  , getForwardingRequestsParametersQueryCreated'Lt :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lte
  , getForwardingRequestsParametersQueryCreated'Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetForwardingRequestsParametersQueryCreated'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Lte obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getForwardingRequestsParametersQueryCreated'Lte obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetForwardingRequestsParametersQueryCreated'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetForwardingRequestsParametersQueryCreated'" (\obj -> (((GHC.Base.pure GetForwardingRequestsParametersQueryCreated' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lte"))}
-- | Create a new 'GetForwardingRequestsParametersQueryCreated'' with all required fields.
mkGetForwardingRequestsParametersQueryCreated' :: GetForwardingRequestsParametersQueryCreated'
mkGetForwardingRequestsParametersQueryCreated' = GetForwardingRequestsParametersQueryCreated'{getForwardingRequestsParametersQueryCreated'Gt = GHC.Maybe.Nothing,
                                                                                              getForwardingRequestsParametersQueryCreated'Gte = GHC.Maybe.Nothing,
                                                                                              getForwardingRequestsParametersQueryCreated'Lt = GHC.Maybe.Nothing,
                                                                                              getForwardingRequestsParametersQueryCreated'Lte = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'getForwardingRequests'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetForwardingRequestsResponseError' is used.
data GetForwardingRequestsResponse =
   GetForwardingRequestsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetForwardingRequestsResponse200 GetForwardingRequestsResponseBody200 -- ^ Successful response.
  | GetForwardingRequestsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/forwarding\/requests.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- List of ForwardingRequest data.
data GetForwardingRequestsResponseBody200 = GetForwardingRequestsResponseBody200 {
  -- | data
  getForwardingRequestsResponseBody200Data :: [Forwarding'request]
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getForwardingRequestsResponseBody200HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getForwardingRequestsResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetForwardingRequestsResponseBody200
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getForwardingRequestsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getForwardingRequestsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getForwardingRequestsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getForwardingRequestsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getForwardingRequestsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getForwardingRequestsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetForwardingRequestsResponseBody200
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetForwardingRequestsResponseBody200" (\obj -> ((GHC.Base.pure GetForwardingRequestsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))}
-- | Create a new 'GetForwardingRequestsResponseBody200' with all required fields.
mkGetForwardingRequestsResponseBody200 :: [Forwarding'request] -- ^ 'getForwardingRequestsResponseBody200Data'
  -> GHC.Types.Bool -- ^ 'getForwardingRequestsResponseBody200HasMore'
  -> Data.Text.Internal.Text -- ^ 'getForwardingRequestsResponseBody200Url'
  -> GetForwardingRequestsResponseBody200
mkGetForwardingRequestsResponseBody200 getForwardingRequestsResponseBody200Data getForwardingRequestsResponseBody200HasMore getForwardingRequestsResponseBody200Url = GetForwardingRequestsResponseBody200{getForwardingRequestsResponseBody200Data = getForwardingRequestsResponseBody200Data,
                                                                                                                                                                                                           getForwardingRequestsResponseBody200HasMore = getForwardingRequestsResponseBody200HasMore,
                                                                                                                                                                                                           getForwardingRequestsResponseBody200Url = getForwardingRequestsResponseBody200Url}
