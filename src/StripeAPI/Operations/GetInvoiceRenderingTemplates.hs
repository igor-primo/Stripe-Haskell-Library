-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getInvoiceRenderingTemplates
module StripeAPI.Operations.GetInvoiceRenderingTemplates where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/invoice_rendering_templates
-- 
-- \<p>List all templates, ordered by creation date, with the most recently created template appearing first.\<\/p>
getInvoiceRenderingTemplates :: forall m . StripeAPI.Common.MonadHTTP m => GetInvoiceRenderingTemplatesParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetInvoiceRenderingTemplatesResponse) -- ^ Monadic computation which returns the result of the operation
getInvoiceRenderingTemplates parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetInvoiceRenderingTemplatesResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetInvoiceRenderingTemplatesResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GetInvoiceRenderingTemplatesResponseBody200)
                                                                                                                                                                                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetInvoiceRenderingTemplatesResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                        Error)
                                                                                                                                                                                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET") "/v1/invoice_rendering_templates" [StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoiceRenderingTemplatesParametersQueryEndingBefore parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                            StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoiceRenderingTemplatesParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                            StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoiceRenderingTemplatesParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                            StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoiceRenderingTemplatesParametersQueryStartingAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                            StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoiceRenderingTemplatesParametersQueryStatus parameters) (Data.Text.Internal.pack "form") GHC.Types.True])
-- | Defines the object schema located at @paths.\/v1\/invoice_rendering_templates.GET.parameters@ in the specification.
-- 
-- 
data GetInvoiceRenderingTemplatesParameters = GetInvoiceRenderingTemplatesParameters {
  -- | queryEnding_before: Represents the parameter named \'ending_before\'
  -- 
  -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  getInvoiceRenderingTemplatesParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryExpand: Represents the parameter named \'expand\'
  -- 
  -- Specifies which fields in the response should be expanded.
  , getInvoiceRenderingTemplatesParametersQueryExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  , getInvoiceRenderingTemplatesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryStarting_after: Represents the parameter named \'starting_after\'
  -- 
  -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getInvoiceRenderingTemplatesParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryStatus: Represents the parameter named \'status\'
  , getInvoiceRenderingTemplatesParametersQueryStatus :: (GHC.Maybe.Maybe GetInvoiceRenderingTemplatesParametersQueryStatus')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetInvoiceRenderingTemplatesParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryStatus obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getInvoiceRenderingTemplatesParametersQueryStatus obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetInvoiceRenderingTemplatesParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetInvoiceRenderingTemplatesParameters" (\obj -> ((((GHC.Base.pure GetInvoiceRenderingTemplatesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus"))}
-- | Create a new 'GetInvoiceRenderingTemplatesParameters' with all required fields.
mkGetInvoiceRenderingTemplatesParameters :: GetInvoiceRenderingTemplatesParameters
mkGetInvoiceRenderingTemplatesParameters = GetInvoiceRenderingTemplatesParameters{getInvoiceRenderingTemplatesParametersQueryEndingBefore = GHC.Maybe.Nothing,
                                                                                  getInvoiceRenderingTemplatesParametersQueryExpand = GHC.Maybe.Nothing,
                                                                                  getInvoiceRenderingTemplatesParametersQueryLimit = GHC.Maybe.Nothing,
                                                                                  getInvoiceRenderingTemplatesParametersQueryStartingAfter = GHC.Maybe.Nothing,
                                                                                  getInvoiceRenderingTemplatesParametersQueryStatus = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/invoice_rendering_templates.GET.parameters.properties.queryStatus@ in the specification.
-- 
-- Represents the parameter named \'status\'
data GetInvoiceRenderingTemplatesParametersQueryStatus' =
   GetInvoiceRenderingTemplatesParametersQueryStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | GetInvoiceRenderingTemplatesParametersQueryStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | GetInvoiceRenderingTemplatesParametersQueryStatus'EnumActive -- ^ Represents the JSON value @"active"@
  | GetInvoiceRenderingTemplatesParametersQueryStatus'EnumArchived -- ^ Represents the JSON value @"archived"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetInvoiceRenderingTemplatesParametersQueryStatus'
    where {toJSON (GetInvoiceRenderingTemplatesParametersQueryStatus'Other val) = val;
           toJSON (GetInvoiceRenderingTemplatesParametersQueryStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (GetInvoiceRenderingTemplatesParametersQueryStatus'EnumActive) = "active";
           toJSON (GetInvoiceRenderingTemplatesParametersQueryStatus'EnumArchived) = "archived"}
instance Data.Aeson.Types.FromJSON.FromJSON GetInvoiceRenderingTemplatesParametersQueryStatus'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "active" -> GetInvoiceRenderingTemplatesParametersQueryStatus'EnumActive
                                             | val GHC.Classes.== "archived" -> GetInvoiceRenderingTemplatesParametersQueryStatus'EnumArchived
                                             | GHC.Base.otherwise -> GetInvoiceRenderingTemplatesParametersQueryStatus'Other val)}
-- | Represents a response of the operation 'getInvoiceRenderingTemplates'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetInvoiceRenderingTemplatesResponseError' is used.
data GetInvoiceRenderingTemplatesResponse =
   GetInvoiceRenderingTemplatesResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetInvoiceRenderingTemplatesResponse200 GetInvoiceRenderingTemplatesResponseBody200 -- ^ Successful response.
  | GetInvoiceRenderingTemplatesResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/invoice_rendering_templates.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetInvoiceRenderingTemplatesResponseBody200 = GetInvoiceRenderingTemplatesResponseBody200 {
  -- | data: Details about each object.
  getInvoiceRenderingTemplatesResponseBody200Data :: [InvoiceRenderingTemplate]
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getInvoiceRenderingTemplatesResponseBody200HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getInvoiceRenderingTemplatesResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetInvoiceRenderingTemplatesResponseBody200
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getInvoiceRenderingTemplatesResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getInvoiceRenderingTemplatesResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getInvoiceRenderingTemplatesResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getInvoiceRenderingTemplatesResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getInvoiceRenderingTemplatesResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getInvoiceRenderingTemplatesResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON GetInvoiceRenderingTemplatesResponseBody200
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "GetInvoiceRenderingTemplatesResponseBody200" (\obj -> ((GHC.Base.pure GetInvoiceRenderingTemplatesResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))}
-- | Create a new 'GetInvoiceRenderingTemplatesResponseBody200' with all required fields.
mkGetInvoiceRenderingTemplatesResponseBody200 :: [InvoiceRenderingTemplate] -- ^ 'getInvoiceRenderingTemplatesResponseBody200Data'
  -> GHC.Types.Bool -- ^ 'getInvoiceRenderingTemplatesResponseBody200HasMore'
  -> Data.Text.Internal.Text -- ^ 'getInvoiceRenderingTemplatesResponseBody200Url'
  -> GetInvoiceRenderingTemplatesResponseBody200
mkGetInvoiceRenderingTemplatesResponseBody200 getInvoiceRenderingTemplatesResponseBody200Data getInvoiceRenderingTemplatesResponseBody200HasMore getInvoiceRenderingTemplatesResponseBody200Url = GetInvoiceRenderingTemplatesResponseBody200{getInvoiceRenderingTemplatesResponseBody200Data = getInvoiceRenderingTemplatesResponseBody200Data,
                                                                                                                                                                                                                                              getInvoiceRenderingTemplatesResponseBody200HasMore = getInvoiceRenderingTemplatesResponseBody200HasMore,
                                                                                                                                                                                                                                              getInvoiceRenderingTemplatesResponseBody200Url = getInvoiceRenderingTemplatesResponseBody200Url}
