-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postAccountSessions
module StripeAPI.Operations.PostAccountSessions where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/account_sessions
-- 
-- \<p>Creates a AccountSession object that includes a single-use token that the platform can use on their front-end to grant client-side API access.\<\/p>
postAccountSessions :: forall m . StripeAPI.Common.MonadHTTP m => PostAccountSessionsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostAccountSessionsResponse) -- ^ Monadic computation which returns the result of the operation
postAccountSessions body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostAccountSessionsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostAccountSessionsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                     AccountSession)
                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostAccountSessionsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                       Error)
                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/account_sessions" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBody = PostAccountSessionsRequestBody {
  -- | account: The identifier of the account to create an Account Session for.
  postAccountSessionsRequestBodyAccount :: Data.Text.Internal.Text
  -- | components: Each key of the dictionary represents an embedded component, and each embedded component maps to its configuration (e.g. whether it has been enabled or not).
  , postAccountSessionsRequestBodyComponents :: PostAccountSessionsRequestBodyComponents'
  -- | expand: Specifies which fields in the response should be expanded.
  , postAccountSessionsRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["account" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyAccount obj] : ["components" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyExpand obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["account" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyAccount obj] : ["components" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyExpand obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBody" (\obj -> ((GHC.Base.pure PostAccountSessionsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "components")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))}
-- | Create a new 'PostAccountSessionsRequestBody' with all required fields.
mkPostAccountSessionsRequestBody :: Data.Text.Internal.Text -- ^ 'postAccountSessionsRequestBodyAccount'
  -> PostAccountSessionsRequestBodyComponents' -- ^ 'postAccountSessionsRequestBodyComponents'
  -> PostAccountSessionsRequestBody
mkPostAccountSessionsRequestBody postAccountSessionsRequestBodyAccount postAccountSessionsRequestBodyComponents = PostAccountSessionsRequestBody{postAccountSessionsRequestBodyAccount = postAccountSessionsRequestBodyAccount,
                                                                                                                                                 postAccountSessionsRequestBodyComponents = postAccountSessionsRequestBodyComponents,
                                                                                                                                                 postAccountSessionsRequestBodyExpand = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components@ in the specification.
-- 
-- Each key of the dictionary represents an embedded component, and each embedded component maps to its configuration (e.g. whether it has been enabled or not).
data PostAccountSessionsRequestBodyComponents' = PostAccountSessionsRequestBodyComponents' {
  -- | account_management
  postAccountSessionsRequestBodyComponents'AccountManagement :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'AccountManagement')
  -- | account_onboarding
  , postAccountSessionsRequestBodyComponents'AccountOnboarding :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'AccountOnboarding')
  -- | balances
  , postAccountSessionsRequestBodyComponents'Balances :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Balances')
  -- | disputes_list
  , postAccountSessionsRequestBodyComponents'DisputesList :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'DisputesList')
  -- | documents
  , postAccountSessionsRequestBodyComponents'Documents :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Documents')
  -- | financial_account
  , postAccountSessionsRequestBodyComponents'FinancialAccount :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'FinancialAccount')
  -- | financial_account_transactions
  , postAccountSessionsRequestBodyComponents'FinancialAccountTransactions :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions')
  -- | instant_payouts_promotion
  , postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion')
  -- | issuing_card
  , postAccountSessionsRequestBodyComponents'IssuingCard :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'IssuingCard')
  -- | issuing_cards_list
  , postAccountSessionsRequestBodyComponents'IssuingCardsList :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'IssuingCardsList')
  -- | notification_banner
  , postAccountSessionsRequestBodyComponents'NotificationBanner :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'NotificationBanner')
  -- | payment_details
  , postAccountSessionsRequestBodyComponents'PaymentDetails :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'PaymentDetails')
  -- | payment_disputes
  , postAccountSessionsRequestBodyComponents'PaymentDisputes :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'PaymentDisputes')
  -- | payments
  , postAccountSessionsRequestBodyComponents'Payments :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Payments')
  -- | payouts
  , postAccountSessionsRequestBodyComponents'Payouts :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Payouts')
  -- | payouts_list
  , postAccountSessionsRequestBodyComponents'PayoutsList :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'PayoutsList')
  -- | tax_registrations
  , postAccountSessionsRequestBodyComponents'TaxRegistrations :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'TaxRegistrations')
  -- | tax_settings
  , postAccountSessionsRequestBodyComponents'TaxSettings :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'TaxSettings')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_onboarding" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("balances" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disputes_list" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Documents obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account_transactions" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccountTransactions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts_promotion" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_card" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_cards_list" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("notification_banner" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_details" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_disputes" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts_list" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PayoutsList obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_registrations" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxRegistrations obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_settings" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxSettings obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_onboarding" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("balances" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disputes_list" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Documents obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account_transactions" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccountTransactions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts_promotion" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_card" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_cards_list" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("notification_banner" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_details" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_disputes" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts_list" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PayoutsList obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_registrations" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxRegistrations obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_settings" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxSettings obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'" (\obj -> (((((((((((((((((GHC.Base.pure PostAccountSessionsRequestBodyComponents' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_onboarding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "balances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disputes_list")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_account_transactions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "instant_payouts_promotion")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuing_card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuing_cards_list")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "notification_banner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_disputes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts_list")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_registrations")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_settings"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'' with all required fields.
mkPostAccountSessionsRequestBodyComponents' :: PostAccountSessionsRequestBodyComponents'
mkPostAccountSessionsRequestBodyComponents' = PostAccountSessionsRequestBodyComponents'{postAccountSessionsRequestBodyComponents'AccountManagement = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'AccountOnboarding = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'Balances = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'DisputesList = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'Documents = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'FinancialAccount = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'FinancialAccountTransactions = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'IssuingCard = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'IssuingCardsList = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'NotificationBanner = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'PaymentDetails = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'PaymentDisputes = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'Payments = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'Payouts = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'PayoutsList = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'TaxRegistrations = GHC.Maybe.Nothing,
                                                                                        postAccountSessionsRequestBodyComponents'TaxSettings = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.account_management@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'AccountManagement' = PostAccountSessionsRequestBodyComponents'AccountManagement' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'AccountManagement'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'AccountManagement'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'AccountManagement'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'AccountManagement'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'AccountManagement'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'AccountManagement'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'AccountManagement'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'AccountManagement'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'AccountManagement' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'AccountManagement'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'AccountManagement' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'AccountManagement'Enabled'
  -> PostAccountSessionsRequestBodyComponents'AccountManagement'
mkPostAccountSessionsRequestBodyComponents'AccountManagement' postAccountSessionsRequestBodyComponents'AccountManagement'Enabled = PostAccountSessionsRequestBodyComponents'AccountManagement'{postAccountSessionsRequestBodyComponents'AccountManagement'Enabled = postAccountSessionsRequestBodyComponents'AccountManagement'Enabled,
                                                                                                                                                                                               postAccountSessionsRequestBodyComponents'AccountManagement'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.account_management.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'AccountManagement'Features' = PostAccountSessionsRequestBodyComponents'AccountManagement'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'AccountManagement'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'AccountManagement'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'AccountManagement'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement'Features'ExternalAccountCollection obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountManagement'Features'ExternalAccountCollection obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'AccountManagement'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'AccountManagement'Features'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'AccountManagement'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'AccountManagement'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'AccountManagement'Features' :: PostAccountSessionsRequestBodyComponents'AccountManagement'Features'
mkPostAccountSessionsRequestBodyComponents'AccountManagement'Features' = PostAccountSessionsRequestBodyComponents'AccountManagement'Features'{postAccountSessionsRequestBodyComponents'AccountManagement'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                                              postAccountSessionsRequestBodyComponents'AccountManagement'Features'ExternalAccountCollection = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.account_onboarding@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'AccountOnboarding' = PostAccountSessionsRequestBodyComponents'AccountOnboarding' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'AccountOnboarding'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'AccountOnboarding'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'AccountOnboarding'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'AccountOnboarding'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'AccountOnboarding' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'AccountOnboarding'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'AccountOnboarding' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled'
  -> PostAccountSessionsRequestBodyComponents'AccountOnboarding'
mkPostAccountSessionsRequestBodyComponents'AccountOnboarding' postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled = PostAccountSessionsRequestBodyComponents'AccountOnboarding'{postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled = postAccountSessionsRequestBodyComponents'AccountOnboarding'Enabled,
                                                                                                                                                                                               postAccountSessionsRequestBodyComponents'AccountOnboarding'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.account_onboarding.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features' = PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'ExternalAccountCollection obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'ExternalAccountCollection obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'AccountOnboarding'Features' :: PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features'
mkPostAccountSessionsRequestBodyComponents'AccountOnboarding'Features' = PostAccountSessionsRequestBodyComponents'AccountOnboarding'Features'{postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                                              postAccountSessionsRequestBodyComponents'AccountOnboarding'Features'ExternalAccountCollection = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.balances@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Balances' = PostAccountSessionsRequestBodyComponents'Balances' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'Balances'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'Balances'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Balances'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Balances'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Balances'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Balances'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Balances'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Balances'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'Balances' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Balances'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Balances' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'Balances'Enabled'
  -> PostAccountSessionsRequestBodyComponents'Balances'
mkPostAccountSessionsRequestBodyComponents'Balances' postAccountSessionsRequestBodyComponents'Balances'Enabled = PostAccountSessionsRequestBodyComponents'Balances'{postAccountSessionsRequestBodyComponents'Balances'Enabled = postAccountSessionsRequestBodyComponents'Balances'Enabled,
                                                                                                                                                                    postAccountSessionsRequestBodyComponents'Balances'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.balances.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Balances'Features' = PostAccountSessionsRequestBodyComponents'Balances'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'Balances'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | edit_payout_schedule
  , postAccountSessionsRequestBodyComponents'Balances'Features'EditPayoutSchedule :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'Balances'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | instant_payouts
  , postAccountSessionsRequestBodyComponents'Balances'Features'InstantPayouts :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | standard_payouts
  , postAccountSessionsRequestBodyComponents'Balances'Features'StandardPayouts :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Balances'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("edit_payout_schedule" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'EditPayoutSchedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'InstantPayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("standard_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'StandardPayouts obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("edit_payout_schedule" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'EditPayoutSchedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'InstantPayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("standard_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Balances'Features'StandardPayouts obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Balances'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Balances'Features'" (\obj -> ((((GHC.Base.pure PostAccountSessionsRequestBodyComponents'Balances'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "edit_payout_schedule")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "instant_payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "standard_payouts"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Balances'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Balances'Features' :: PostAccountSessionsRequestBodyComponents'Balances'Features'
mkPostAccountSessionsRequestBodyComponents'Balances'Features' = PostAccountSessionsRequestBodyComponents'Balances'Features'{postAccountSessionsRequestBodyComponents'Balances'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Balances'Features'EditPayoutSchedule = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Balances'Features'ExternalAccountCollection = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Balances'Features'InstantPayouts = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Balances'Features'StandardPayouts = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.disputes_list@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'DisputesList' = PostAccountSessionsRequestBodyComponents'DisputesList' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'DisputesList'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'DisputesList'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'DisputesList'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'DisputesList'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'DisputesList'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'DisputesList'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'DisputesList'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'DisputesList'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'DisputesList' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'DisputesList'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'DisputesList' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'DisputesList'Enabled'
  -> PostAccountSessionsRequestBodyComponents'DisputesList'
mkPostAccountSessionsRequestBodyComponents'DisputesList' postAccountSessionsRequestBodyComponents'DisputesList'Enabled = PostAccountSessionsRequestBodyComponents'DisputesList'{postAccountSessionsRequestBodyComponents'DisputesList'Enabled = postAccountSessionsRequestBodyComponents'DisputesList'Enabled,
                                                                                                                                                                                postAccountSessionsRequestBodyComponents'DisputesList'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.disputes_list.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'DisputesList'Features' = PostAccountSessionsRequestBodyComponents'DisputesList'Features' {
  -- | capture_payments
  postAccountSessionsRequestBodyComponents'DisputesList'Features'CapturePayments :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | destination_on_behalf_of_charge_management
  , postAccountSessionsRequestBodyComponents'DisputesList'Features'DestinationOnBehalfOfChargeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dispute_management
  , postAccountSessionsRequestBodyComponents'DisputesList'Features'DisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | refund_management
  , postAccountSessionsRequestBodyComponents'DisputesList'Features'RefundManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'DisputesList'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'CapturePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'RefundManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'CapturePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'DisputesList'Features'RefundManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'DisputesList'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'DisputesList'Features'" (\obj -> (((GHC.Base.pure PostAccountSessionsRequestBodyComponents'DisputesList'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capture_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_on_behalf_of_charge_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dispute_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'DisputesList'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'DisputesList'Features' :: PostAccountSessionsRequestBodyComponents'DisputesList'Features'
mkPostAccountSessionsRequestBodyComponents'DisputesList'Features' = PostAccountSessionsRequestBodyComponents'DisputesList'Features'{postAccountSessionsRequestBodyComponents'DisputesList'Features'CapturePayments = GHC.Maybe.Nothing,
                                                                                                                                    postAccountSessionsRequestBodyComponents'DisputesList'Features'DestinationOnBehalfOfChargeManagement = GHC.Maybe.Nothing,
                                                                                                                                    postAccountSessionsRequestBodyComponents'DisputesList'Features'DisputeManagement = GHC.Maybe.Nothing,
                                                                                                                                    postAccountSessionsRequestBodyComponents'DisputesList'Features'RefundManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.documents@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Documents' = PostAccountSessionsRequestBodyComponents'Documents' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'Documents'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'Documents'Features :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Documents'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Documents'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Documents'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Documents'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Documents'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Documents'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Documents'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'Documents' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Documents'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Documents' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'Documents'Enabled'
  -> PostAccountSessionsRequestBodyComponents'Documents'
mkPostAccountSessionsRequestBodyComponents'Documents' postAccountSessionsRequestBodyComponents'Documents'Enabled = PostAccountSessionsRequestBodyComponents'Documents'{postAccountSessionsRequestBodyComponents'Documents'Enabled = postAccountSessionsRequestBodyComponents'Documents'Enabled,
                                                                                                                                                                       postAccountSessionsRequestBodyComponents'Documents'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.financial_account@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'FinancialAccount' = PostAccountSessionsRequestBodyComponents'FinancialAccount' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'FinancialAccount'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'FinancialAccount'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'FinancialAccount'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'FinancialAccount'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'FinancialAccount'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'FinancialAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'FinancialAccount'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'FinancialAccount' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled'
  -> PostAccountSessionsRequestBodyComponents'FinancialAccount'
mkPostAccountSessionsRequestBodyComponents'FinancialAccount' postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled = PostAccountSessionsRequestBodyComponents'FinancialAccount'{postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled = postAccountSessionsRequestBodyComponents'FinancialAccount'Enabled,
                                                                                                                                                                                            postAccountSessionsRequestBodyComponents'FinancialAccount'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.financial_account.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'FinancialAccount'Features' = PostAccountSessionsRequestBodyComponents'FinancialAccount'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'FinancialAccount'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'FinancialAccount'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | send_money
  , postAccountSessionsRequestBodyComponents'FinancialAccount'Features'SendMoney :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | transfer_balance
  , postAccountSessionsRequestBodyComponents'FinancialAccount'Features'TransferBalance :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'FinancialAccount'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("send_money" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'SendMoney obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_balance" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'TransferBalance obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("send_money" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'SendMoney obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_balance" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccount'Features'TransferBalance obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'FinancialAccount'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'FinancialAccount'Features'" (\obj -> (((GHC.Base.pure PostAccountSessionsRequestBodyComponents'FinancialAccount'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "send_money")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfer_balance"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'FinancialAccount'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'FinancialAccount'Features' :: PostAccountSessionsRequestBodyComponents'FinancialAccount'Features'
mkPostAccountSessionsRequestBodyComponents'FinancialAccount'Features' = PostAccountSessionsRequestBodyComponents'FinancialAccount'Features'{postAccountSessionsRequestBodyComponents'FinancialAccount'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'FinancialAccount'Features'ExternalAccountCollection = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'FinancialAccount'Features'SendMoney = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'FinancialAccount'Features'TransferBalance = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.financial_account_transactions@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions' = PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'FinancialAccountTransactions' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled'
  -> PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'
mkPostAccountSessionsRequestBodyComponents'FinancialAccountTransactions' postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled = PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'{postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled = postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Enabled,
                                                                                                                                                                                                                                postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.financial_account_transactions.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features' = PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features' {
  -- | card_spend_dispute_management
  postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'CardSpendDisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_spend_dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'CardSpendDisputeManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_spend_dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'CardSpendDisputeManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'" (\obj -> GHC.Base.pure PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_spend_dispute_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features' :: PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'
mkPostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features' = PostAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'{postAccountSessionsRequestBodyComponents'FinancialAccountTransactions'Features'CardSpendDisputeManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.instant_payouts_promotion@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion' = PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled'
  -> PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'
mkPostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion' postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled = PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'{postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled = postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Enabled,
                                                                                                                                                                                                                 postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.instant_payouts_promotion.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features' = PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | instant_payouts
  , postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'InstantPayouts :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'InstantPayouts obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'InstantPayouts obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'" (\obj -> ((GHC.Base.pure PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "instant_payouts"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features' :: PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'
mkPostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features' = PostAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'{postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                                                          postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'ExternalAccountCollection = GHC.Maybe.Nothing,
                                                                                                                                                          postAccountSessionsRequestBodyComponents'InstantPayoutsPromotion'Features'InstantPayouts = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.issuing_card@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'IssuingCard' = PostAccountSessionsRequestBodyComponents'IssuingCard' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'IssuingCard'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'IssuingCard'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'IssuingCard'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'IssuingCard'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'IssuingCard'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'IssuingCard'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'IssuingCard'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'IssuingCard'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'IssuingCard' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'IssuingCard'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'IssuingCard' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'IssuingCard'Enabled'
  -> PostAccountSessionsRequestBodyComponents'IssuingCard'
mkPostAccountSessionsRequestBodyComponents'IssuingCard' postAccountSessionsRequestBodyComponents'IssuingCard'Enabled = PostAccountSessionsRequestBodyComponents'IssuingCard'{postAccountSessionsRequestBodyComponents'IssuingCard'Enabled = postAccountSessionsRequestBodyComponents'IssuingCard'Enabled,
                                                                                                                                                                             postAccountSessionsRequestBodyComponents'IssuingCard'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.issuing_card.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'IssuingCard'Features' = PostAccountSessionsRequestBodyComponents'IssuingCard'Features' {
  -- | card_management
  postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | card_spend_dispute_management
  , postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardSpendDisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | cardholder_management
  , postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardholderManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | spend_control_management
  , postAccountSessionsRequestBodyComponents'IssuingCard'Features'SpendControlManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'IssuingCard'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_spend_dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardSpendDisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardholderManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("spend_control_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'SpendControlManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_spend_dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardSpendDisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardholderManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("spend_control_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCard'Features'SpendControlManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'IssuingCard'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'IssuingCard'Features'" (\obj -> (((GHC.Base.pure PostAccountSessionsRequestBodyComponents'IssuingCard'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_spend_dispute_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cardholder_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "spend_control_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'IssuingCard'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'IssuingCard'Features' :: PostAccountSessionsRequestBodyComponents'IssuingCard'Features'
mkPostAccountSessionsRequestBodyComponents'IssuingCard'Features' = PostAccountSessionsRequestBodyComponents'IssuingCard'Features'{postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardManagement = GHC.Maybe.Nothing,
                                                                                                                                  postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardSpendDisputeManagement = GHC.Maybe.Nothing,
                                                                                                                                  postAccountSessionsRequestBodyComponents'IssuingCard'Features'CardholderManagement = GHC.Maybe.Nothing,
                                                                                                                                  postAccountSessionsRequestBodyComponents'IssuingCard'Features'SpendControlManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.issuing_cards_list@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'IssuingCardsList' = PostAccountSessionsRequestBodyComponents'IssuingCardsList' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'IssuingCardsList'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'IssuingCardsList'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'IssuingCardsList'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'IssuingCardsList'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'IssuingCardsList' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'IssuingCardsList'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'IssuingCardsList' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled'
  -> PostAccountSessionsRequestBodyComponents'IssuingCardsList'
mkPostAccountSessionsRequestBodyComponents'IssuingCardsList' postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled = PostAccountSessionsRequestBodyComponents'IssuingCardsList'{postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled = postAccountSessionsRequestBodyComponents'IssuingCardsList'Enabled,
                                                                                                                                                                                            postAccountSessionsRequestBodyComponents'IssuingCardsList'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.issuing_cards_list.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features' = PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features' {
  -- | card_management
  postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | card_spend_dispute_management
  , postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardSpendDisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | cardholder_management
  , postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardholderManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | disable_stripe_user_authentication
  , postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | spend_control_management
  , postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'SpendControlManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_spend_dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardSpendDisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardholderManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("spend_control_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'SpendControlManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_spend_dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardSpendDisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardholderManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("spend_control_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'SpendControlManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features'" (\obj -> ((((GHC.Base.pure PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_spend_dispute_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cardholder_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "spend_control_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'IssuingCardsList'Features' :: PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features'
mkPostAccountSessionsRequestBodyComponents'IssuingCardsList'Features' = PostAccountSessionsRequestBodyComponents'IssuingCardsList'Features'{postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardManagement = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardSpendDisputeManagement = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'CardholderManagement = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                                            postAccountSessionsRequestBodyComponents'IssuingCardsList'Features'SpendControlManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.notification_banner@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'NotificationBanner' = PostAccountSessionsRequestBodyComponents'NotificationBanner' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'NotificationBanner'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'NotificationBanner'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'NotificationBanner'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'NotificationBanner'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'NotificationBanner'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'NotificationBanner' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'NotificationBanner'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'NotificationBanner' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled'
  -> PostAccountSessionsRequestBodyComponents'NotificationBanner'
mkPostAccountSessionsRequestBodyComponents'NotificationBanner' postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled = PostAccountSessionsRequestBodyComponents'NotificationBanner'{postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled = postAccountSessionsRequestBodyComponents'NotificationBanner'Enabled,
                                                                                                                                                                                                  postAccountSessionsRequestBodyComponents'NotificationBanner'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.notification_banner.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'NotificationBanner'Features' = PostAccountSessionsRequestBodyComponents'NotificationBanner'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'NotificationBanner'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'NotificationBanner'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'NotificationBanner'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner'Features'ExternalAccountCollection obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'NotificationBanner'Features'ExternalAccountCollection obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'NotificationBanner'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'NotificationBanner'Features'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'NotificationBanner'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'NotificationBanner'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'NotificationBanner'Features' :: PostAccountSessionsRequestBodyComponents'NotificationBanner'Features'
mkPostAccountSessionsRequestBodyComponents'NotificationBanner'Features' = PostAccountSessionsRequestBodyComponents'NotificationBanner'Features'{postAccountSessionsRequestBodyComponents'NotificationBanner'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                                                postAccountSessionsRequestBodyComponents'NotificationBanner'Features'ExternalAccountCollection = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payment_details@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'PaymentDetails' = PostAccountSessionsRequestBodyComponents'PaymentDetails' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'PaymentDetails'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'PaymentDetails'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'PaymentDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'PaymentDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'PaymentDetails'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'PaymentDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'PaymentDetails'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'PaymentDetails' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled'
  -> PostAccountSessionsRequestBodyComponents'PaymentDetails'
mkPostAccountSessionsRequestBodyComponents'PaymentDetails' postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled = PostAccountSessionsRequestBodyComponents'PaymentDetails'{postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled = postAccountSessionsRequestBodyComponents'PaymentDetails'Enabled,
                                                                                                                                                                                      postAccountSessionsRequestBodyComponents'PaymentDetails'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payment_details.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'PaymentDetails'Features' = PostAccountSessionsRequestBodyComponents'PaymentDetails'Features' {
  -- | capture_payments
  postAccountSessionsRequestBodyComponents'PaymentDetails'Features'CapturePayments :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | destination_on_behalf_of_charge_management
  , postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DestinationOnBehalfOfChargeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dispute_management
  , postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | refund_management
  , postAccountSessionsRequestBodyComponents'PaymentDetails'Features'RefundManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'PaymentDetails'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'CapturePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'RefundManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'CapturePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDetails'Features'RefundManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'PaymentDetails'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'PaymentDetails'Features'" (\obj -> (((GHC.Base.pure PostAccountSessionsRequestBodyComponents'PaymentDetails'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capture_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_on_behalf_of_charge_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dispute_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'PaymentDetails'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'PaymentDetails'Features' :: PostAccountSessionsRequestBodyComponents'PaymentDetails'Features'
mkPostAccountSessionsRequestBodyComponents'PaymentDetails'Features' = PostAccountSessionsRequestBodyComponents'PaymentDetails'Features'{postAccountSessionsRequestBodyComponents'PaymentDetails'Features'CapturePayments = GHC.Maybe.Nothing,
                                                                                                                                        postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DestinationOnBehalfOfChargeManagement = GHC.Maybe.Nothing,
                                                                                                                                        postAccountSessionsRequestBodyComponents'PaymentDetails'Features'DisputeManagement = GHC.Maybe.Nothing,
                                                                                                                                        postAccountSessionsRequestBodyComponents'PaymentDetails'Features'RefundManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payment_disputes@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'PaymentDisputes' = PostAccountSessionsRequestBodyComponents'PaymentDisputes' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'PaymentDisputes'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'PaymentDisputes'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'PaymentDisputes'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'PaymentDisputes'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'PaymentDisputes' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'PaymentDisputes'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'PaymentDisputes' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled'
  -> PostAccountSessionsRequestBodyComponents'PaymentDisputes'
mkPostAccountSessionsRequestBodyComponents'PaymentDisputes' postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled = PostAccountSessionsRequestBodyComponents'PaymentDisputes'{postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled = postAccountSessionsRequestBodyComponents'PaymentDisputes'Enabled,
                                                                                                                                                                                         postAccountSessionsRequestBodyComponents'PaymentDisputes'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payment_disputes.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features' = PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features' {
  -- | destination_on_behalf_of_charge_management
  postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DestinationOnBehalfOfChargeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dispute_management
  , postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | refund_management
  , postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'RefundManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'RefundManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'RefundManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features'" (\obj -> ((GHC.Base.pure PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_on_behalf_of_charge_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dispute_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'PaymentDisputes'Features' :: PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features'
mkPostAccountSessionsRequestBodyComponents'PaymentDisputes'Features' = PostAccountSessionsRequestBodyComponents'PaymentDisputes'Features'{postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DestinationOnBehalfOfChargeManagement = GHC.Maybe.Nothing,
                                                                                                                                          postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'DisputeManagement = GHC.Maybe.Nothing,
                                                                                                                                          postAccountSessionsRequestBodyComponents'PaymentDisputes'Features'RefundManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payments@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Payments' = PostAccountSessionsRequestBodyComponents'Payments' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'Payments'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'Payments'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Payments'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Payments'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Payments'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Payments'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Payments'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Payments'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Payments'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Payments' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'Payments'Enabled'
  -> PostAccountSessionsRequestBodyComponents'Payments'
mkPostAccountSessionsRequestBodyComponents'Payments' postAccountSessionsRequestBodyComponents'Payments'Enabled = PostAccountSessionsRequestBodyComponents'Payments'{postAccountSessionsRequestBodyComponents'Payments'Enabled = postAccountSessionsRequestBodyComponents'Payments'Enabled,
                                                                                                                                                                    postAccountSessionsRequestBodyComponents'Payments'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payments.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Payments'Features' = PostAccountSessionsRequestBodyComponents'Payments'Features' {
  -- | capture_payments
  postAccountSessionsRequestBodyComponents'Payments'Features'CapturePayments :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | destination_on_behalf_of_charge_management
  , postAccountSessionsRequestBodyComponents'Payments'Features'DestinationOnBehalfOfChargeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dispute_management
  , postAccountSessionsRequestBodyComponents'Payments'Features'DisputeManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | refund_management
  , postAccountSessionsRequestBodyComponents'Payments'Features'RefundManagement :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Payments'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'CapturePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'RefundManagement obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_payments" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'CapturePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_on_behalf_of_charge_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'DestinationOnBehalfOfChargeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'DisputeManagement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_management" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payments'Features'RefundManagement obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Payments'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Payments'Features'" (\obj -> (((GHC.Base.pure PostAccountSessionsRequestBodyComponents'Payments'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capture_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_on_behalf_of_charge_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dispute_management")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_management"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Payments'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Payments'Features' :: PostAccountSessionsRequestBodyComponents'Payments'Features'
mkPostAccountSessionsRequestBodyComponents'Payments'Features' = PostAccountSessionsRequestBodyComponents'Payments'Features'{postAccountSessionsRequestBodyComponents'Payments'Features'CapturePayments = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Payments'Features'DestinationOnBehalfOfChargeManagement = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Payments'Features'DisputeManagement = GHC.Maybe.Nothing,
                                                                                                                            postAccountSessionsRequestBodyComponents'Payments'Features'RefundManagement = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payouts@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Payouts' = PostAccountSessionsRequestBodyComponents'Payouts' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'Payouts'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'Payouts'Features :: (GHC.Maybe.Maybe PostAccountSessionsRequestBodyComponents'Payouts'Features')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Payouts'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Payouts'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'Payouts'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Payouts'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Payouts'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'Payouts' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Payouts'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Payouts' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'Payouts'Enabled'
  -> PostAccountSessionsRequestBodyComponents'Payouts'
mkPostAccountSessionsRequestBodyComponents'Payouts' postAccountSessionsRequestBodyComponents'Payouts'Enabled = PostAccountSessionsRequestBodyComponents'Payouts'{postAccountSessionsRequestBodyComponents'Payouts'Enabled = postAccountSessionsRequestBodyComponents'Payouts'Enabled,
                                                                                                                                                                 postAccountSessionsRequestBodyComponents'Payouts'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payouts.properties.features@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'Payouts'Features' = PostAccountSessionsRequestBodyComponents'Payouts'Features' {
  -- | disable_stripe_user_authentication
  postAccountSessionsRequestBodyComponents'Payouts'Features'DisableStripeUserAuthentication :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | edit_payout_schedule
  , postAccountSessionsRequestBodyComponents'Payouts'Features'EditPayoutSchedule :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | external_account_collection
  , postAccountSessionsRequestBodyComponents'Payouts'Features'ExternalAccountCollection :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | instant_payouts
  , postAccountSessionsRequestBodyComponents'Payouts'Features'InstantPayouts :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | standard_payouts
  , postAccountSessionsRequestBodyComponents'Payouts'Features'StandardPayouts :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'Payouts'Features'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("edit_payout_schedule" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'EditPayoutSchedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'InstantPayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("standard_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'StandardPayouts obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'DisableStripeUserAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("edit_payout_schedule" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'EditPayoutSchedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account_collection" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'ExternalAccountCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instant_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'InstantPayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("standard_payouts" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'Payouts'Features'StandardPayouts obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'Payouts'Features'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'Payouts'Features'" (\obj -> ((((GHC.Base.pure PostAccountSessionsRequestBodyComponents'Payouts'Features' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "edit_payout_schedule")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "instant_payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "standard_payouts"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'Payouts'Features'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'Payouts'Features' :: PostAccountSessionsRequestBodyComponents'Payouts'Features'
mkPostAccountSessionsRequestBodyComponents'Payouts'Features' = PostAccountSessionsRequestBodyComponents'Payouts'Features'{postAccountSessionsRequestBodyComponents'Payouts'Features'DisableStripeUserAuthentication = GHC.Maybe.Nothing,
                                                                                                                          postAccountSessionsRequestBodyComponents'Payouts'Features'EditPayoutSchedule = GHC.Maybe.Nothing,
                                                                                                                          postAccountSessionsRequestBodyComponents'Payouts'Features'ExternalAccountCollection = GHC.Maybe.Nothing,
                                                                                                                          postAccountSessionsRequestBodyComponents'Payouts'Features'InstantPayouts = GHC.Maybe.Nothing,
                                                                                                                          postAccountSessionsRequestBodyComponents'Payouts'Features'StandardPayouts = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.payouts_list@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'PayoutsList' = PostAccountSessionsRequestBodyComponents'PayoutsList' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'PayoutsList'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'PayoutsList'Features :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'PayoutsList'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'PayoutsList'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PayoutsList'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'PayoutsList'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'PayoutsList'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'PayoutsList'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'PayoutsList'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'PayoutsList' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'PayoutsList'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'PayoutsList' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'PayoutsList'Enabled'
  -> PostAccountSessionsRequestBodyComponents'PayoutsList'
mkPostAccountSessionsRequestBodyComponents'PayoutsList' postAccountSessionsRequestBodyComponents'PayoutsList'Enabled = PostAccountSessionsRequestBodyComponents'PayoutsList'{postAccountSessionsRequestBodyComponents'PayoutsList'Enabled = postAccountSessionsRequestBodyComponents'PayoutsList'Enabled,
                                                                                                                                                                             postAccountSessionsRequestBodyComponents'PayoutsList'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.tax_registrations@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'TaxRegistrations' = PostAccountSessionsRequestBodyComponents'TaxRegistrations' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'TaxRegistrations'Features :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'TaxRegistrations'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxRegistrations'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxRegistrations'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'TaxRegistrations'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'TaxRegistrations'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'TaxRegistrations' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'TaxRegistrations'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'TaxRegistrations' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled'
  -> PostAccountSessionsRequestBodyComponents'TaxRegistrations'
mkPostAccountSessionsRequestBodyComponents'TaxRegistrations' postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled = PostAccountSessionsRequestBodyComponents'TaxRegistrations'{postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled = postAccountSessionsRequestBodyComponents'TaxRegistrations'Enabled,
                                                                                                                                                                                            postAccountSessionsRequestBodyComponents'TaxRegistrations'Features = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account_sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.components.properties.tax_settings@ in the specification.
-- 
-- 
data PostAccountSessionsRequestBodyComponents'TaxSettings' = PostAccountSessionsRequestBodyComponents'TaxSettings' {
  -- | enabled
  postAccountSessionsRequestBodyComponents'TaxSettings'Enabled :: GHC.Types.Bool
  -- | features
  , postAccountSessionsRequestBodyComponents'TaxSettings'Features :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountSessionsRequestBodyComponents'TaxSettings'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'TaxSettings'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxSettings'Features obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postAccountSessionsRequestBodyComponents'TaxSettings'Enabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postAccountSessionsRequestBodyComponents'TaxSettings'Features obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountSessionsRequestBodyComponents'TaxSettings'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountSessionsRequestBodyComponents'TaxSettings'" (\obj -> (GHC.Base.pure PostAccountSessionsRequestBodyComponents'TaxSettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features"))}
-- | Create a new 'PostAccountSessionsRequestBodyComponents'TaxSettings'' with all required fields.
mkPostAccountSessionsRequestBodyComponents'TaxSettings' :: GHC.Types.Bool -- ^ 'postAccountSessionsRequestBodyComponents'TaxSettings'Enabled'
  -> PostAccountSessionsRequestBodyComponents'TaxSettings'
mkPostAccountSessionsRequestBodyComponents'TaxSettings' postAccountSessionsRequestBodyComponents'TaxSettings'Enabled = PostAccountSessionsRequestBodyComponents'TaxSettings'{postAccountSessionsRequestBodyComponents'TaxSettings'Enabled = postAccountSessionsRequestBodyComponents'TaxSettings'Enabled,
                                                                                                                                                                             postAccountSessionsRequestBodyComponents'TaxSettings'Features = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postAccountSessions'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountSessionsResponseError' is used.
data PostAccountSessionsResponse =
   PostAccountSessionsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostAccountSessionsResponse200 AccountSession -- ^ Successful response.
  | PostAccountSessionsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
