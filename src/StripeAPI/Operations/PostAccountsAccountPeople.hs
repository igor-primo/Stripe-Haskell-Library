-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postAccountsAccountPeople
module StripeAPI.Operations.PostAccountsAccountPeople where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/accounts/{account}/people
-- 
-- \<p>Creates a new person.\<\/p>
postAccountsAccountPeople :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ account | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostAccountsAccountPeopleResponse) -- ^ Monadic computation which returns the result of the operation
postAccountsAccountPeople account
                          body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostAccountsAccountPeopleResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostAccountsAccountPeopleResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                       Person)
                                                                                                                                                                                     | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostAccountsAccountPeopleResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                         Error)
                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/accounts/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel account)) GHC.Base.<> "/people")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBody = PostAccountsAccountPeopleRequestBody {
  -- | additional_tos_acceptances: Details on the legal guardian\'s or authorizer\'s acceptance of the required Stripe agreements.
  postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances')
  -- | address: The person\'s address.
  , postAccountsAccountPeopleRequestBodyAddress :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyAddress')
  -- | address_kana: The Kana variation of the person\'s address (Japan only).
  , postAccountsAccountPeopleRequestBodyAddressKana :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyAddressKana')
  -- | address_kanji: The Kanji variation of the person\'s address (Japan only).
  , postAccountsAccountPeopleRequestBodyAddressKanji :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyAddressKanji')
  -- | dob: The person\'s date of birth.
  , postAccountsAccountPeopleRequestBodyDob :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyDob'Variants)
  -- | documents: Documents that may be submitted to satisfy various informational requests.
  , postAccountsAccountPeopleRequestBodyDocuments :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyDocuments')
  -- | email: The person\'s email address.
  , postAccountsAccountPeopleRequestBodyEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expand: Specifies which fields in the response should be expanded.
  , postAccountsAccountPeopleRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | first_name: The person\'s first name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyFirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name_kana: The Kana variation of the person\'s first name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyFirstNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name_kanji: The Kanji variation of the person\'s first name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyFirstNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | full_name_aliases: A list of alternate names or aliases that the person is known by.
  , postAccountsAccountPeopleRequestBodyFullNameAliases :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyFullNameAliases'Variants)
  -- | gender: The person\'s gender (International regulations require either \"male\" or \"female\").
  , postAccountsAccountPeopleRequestBodyGender :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id_number: The person\'s ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https:\/\/docs.stripe.com\/js\/tokens\/create_token?type=pii).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyIdNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id_number_secondary: The person\'s secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https:\/\/docs.stripe.com\/js\/tokens\/create_token?type=pii).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyIdNumberSecondary :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name: The person\'s last name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyLastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name_kana: The Kana variation of the person\'s last name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyLastNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name_kanji: The Kanji variation of the person\'s last name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyLastNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | maiden_name: The person\'s maiden name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyMaidenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postAccountsAccountPeopleRequestBodyMetadata :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyMetadata'Variants)
  -- | nationality: The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyNationality :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | person_token: A [person token](https:\/\/docs.stripe.com\/connect\/account-tokens), used to securely provide details to the person.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyPersonToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phone: The person\'s phone number.
  , postAccountsAccountPeopleRequestBodyPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | political_exposure: Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
  , postAccountsAccountPeopleRequestBodyPoliticalExposure :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyPoliticalExposure')
  -- | registered_address: The person\'s registered address.
  , postAccountsAccountPeopleRequestBodyRegisteredAddress :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyRegisteredAddress')
  -- | relationship: The relationship that this person has with the account\'s legal entity.
  , postAccountsAccountPeopleRequestBodyRelationship :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyRelationship')
  -- | ssn_last_4: The last four digits of the person\'s Social Security number (U.S. only).
  , postAccountsAccountPeopleRequestBodySsnLast_4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | us_cfpb_data: Demographic data related to the person.
  , postAccountsAccountPeopleRequestBodyUsCfpbData :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyUsCfpbData')
  -- | verification: The person\'s verification status.
  , postAccountsAccountPeopleRequestBodyVerification :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyVerification')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_tos_acceptances" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyGender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyIdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyLastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyLastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyLastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyMaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nationality" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyNationality obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("person_token" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyPersonToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyPoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("relationship" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodySsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_cfpb_data" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_tos_acceptances" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyFullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyGender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyIdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyLastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyLastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyLastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyMaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nationality" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyNationality obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("person_token" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyPersonToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyPoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("relationship" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodySsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_cfpb_data" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBody" (\obj -> ((((((((((((((((((((((((((((GHC.Base.pure PostAccountsAccountPeopleRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_tos_acceptances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "full_name_aliases")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gender")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number_secondary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maiden_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nationality")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "person_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "political_exposure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registered_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "relationship")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ssn_last_4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_cfpb_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBody' with all required fields.
mkPostAccountsAccountPeopleRequestBody :: PostAccountsAccountPeopleRequestBody
mkPostAccountsAccountPeopleRequestBody = PostAccountsAccountPeopleRequestBody{postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyAddress = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyAddressKana = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyAddressKanji = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyDob = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyDocuments = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyEmail = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyExpand = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyFirstName = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyFirstNameKana = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyFirstNameKanji = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyFullNameAliases = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyGender = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyIdNumber = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyIdNumberSecondary = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyLastName = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyLastNameKana = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyLastNameKanji = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyMaidenName = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyNationality = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyPersonToken = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyPhone = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyPoliticalExposure = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyRegisteredAddress = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyRelationship = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodySsnLast_4 = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyUsCfpbData = GHC.Maybe.Nothing,
                                                                              postAccountsAccountPeopleRequestBodyVerification = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.additional_tos_acceptances@ in the specification.
-- 
-- Details on the legal guardian\'s or authorizer\'s acceptance of the required Stripe agreements.
data PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances' = PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances' {
  -- | account
  postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'" (\obj -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances' :: PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'
mkPostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances' = PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'{postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.additional_tos_acceptances.properties.account@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account' = PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account' {
  -- | date
  postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Date :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | ip
  , postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent
  , postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'" (\obj -> ((GHC.Base.pure PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account' :: PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'
mkPostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account' = PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'{postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Date = GHC.Maybe.Nothing,
                                                                                                                                                postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'Ip = GHC.Maybe.Nothing,
                                                                                                                                                postAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.additional_tos_acceptances.properties.account.properties.user_agent.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants =
   PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyAdditionalTosAcceptances'Account'UserAgent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address@ in the specification.
-- 
-- The person\'s address.
data PostAccountsAccountPeopleRequestBodyAddress' = PostAccountsAccountPeopleRequestBodyAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountsAccountPeopleRequestBodyAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeopleRequestBodyAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeopleRequestBodyAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyAddress'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddress'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyAddress'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPeopleRequestBodyAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyAddress'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyAddress' :: PostAccountsAccountPeopleRequestBodyAddress'
mkPostAccountsAccountPeopleRequestBodyAddress' = PostAccountsAccountPeopleRequestBodyAddress'{postAccountsAccountPeopleRequestBodyAddress'City = GHC.Maybe.Nothing,
                                                                                              postAccountsAccountPeopleRequestBodyAddress'Country = GHC.Maybe.Nothing,
                                                                                              postAccountsAccountPeopleRequestBodyAddress'Line1 = GHC.Maybe.Nothing,
                                                                                              postAccountsAccountPeopleRequestBodyAddress'Line2 = GHC.Maybe.Nothing,
                                                                                              postAccountsAccountPeopleRequestBodyAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                              postAccountsAccountPeopleRequestBodyAddress'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address_kana@ in the specification.
-- 
-- The Kana variation of the person\'s address (Japan only).
data PostAccountsAccountPeopleRequestBodyAddressKana' = PostAccountsAccountPeopleRequestBodyAddressKana' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountsAccountPeopleRequestBodyAddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyAddressKana'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Town obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKana'Town obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyAddressKana'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyAddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountPeopleRequestBodyAddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyAddressKana'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyAddressKana' :: PostAccountsAccountPeopleRequestBodyAddressKana'
mkPostAccountsAccountPeopleRequestBodyAddressKana' = PostAccountsAccountPeopleRequestBodyAddressKana'{postAccountsAccountPeopleRequestBodyAddressKana'City = GHC.Maybe.Nothing,
                                                                                                      postAccountsAccountPeopleRequestBodyAddressKana'Country = GHC.Maybe.Nothing,
                                                                                                      postAccountsAccountPeopleRequestBodyAddressKana'Line1 = GHC.Maybe.Nothing,
                                                                                                      postAccountsAccountPeopleRequestBodyAddressKana'Line2 = GHC.Maybe.Nothing,
                                                                                                      postAccountsAccountPeopleRequestBodyAddressKana'PostalCode = GHC.Maybe.Nothing,
                                                                                                      postAccountsAccountPeopleRequestBodyAddressKana'State = GHC.Maybe.Nothing,
                                                                                                      postAccountsAccountPeopleRequestBodyAddressKana'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address_kanji@ in the specification.
-- 
-- The Kanji variation of the person\'s address (Japan only).
data PostAccountsAccountPeopleRequestBodyAddressKanji' = PostAccountsAccountPeopleRequestBodyAddressKanji' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountsAccountPeopleRequestBodyAddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyAddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyAddressKanji'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Town obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyAddressKanji'Town obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyAddressKanji'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyAddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountPeopleRequestBodyAddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyAddressKanji'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyAddressKanji' :: PostAccountsAccountPeopleRequestBodyAddressKanji'
mkPostAccountsAccountPeopleRequestBodyAddressKanji' = PostAccountsAccountPeopleRequestBodyAddressKanji'{postAccountsAccountPeopleRequestBodyAddressKanji'City = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyAddressKanji'Country = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyAddressKanji'Line1 = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyAddressKanji'Line2 = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyAddressKanji'PostalCode = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyAddressKanji'State = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyAddressKanji'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.dob.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDob'OneOf1 = PostAccountsAccountPeopleRequestBodyDob'OneOf1 {
  -- | day
  postAccountsAccountPeopleRequestBodyDob'OneOf1Day :: GHC.Types.Int
  -- | month
  , postAccountsAccountPeopleRequestBodyDob'OneOf1Month :: GHC.Types.Int
  -- | year
  , postAccountsAccountPeopleRequestBodyDob'OneOf1Year :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDob'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsAccountPeopleRequestBodyDob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsAccountPeopleRequestBodyDob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsAccountPeopleRequestBodyDob'OneOf1Year obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsAccountPeopleRequestBodyDob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsAccountPeopleRequestBodyDob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsAccountPeopleRequestBodyDob'OneOf1Year obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDob'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyDob'OneOf1" (\obj -> ((GHC.Base.pure PostAccountsAccountPeopleRequestBodyDob'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyDob'OneOf1' with all required fields.
mkPostAccountsAccountPeopleRequestBodyDob'OneOf1 :: GHC.Types.Int -- ^ 'postAccountsAccountPeopleRequestBodyDob'OneOf1Day'
  -> GHC.Types.Int -- ^ 'postAccountsAccountPeopleRequestBodyDob'OneOf1Month'
  -> GHC.Types.Int -- ^ 'postAccountsAccountPeopleRequestBodyDob'OneOf1Year'
  -> PostAccountsAccountPeopleRequestBodyDob'OneOf1
mkPostAccountsAccountPeopleRequestBodyDob'OneOf1 postAccountsAccountPeopleRequestBodyDob'OneOf1Day postAccountsAccountPeopleRequestBodyDob'OneOf1Month postAccountsAccountPeopleRequestBodyDob'OneOf1Year = PostAccountsAccountPeopleRequestBodyDob'OneOf1{postAccountsAccountPeopleRequestBodyDob'OneOf1Day = postAccountsAccountPeopleRequestBodyDob'OneOf1Day,
                                                                                                                                                                                                                                                           postAccountsAccountPeopleRequestBodyDob'OneOf1Month = postAccountsAccountPeopleRequestBodyDob'OneOf1Month,
                                                                                                                                                                                                                                                           postAccountsAccountPeopleRequestBodyDob'OneOf1Year = postAccountsAccountPeopleRequestBodyDob'OneOf1Year}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.dob.anyOf@ in the specification.
-- 
-- The person\'s date of birth.
data PostAccountsAccountPeopleRequestBodyDob'Variants =
   PostAccountsAccountPeopleRequestBodyDob'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyDob'PostAccountsAccountPeopleRequestBodyDob'OneOf1 PostAccountsAccountPeopleRequestBodyDob'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDob'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyDob'PostAccountsAccountPeopleRequestBodyDob'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyDob'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDob'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDob'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyDob'PostAccountsAccountPeopleRequestBodyDob'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents@ in the specification.
-- 
-- Documents that may be submitted to satisfy various informational requests.
data PostAccountsAccountPeopleRequestBodyDocuments' = PostAccountsAccountPeopleRequestBodyDocuments' {
  -- | company_authorization
  postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization')
  -- | passport
  , postAccountsAccountPeopleRequestBodyDocuments'Passport :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyDocuments'Passport')
  -- | visa
  , postAccountsAccountPeopleRequestBodyDocuments'Visa :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyDocuments'Visa')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_authorization" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passport" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Passport obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Visa obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_authorization" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passport" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Passport obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Visa obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyDocuments'" (\obj -> ((GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_authorization")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "passport")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "visa"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyDocuments'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyDocuments' :: PostAccountsAccountPeopleRequestBodyDocuments'
mkPostAccountsAccountPeopleRequestBodyDocuments' = PostAccountsAccountPeopleRequestBodyDocuments'{postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization = GHC.Maybe.Nothing,
                                                                                                  postAccountsAccountPeopleRequestBodyDocuments'Passport = GHC.Maybe.Nothing,
                                                                                                  postAccountsAccountPeopleRequestBodyDocuments'Visa = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_authorization@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization' = PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization' {
  -- | files
  postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files :: (GHC.Maybe.Maybe [PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Variants])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'" (\obj -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization' :: PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'
mkPostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization' = PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'{postAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_authorization.properties.files.items.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Variants =
   PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyDocuments'CompanyAuthorization'Files'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.passport@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDocuments'Passport' = PostAccountsAccountPeopleRequestBodyDocuments'Passport' {
  -- | files
  postAccountsAccountPeopleRequestBodyDocuments'Passport'Files :: (GHC.Maybe.Maybe [PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Variants])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'Passport'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Passport'Files obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Passport'Files obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'Passport'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyDocuments'Passport'" (\obj -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments'Passport' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyDocuments'Passport'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyDocuments'Passport' :: PostAccountsAccountPeopleRequestBodyDocuments'Passport'
mkPostAccountsAccountPeopleRequestBodyDocuments'Passport' = PostAccountsAccountPeopleRequestBodyDocuments'Passport'{postAccountsAccountPeopleRequestBodyDocuments'Passport'Files = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.passport.properties.files.items.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Variants =
   PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyDocuments'Passport'Files'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.visa@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDocuments'Visa' = PostAccountsAccountPeopleRequestBodyDocuments'Visa' {
  -- | files
  postAccountsAccountPeopleRequestBodyDocuments'Visa'Files :: (GHC.Maybe.Maybe [PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Variants])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'Visa'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Visa'Files obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyDocuments'Visa'Files obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'Visa'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyDocuments'Visa'" (\obj -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments'Visa' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyDocuments'Visa'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyDocuments'Visa' :: PostAccountsAccountPeopleRequestBodyDocuments'Visa'
mkPostAccountsAccountPeopleRequestBodyDocuments'Visa' = PostAccountsAccountPeopleRequestBodyDocuments'Visa'{postAccountsAccountPeopleRequestBodyDocuments'Visa'Files = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.visa.properties.files.items.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Variants =
   PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyDocuments'Visa'Files'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.full_name_aliases.anyOf@ in the specification.
-- 
-- A list of alternate names or aliases that the person is known by.
data PostAccountsAccountPeopleRequestBodyFullNameAliases'Variants =
   PostAccountsAccountPeopleRequestBodyFullNameAliases'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyFullNameAliases'ListTText [Data.Text.Internal.Text]
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyFullNameAliases'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyFullNameAliases'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyFullNameAliases'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyFullNameAliases'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyFullNameAliases'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyFullNameAliases'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostAccountsAccountPeopleRequestBodyMetadata'Variants =
   PostAccountsAccountPeopleRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyMetadata'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyMetadata'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyMetadata'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyMetadata'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.political_exposure@ in the specification.
-- 
-- Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
data PostAccountsAccountPeopleRequestBodyPoliticalExposure' =
   PostAccountsAccountPeopleRequestBodyPoliticalExposure'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountsAccountPeopleRequestBodyPoliticalExposure'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountsAccountPeopleRequestBodyPoliticalExposure'EnumExisting -- ^ Represents the JSON value @"existing"@
  | PostAccountsAccountPeopleRequestBodyPoliticalExposure'EnumNone -- ^ Represents the JSON value @"none"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyPoliticalExposure'
    where {toJSON (PostAccountsAccountPeopleRequestBodyPoliticalExposure'Other val) = val;
           toJSON (PostAccountsAccountPeopleRequestBodyPoliticalExposure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostAccountsAccountPeopleRequestBodyPoliticalExposure'EnumExisting) = "existing";
           toJSON (PostAccountsAccountPeopleRequestBodyPoliticalExposure'EnumNone) = "none"}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyPoliticalExposure'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "existing" -> PostAccountsAccountPeopleRequestBodyPoliticalExposure'EnumExisting
                                             | val GHC.Classes.== "none" -> PostAccountsAccountPeopleRequestBodyPoliticalExposure'EnumNone
                                             | GHC.Base.otherwise -> PostAccountsAccountPeopleRequestBodyPoliticalExposure'Other val)}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.registered_address@ in the specification.
-- 
-- The person\'s registered address.
data PostAccountsAccountPeopleRequestBodyRegisteredAddress' = PostAccountsAccountPeopleRequestBodyRegisteredAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountsAccountPeopleRequestBodyRegisteredAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyRegisteredAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeopleRequestBodyRegisteredAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeopleRequestBodyRegisteredAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyRegisteredAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyRegisteredAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyRegisteredAddress'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRegisteredAddress'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyRegisteredAddress'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyRegisteredAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPeopleRequestBodyRegisteredAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyRegisteredAddress'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyRegisteredAddress' :: PostAccountsAccountPeopleRequestBodyRegisteredAddress'
mkPostAccountsAccountPeopleRequestBodyRegisteredAddress' = PostAccountsAccountPeopleRequestBodyRegisteredAddress'{postAccountsAccountPeopleRequestBodyRegisteredAddress'City = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeopleRequestBodyRegisteredAddress'Country = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeopleRequestBodyRegisteredAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeopleRequestBodyRegisteredAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeopleRequestBodyRegisteredAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeopleRequestBodyRegisteredAddress'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.relationship@ in the specification.
-- 
-- The relationship that this person has with the account\'s legal entity.
data PostAccountsAccountPeopleRequestBodyRelationship' = PostAccountsAccountPeopleRequestBodyRelationship' {
  -- | authorizer
  postAccountsAccountPeopleRequestBodyRelationship'Authorizer :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | director
  , postAccountsAccountPeopleRequestBodyRelationship'Director :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | executive
  , postAccountsAccountPeopleRequestBodyRelationship'Executive :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | legal_guardian
  , postAccountsAccountPeopleRequestBodyRelationship'LegalGuardian :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | owner
  , postAccountsAccountPeopleRequestBodyRelationship'Owner :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | percent_ownership
  , postAccountsAccountPeopleRequestBodyRelationship'PercentOwnership :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Variants)
  -- | representative
  , postAccountsAccountPeopleRequestBodyRelationship'Representative :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | title
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyRelationship'Title :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyRelationship'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorizer" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Authorizer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("director" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Director obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executive" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Executive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legal_guardian" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'LegalGuardian obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percent_ownership" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'PercentOwnership obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("representative" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Representative obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Title obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorizer" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Authorizer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("director" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Director obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executive" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Executive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legal_guardian" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'LegalGuardian obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percent_ownership" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'PercentOwnership obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("representative" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Representative obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyRelationship'Title obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyRelationship'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyRelationship'" (\obj -> (((((((GHC.Base.pure PostAccountsAccountPeopleRequestBodyRelationship' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorizer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "director")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "legal_guardian")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "percent_ownership")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "representative")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "title"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyRelationship'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyRelationship' :: PostAccountsAccountPeopleRequestBodyRelationship'
mkPostAccountsAccountPeopleRequestBodyRelationship' = PostAccountsAccountPeopleRequestBodyRelationship'{postAccountsAccountPeopleRequestBodyRelationship'Authorizer = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'Director = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'Executive = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'LegalGuardian = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'Owner = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'PercentOwnership = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'Representative = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyRelationship'Title = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.relationship.properties.percent_ownership.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Variants =
   PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Double GHC.Types.Double
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Variants
    where {toJSON (PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Double a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeopleRequestBodyRelationship'PercentOwnership'Double Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data@ in the specification.
-- 
-- Demographic data related to the person.
data PostAccountsAccountPeopleRequestBodyUsCfpbData' = PostAccountsAccountPeopleRequestBodyUsCfpbData' {
  -- | ethnicity_details
  postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails')
  -- | race_details
  , postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails')
  -- | self_identified_gender
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyUsCfpbData'SelfIdentifiedGender :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("self_identified_gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'SelfIdentifiedGender obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("self_identified_gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'SelfIdentifiedGender obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyUsCfpbData'" (\obj -> ((GHC.Base.pure PostAccountsAccountPeopleRequestBodyUsCfpbData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "self_identified_gender"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyUsCfpbData'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyUsCfpbData' :: PostAccountsAccountPeopleRequestBodyUsCfpbData'
mkPostAccountsAccountPeopleRequestBodyUsCfpbData' = PostAccountsAccountPeopleRequestBodyUsCfpbData'{postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails = GHC.Maybe.Nothing,
                                                                                                    postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails = GHC.Maybe.Nothing,
                                                                                                    postAccountsAccountPeopleRequestBodyUsCfpbData'SelfIdentifiedGender = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.ethnicity_details@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails' = PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails' {
  -- | ethnicity
  postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity :: (GHC.Maybe.Maybe [PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'])
  -- | ethnicity_other
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'" (\obj -> (GHC.Base.pure PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity_other"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails' :: PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'
mkPostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails' = PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'{postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity = GHC.Maybe.Nothing,
                                                                                                                                      postAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.ethnicity_details.properties.ethnicity.items@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity' =
   PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumCuban -- ^ Represents the JSON value @"cuban"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumHispanicOrLatino -- ^ Represents the JSON value @"hispanic_or_latino"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumMexican -- ^ Represents the JSON value @"mexican"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumNotHispanicOrLatino -- ^ Represents the JSON value @"not_hispanic_or_latino"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumOtherHispanicOrLatino -- ^ Represents the JSON value @"other_hispanic_or_latino"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPreferNotToAnswer -- ^ Represents the JSON value @"prefer_not_to_answer"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPuertoRican -- ^ Represents the JSON value @"puerto_rican"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'
    where {toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Other val) = val;
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumCuban) = "cuban";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumHispanicOrLatino) = "hispanic_or_latino";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumMexican) = "mexican";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumNotHispanicOrLatino) = "not_hispanic_or_latino";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumOtherHispanicOrLatino) = "other_hispanic_or_latino";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPreferNotToAnswer) = "prefer_not_to_answer";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPuertoRican) = "puerto_rican"}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "cuban" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumCuban
                                             | val GHC.Classes.== "hispanic_or_latino" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumHispanicOrLatino
                                             | val GHC.Classes.== "mexican" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumMexican
                                             | val GHC.Classes.== "not_hispanic_or_latino" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumNotHispanicOrLatino
                                             | val GHC.Classes.== "other_hispanic_or_latino" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumOtherHispanicOrLatino
                                             | val GHC.Classes.== "prefer_not_to_answer" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPreferNotToAnswer
                                             | val GHC.Classes.== "puerto_rican" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPuertoRican
                                             | GHC.Base.otherwise -> PostAccountsAccountPeopleRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Other val)}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.race_details@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails' = PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails' {
  -- | race
  postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race :: (GHC.Maybe.Maybe [PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'])
  -- | race_other
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'RaceOther :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'RaceOther obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'RaceOther obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'" (\obj -> (GHC.Base.pure PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race_other"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails' :: PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'
mkPostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails' = PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'{postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race = GHC.Maybe.Nothing,
                                                                                                                            postAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'RaceOther = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.race_details.properties.race.items@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race' =
   PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAfricanAmerican -- ^ Represents the JSON value @"african_american"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAmericanIndianOrAlaskaNative -- ^ Represents the JSON value @"american_indian_or_alaska_native"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAsian -- ^ Represents the JSON value @"asian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAsianIndian -- ^ Represents the JSON value @"asian_indian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumBlackOrAfricanAmerican -- ^ Represents the JSON value @"black_or_african_american"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumChinese -- ^ Represents the JSON value @"chinese"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumEthiopian -- ^ Represents the JSON value @"ethiopian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumFilipino -- ^ Represents the JSON value @"filipino"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumGuamanianOrChamorro -- ^ Represents the JSON value @"guamanian_or_chamorro"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumHaitian -- ^ Represents the JSON value @"haitian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumJamaican -- ^ Represents the JSON value @"jamaican"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumJapanese -- ^ Represents the JSON value @"japanese"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumKorean -- ^ Represents the JSON value @"korean"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiian -- ^ Represents the JSON value @"native_hawaiian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiianOrOtherPacificIslander -- ^ Represents the JSON value @"native_hawaiian_or_other_pacific_islander"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNigerian -- ^ Represents the JSON value @"nigerian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherAsian -- ^ Represents the JSON value @"other_asian"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherBlackOrAfricanAmerican -- ^ Represents the JSON value @"other_black_or_african_american"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherPacificIslander -- ^ Represents the JSON value @"other_pacific_islander"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumPreferNotToAnswer -- ^ Represents the JSON value @"prefer_not_to_answer"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumSamoan -- ^ Represents the JSON value @"samoan"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumSomali -- ^ Represents the JSON value @"somali"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumVietnamese -- ^ Represents the JSON value @"vietnamese"@
  | PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumWhite -- ^ Represents the JSON value @"white"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'
    where {toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'Other val) = val;
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAfricanAmerican) = "african_american";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAmericanIndianOrAlaskaNative) = "american_indian_or_alaska_native";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAsian) = "asian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAsianIndian) = "asian_indian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumBlackOrAfricanAmerican) = "black_or_african_american";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumChinese) = "chinese";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumEthiopian) = "ethiopian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumFilipino) = "filipino";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumGuamanianOrChamorro) = "guamanian_or_chamorro";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumHaitian) = "haitian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumJamaican) = "jamaican";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumJapanese) = "japanese";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumKorean) = "korean";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiian) = "native_hawaiian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiianOrOtherPacificIslander) = "native_hawaiian_or_other_pacific_islander";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNigerian) = "nigerian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherAsian) = "other_asian";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherBlackOrAfricanAmerican) = "other_black_or_african_american";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherPacificIslander) = "other_pacific_islander";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumPreferNotToAnswer) = "prefer_not_to_answer";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumSamoan) = "samoan";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumSomali) = "somali";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumVietnamese) = "vietnamese";
           toJSON (PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumWhite) = "white"}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "african_american" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAfricanAmerican
                                             | val GHC.Classes.== "american_indian_or_alaska_native" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAmericanIndianOrAlaskaNative
                                             | val GHC.Classes.== "asian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAsian
                                             | val GHC.Classes.== "asian_indian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumAsianIndian
                                             | val GHC.Classes.== "black_or_african_american" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumBlackOrAfricanAmerican
                                             | val GHC.Classes.== "chinese" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumChinese
                                             | val GHC.Classes.== "ethiopian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumEthiopian
                                             | val GHC.Classes.== "filipino" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumFilipino
                                             | val GHC.Classes.== "guamanian_or_chamorro" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumGuamanianOrChamorro
                                             | val GHC.Classes.== "haitian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumHaitian
                                             | val GHC.Classes.== "jamaican" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumJamaican
                                             | val GHC.Classes.== "japanese" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumJapanese
                                             | val GHC.Classes.== "korean" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumKorean
                                             | val GHC.Classes.== "native_hawaiian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiian
                                             | val GHC.Classes.== "native_hawaiian_or_other_pacific_islander" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiianOrOtherPacificIslander
                                             | val GHC.Classes.== "nigerian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumNigerian
                                             | val GHC.Classes.== "other_asian" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherAsian
                                             | val GHC.Classes.== "other_black_or_african_american" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherBlackOrAfricanAmerican
                                             | val GHC.Classes.== "other_pacific_islander" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherPacificIslander
                                             | val GHC.Classes.== "prefer_not_to_answer" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumPreferNotToAnswer
                                             | val GHC.Classes.== "samoan" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumSamoan
                                             | val GHC.Classes.== "somali" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumSomali
                                             | val GHC.Classes.== "vietnamese" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumVietnamese
                                             | val GHC.Classes.== "white" -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'EnumWhite
                                             | GHC.Base.otherwise -> PostAccountsAccountPeopleRequestBodyUsCfpbData'RaceDetails'Race'Other val)}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification@ in the specification.
-- 
-- The person\'s verification status.
data PostAccountsAccountPeopleRequestBodyVerification' = PostAccountsAccountPeopleRequestBodyVerification' {
  -- | additional_document
  postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument')
  -- | document
  , postAccountsAccountPeopleRequestBodyVerification'Document :: (GHC.Maybe.Maybe PostAccountsAccountPeopleRequestBodyVerification'Document')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyVerification'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'Document obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'Document obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyVerification'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyVerification'" (\obj -> (GHC.Base.pure PostAccountsAccountPeopleRequestBodyVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyVerification'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyVerification' :: PostAccountsAccountPeopleRequestBodyVerification'
mkPostAccountsAccountPeopleRequestBodyVerification' = PostAccountsAccountPeopleRequestBodyVerification'{postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument = GHC.Maybe.Nothing,
                                                                                                        postAccountsAccountPeopleRequestBodyVerification'Document = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification.properties.additional_document@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument' = PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Front obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Front obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'" (\obj -> (GHC.Base.pure PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument' :: PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'
mkPostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument' = PostAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'{postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Back = GHC.Maybe.Nothing,
                                                                                                                                              postAccountsAccountPeopleRequestBodyVerification'AdditionalDocument'Front = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification.properties.document@ in the specification.
-- 
-- 
data PostAccountsAccountPeopleRequestBodyVerification'Document' = PostAccountsAccountPeopleRequestBodyVerification'Document' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountsAccountPeopleRequestBodyVerification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountsAccountPeopleRequestBodyVerification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeopleRequestBodyVerification'Document'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'Document'Front obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeopleRequestBodyVerification'Document'Front obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeopleRequestBodyVerification'Document'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeopleRequestBodyVerification'Document'" (\obj -> (GHC.Base.pure PostAccountsAccountPeopleRequestBodyVerification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))}
-- | Create a new 'PostAccountsAccountPeopleRequestBodyVerification'Document'' with all required fields.
mkPostAccountsAccountPeopleRequestBodyVerification'Document' :: PostAccountsAccountPeopleRequestBodyVerification'Document'
mkPostAccountsAccountPeopleRequestBodyVerification'Document' = PostAccountsAccountPeopleRequestBodyVerification'Document'{postAccountsAccountPeopleRequestBodyVerification'Document'Back = GHC.Maybe.Nothing,
                                                                                                                          postAccountsAccountPeopleRequestBodyVerification'Document'Front = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postAccountsAccountPeople'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountsAccountPeopleResponseError' is used.
data PostAccountsAccountPeopleResponse =
   PostAccountsAccountPeopleResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostAccountsAccountPeopleResponse200 Person -- ^ Successful response.
  | PostAccountsAccountPeopleResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
