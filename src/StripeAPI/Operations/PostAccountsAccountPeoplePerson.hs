-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postAccountsAccountPeoplePerson
module StripeAPI.Operations.PostAccountsAccountPeoplePerson where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/accounts/{account}/people/{person}
-- 
-- \<p>Updates an existing person.\<\/p>
postAccountsAccountPeoplePerson :: forall m . StripeAPI.Common.MonadHTTP m => PostAccountsAccountPeoplePersonParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostAccountsAccountPeoplePersonResponse) -- ^ Monadic computation which returns the result of the operation
postAccountsAccountPeoplePerson parameters
                                body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostAccountsAccountPeoplePersonResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostAccountsAccountPeoplePersonResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Person)
                                                                                                                                                                                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostAccountsAccountPeoplePersonResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           Error)
                                                                                                                                                                                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/accounts/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (postAccountsAccountPeoplePersonParametersPathAccount parameters))) GHC.Base.<> ("/people/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (postAccountsAccountPeoplePersonParametersPathPerson parameters))) GHC.Base.<> "")))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.parameters@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonParameters = PostAccountsAccountPeoplePersonParameters {
  -- | pathAccount: Represents the parameter named \'account\'
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountsAccountPeoplePersonParametersPathAccount :: Data.Text.Internal.Text
  -- | pathPerson: Represents the parameter named \'person\'
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonParametersPathPerson :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathAccount" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonParametersPathAccount obj] : ["pathPerson" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonParametersPathPerson obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathAccount" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonParametersPathAccount obj] : ["pathPerson" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonParametersPathPerson obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonParameters" (\obj -> (GHC.Base.pure PostAccountsAccountPeoplePersonParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathAccount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathPerson"))}
-- | Create a new 'PostAccountsAccountPeoplePersonParameters' with all required fields.
mkPostAccountsAccountPeoplePersonParameters :: Data.Text.Internal.Text -- ^ 'postAccountsAccountPeoplePersonParametersPathAccount'
  -> Data.Text.Internal.Text -- ^ 'postAccountsAccountPeoplePersonParametersPathPerson'
  -> PostAccountsAccountPeoplePersonParameters
mkPostAccountsAccountPeoplePersonParameters postAccountsAccountPeoplePersonParametersPathAccount postAccountsAccountPeoplePersonParametersPathPerson = PostAccountsAccountPeoplePersonParameters{postAccountsAccountPeoplePersonParametersPathAccount = postAccountsAccountPeoplePersonParametersPathAccount,
                                                                                                                                                                                                 postAccountsAccountPeoplePersonParametersPathPerson = postAccountsAccountPeoplePersonParametersPathPerson}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBody = PostAccountsAccountPeoplePersonRequestBody {
  -- | additional_tos_acceptances: Details on the legal guardian\'s or authorizer\'s acceptance of the required Stripe agreements.
  postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances')
  -- | address: The person\'s address.
  , postAccountsAccountPeoplePersonRequestBodyAddress :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyAddress')
  -- | address_kana: The Kana variation of the person\'s address (Japan only).
  , postAccountsAccountPeoplePersonRequestBodyAddressKana :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyAddressKana')
  -- | address_kanji: The Kanji variation of the person\'s address (Japan only).
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyAddressKanji')
  -- | dob: The person\'s date of birth.
  , postAccountsAccountPeoplePersonRequestBodyDob :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyDob'Variants)
  -- | documents: Documents that may be submitted to satisfy various informational requests.
  , postAccountsAccountPeoplePersonRequestBodyDocuments :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyDocuments')
  -- | email: The person\'s email address.
  , postAccountsAccountPeoplePersonRequestBodyEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expand: Specifies which fields in the response should be expanded.
  , postAccountsAccountPeoplePersonRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | first_name: The person\'s first name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyFirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name_kana: The Kana variation of the person\'s first name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyFirstNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name_kanji: The Kanji variation of the person\'s first name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyFirstNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | full_name_aliases: A list of alternate names or aliases that the person is known by.
  , postAccountsAccountPeoplePersonRequestBodyFullNameAliases :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'Variants)
  -- | gender: The person\'s gender (International regulations require either \"male\" or \"female\").
  , postAccountsAccountPeoplePersonRequestBodyGender :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id_number: The person\'s ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https:\/\/docs.stripe.com\/js\/tokens\/create_token?type=pii).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyIdNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id_number_secondary: The person\'s secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https:\/\/docs.stripe.com\/js\/tokens\/create_token?type=pii).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyIdNumberSecondary :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name: The person\'s last name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyLastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name_kana: The Kana variation of the person\'s last name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyLastNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name_kanji: The Kanji variation of the person\'s last name (Japan only).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyLastNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | maiden_name: The person\'s maiden name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyMaidenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postAccountsAccountPeoplePersonRequestBodyMetadata :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyMetadata'Variants)
  -- | nationality: The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyNationality :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | person_token: A [person token](https:\/\/docs.stripe.com\/connect\/account-tokens), used to securely provide details to the person.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyPersonToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phone: The person\'s phone number.
  , postAccountsAccountPeoplePersonRequestBodyPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | political_exposure: Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
  , postAccountsAccountPeoplePersonRequestBodyPoliticalExposure :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure')
  -- | registered_address: The person\'s registered address.
  , postAccountsAccountPeoplePersonRequestBodyRegisteredAddress :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress')
  -- | relationship: The relationship that this person has with the account\'s legal entity.
  , postAccountsAccountPeoplePersonRequestBodyRelationship :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyRelationship')
  -- | ssn_last_4: The last four digits of the person\'s Social Security number (U.S. only).
  , postAccountsAccountPeoplePersonRequestBodySsnLast_4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | us_cfpb_data: Demographic data related to the person.
  , postAccountsAccountPeoplePersonRequestBodyUsCfpbData :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyUsCfpbData')
  -- | verification: The person\'s verification status.
  , postAccountsAccountPeoplePersonRequestBodyVerification :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyVerification')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_tos_acceptances" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyGender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyIdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyLastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyLastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyLastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyMaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nationality" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyNationality obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("person_token" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyPersonToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyPoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("relationship" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodySsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_cfpb_data" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_tos_acceptances" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyFullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyGender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyIdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyLastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyLastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyLastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyMaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nationality" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyNationality obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("person_token" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyPersonToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyPoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("relationship" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodySsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_cfpb_data" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBody" (\obj -> ((((((((((((((((((((((((((((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_tos_acceptances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "full_name_aliases")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gender")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number_secondary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maiden_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nationality")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "person_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "political_exposure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registered_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "relationship")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ssn_last_4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_cfpb_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBody' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBody :: PostAccountsAccountPeoplePersonRequestBody
mkPostAccountsAccountPeoplePersonRequestBody = PostAccountsAccountPeoplePersonRequestBody{postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyAddress = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyAddressKana = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyAddressKanji = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyDob = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyDocuments = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyEmail = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyFirstName = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyFirstNameKana = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyFirstNameKanji = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyFullNameAliases = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyGender = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyIdNumber = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyIdNumberSecondary = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyLastName = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyLastNameKana = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyLastNameKanji = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyMaidenName = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyNationality = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyPersonToken = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyPhone = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyPoliticalExposure = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyRegisteredAddress = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyRelationship = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodySsnLast_4 = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyUsCfpbData = GHC.Maybe.Nothing,
                                                                                          postAccountsAccountPeoplePersonRequestBodyVerification = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.additional_tos_acceptances@ in the specification.
-- 
-- Details on the legal guardian\'s or authorizer\'s acceptance of the required Stripe agreements.
data PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances' = PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances' {
  -- | account
  postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'" (\obj -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances' :: PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'
mkPostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances' = PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'{postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.additional_tos_acceptances.properties.account@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account' = PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account' {
  -- | date
  postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Date :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | ip
  , postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent
  , postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'" (\obj -> ((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account' :: PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'
mkPostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account' = PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'{postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Date = GHC.Maybe.Nothing,
                                                                                                                                                            postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'Ip = GHC.Maybe.Nothing,
                                                                                                                                                            postAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.additional_tos_acceptances.properties.account.properties.user_agent.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants =
   PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyAdditionalTosAcceptances'Account'UserAgent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address@ in the specification.
-- 
-- The person\'s address.
data PostAccountsAccountPeoplePersonRequestBodyAddress' = PostAccountsAccountPeoplePersonRequestBodyAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountsAccountPeoplePersonRequestBodyAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeoplePersonRequestBodyAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeoplePersonRequestBodyAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyAddress'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddress'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyAddress'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyAddress'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyAddress' :: PostAccountsAccountPeoplePersonRequestBodyAddress'
mkPostAccountsAccountPeoplePersonRequestBodyAddress' = PostAccountsAccountPeoplePersonRequestBodyAddress'{postAccountsAccountPeoplePersonRequestBodyAddress'City = GHC.Maybe.Nothing,
                                                                                                          postAccountsAccountPeoplePersonRequestBodyAddress'Country = GHC.Maybe.Nothing,
                                                                                                          postAccountsAccountPeoplePersonRequestBodyAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                          postAccountsAccountPeoplePersonRequestBodyAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                          postAccountsAccountPeoplePersonRequestBodyAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                          postAccountsAccountPeoplePersonRequestBodyAddress'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address_kana@ in the specification.
-- 
-- The Kana variation of the person\'s address (Japan only).
data PostAccountsAccountPeoplePersonRequestBodyAddressKana' = PostAccountsAccountPeoplePersonRequestBodyAddressKana' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountsAccountPeoplePersonRequestBodyAddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyAddressKana'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Town obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKana'Town obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyAddressKana'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyAddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyAddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyAddressKana'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyAddressKana' :: PostAccountsAccountPeoplePersonRequestBodyAddressKana'
mkPostAccountsAccountPeoplePersonRequestBodyAddressKana' = PostAccountsAccountPeoplePersonRequestBodyAddressKana'{postAccountsAccountPeoplePersonRequestBodyAddressKana'City = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeoplePersonRequestBodyAddressKana'Country = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeoplePersonRequestBodyAddressKana'Line1 = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeoplePersonRequestBodyAddressKana'Line2 = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeoplePersonRequestBodyAddressKana'PostalCode = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeoplePersonRequestBodyAddressKana'State = GHC.Maybe.Nothing,
                                                                                                                  postAccountsAccountPeoplePersonRequestBodyAddressKana'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address_kanji@ in the specification.
-- 
-- The Kanji variation of the person\'s address (Japan only).
data PostAccountsAccountPeoplePersonRequestBodyAddressKanji' = PostAccountsAccountPeoplePersonRequestBodyAddressKanji' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountsAccountPeoplePersonRequestBodyAddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyAddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyAddressKanji'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Town obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyAddressKanji'Town obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyAddressKanji'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyAddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyAddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyAddressKanji'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyAddressKanji' :: PostAccountsAccountPeoplePersonRequestBodyAddressKanji'
mkPostAccountsAccountPeoplePersonRequestBodyAddressKanji' = PostAccountsAccountPeoplePersonRequestBodyAddressKanji'{postAccountsAccountPeoplePersonRequestBodyAddressKanji'City = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyAddressKanji'Country = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line1 = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyAddressKanji'Line2 = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyAddressKanji'PostalCode = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyAddressKanji'State = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyAddressKanji'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.dob.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 = PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 {
  -- | day
  postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day :: GHC.Types.Int
  -- | month
  , postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month :: GHC.Types.Int
  -- | year
  , postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1" (\obj -> ((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 :: GHC.Types.Int -- ^ 'postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day'
  -> GHC.Types.Int -- ^ 'postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month'
  -> GHC.Types.Int -- ^ 'postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year'
  -> PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1
mkPostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year = PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1{postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day = postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Day,
                                                                                                                                                                                                                                                                                         postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month = postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Month,
                                                                                                                                                                                                                                                                                         postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year = postAccountsAccountPeoplePersonRequestBodyDob'OneOf1Year}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.dob.anyOf@ in the specification.
-- 
-- The person\'s date of birth.
data PostAccountsAccountPeoplePersonRequestBodyDob'Variants =
   PostAccountsAccountPeoplePersonRequestBodyDob'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyDob'PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDob'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyDob'PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyDob'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDob'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDob'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyDob'PostAccountsAccountPeoplePersonRequestBodyDob'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents@ in the specification.
-- 
-- Documents that may be submitted to satisfy various informational requests.
data PostAccountsAccountPeoplePersonRequestBodyDocuments' = PostAccountsAccountPeoplePersonRequestBodyDocuments' {
  -- | company_authorization
  postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization')
  -- | passport
  , postAccountsAccountPeoplePersonRequestBodyDocuments'Passport :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport')
  -- | visa
  , postAccountsAccountPeoplePersonRequestBodyDocuments'Visa :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_authorization" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passport" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Passport obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Visa obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_authorization" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passport" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Passport obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Visa obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyDocuments'" (\obj -> ((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_authorization")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "passport")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "visa"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyDocuments'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyDocuments' :: PostAccountsAccountPeoplePersonRequestBodyDocuments'
mkPostAccountsAccountPeoplePersonRequestBodyDocuments' = PostAccountsAccountPeoplePersonRequestBodyDocuments'{postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization = GHC.Maybe.Nothing,
                                                                                                              postAccountsAccountPeoplePersonRequestBodyDocuments'Passport = GHC.Maybe.Nothing,
                                                                                                              postAccountsAccountPeoplePersonRequestBodyDocuments'Visa = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_authorization@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization' = PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization' {
  -- | files
  postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files :: (GHC.Maybe.Maybe [PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Variants])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'" (\obj -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization' :: PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'
mkPostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization' = PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'{postAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_authorization.properties.files.items.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Variants =
   PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyDocuments'CompanyAuthorization'Files'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.passport@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport' = PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport' {
  -- | files
  postAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files :: (GHC.Maybe.Maybe [PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Variants])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'" (\obj -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyDocuments'Passport' :: PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'
mkPostAccountsAccountPeoplePersonRequestBodyDocuments'Passport' = PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'{postAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.passport.properties.files.items.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Variants =
   PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyDocuments'Passport'Files'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.visa@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa' = PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa' {
  -- | files
  postAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files :: (GHC.Maybe.Maybe [PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Variants])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'" (\obj -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyDocuments'Visa' :: PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'
mkPostAccountsAccountPeoplePersonRequestBodyDocuments'Visa' = PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'{postAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.visa.properties.files.items.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Variants =
   PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyDocuments'Visa'Files'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.full_name_aliases.anyOf@ in the specification.
-- 
-- A list of alternate names or aliases that the person is known by.
data PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'Variants =
   PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'ListTText [Data.Text.Internal.Text]
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyFullNameAliases'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostAccountsAccountPeoplePersonRequestBodyMetadata'Variants =
   PostAccountsAccountPeoplePersonRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyMetadata'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyMetadata'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyMetadata'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyMetadata'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.political_exposure@ in the specification.
-- 
-- Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
data PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure' =
   PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'EnumExisting -- ^ Represents the JSON value @"existing"@
  | PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'EnumNone -- ^ Represents the JSON value @"none"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'Other val) = val;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'EnumExisting) = "existing";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'EnumNone) = "none"}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "existing" -> PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'EnumExisting
                                             | val GHC.Classes.== "none" -> PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'EnumNone
                                             | GHC.Base.otherwise -> PostAccountsAccountPeoplePersonRequestBodyPoliticalExposure'Other val)}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.registered_address@ in the specification.
-- 
-- The person\'s registered address.
data PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress' = PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyRegisteredAddress' :: PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress'
mkPostAccountsAccountPeoplePersonRequestBodyRegisteredAddress' = PostAccountsAccountPeoplePersonRequestBodyRegisteredAddress'{postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'City = GHC.Maybe.Nothing,
                                                                                                                              postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Country = GHC.Maybe.Nothing,
                                                                                                                              postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                                              postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                                              postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                                              postAccountsAccountPeoplePersonRequestBodyRegisteredAddress'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.relationship@ in the specification.
-- 
-- The relationship that this person has with the account\'s legal entity.
data PostAccountsAccountPeoplePersonRequestBodyRelationship' = PostAccountsAccountPeoplePersonRequestBodyRelationship' {
  -- | authorizer
  postAccountsAccountPeoplePersonRequestBodyRelationship'Authorizer :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | director
  , postAccountsAccountPeoplePersonRequestBodyRelationship'Director :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | executive
  , postAccountsAccountPeoplePersonRequestBodyRelationship'Executive :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | legal_guardian
  , postAccountsAccountPeoplePersonRequestBodyRelationship'LegalGuardian :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | owner
  , postAccountsAccountPeoplePersonRequestBodyRelationship'Owner :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | percent_ownership
  , postAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Variants)
  -- | representative
  , postAccountsAccountPeoplePersonRequestBodyRelationship'Representative :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | title
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyRelationship'Title :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyRelationship'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorizer" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Authorizer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("director" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Director obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executive" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Executive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legal_guardian" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'LegalGuardian obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percent_ownership" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("representative" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Representative obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Title obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorizer" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Authorizer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("director" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Director obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executive" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Executive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legal_guardian" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'LegalGuardian obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percent_ownership" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("representative" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Representative obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyRelationship'Title obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyRelationship'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyRelationship'" (\obj -> (((((((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyRelationship' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorizer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "director")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "legal_guardian")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "percent_ownership")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "representative")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "title"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyRelationship'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyRelationship' :: PostAccountsAccountPeoplePersonRequestBodyRelationship'
mkPostAccountsAccountPeoplePersonRequestBodyRelationship' = PostAccountsAccountPeoplePersonRequestBodyRelationship'{postAccountsAccountPeoplePersonRequestBodyRelationship'Authorizer = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'Director = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'Executive = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'LegalGuardian = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'Owner = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'Representative = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyRelationship'Title = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.relationship.properties.percent_ownership.anyOf@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Variants =
   PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Double GHC.Types.Double
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Variants
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Double a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'EmptyString
                              | GHC.Base.otherwise -> case (PostAccountsAccountPeoplePersonRequestBodyRelationship'PercentOwnership'Double Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data@ in the specification.
-- 
-- Demographic data related to the person.
data PostAccountsAccountPeoplePersonRequestBodyUsCfpbData' = PostAccountsAccountPeoplePersonRequestBodyUsCfpbData' {
  -- | ethnicity_details
  postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails')
  -- | race_details
  , postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails')
  -- | self_identified_gender
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyUsCfpbData'SelfIdentifiedGender :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("self_identified_gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'SelfIdentifiedGender obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_details" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("self_identified_gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'SelfIdentifiedGender obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'" (\obj -> ((GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyUsCfpbData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "self_identified_gender"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyUsCfpbData' :: PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'
mkPostAccountsAccountPeoplePersonRequestBodyUsCfpbData' = PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'{postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails = GHC.Maybe.Nothing,
                                                                                                                postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails = GHC.Maybe.Nothing,
                                                                                                                postAccountsAccountPeoplePersonRequestBodyUsCfpbData'SelfIdentifiedGender = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.ethnicity_details@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails' = PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails' {
  -- | ethnicity
  postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity :: (GHC.Maybe.Maybe [PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'])
  -- | ethnicity_other
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'" (\obj -> (GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity_other"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails' :: PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'
mkPostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails' = PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'{postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity = GHC.Maybe.Nothing,
                                                                                                                                                  postAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'EthnicityOther = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.ethnicity_details.properties.ethnicity.items@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity' =
   PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumCuban -- ^ Represents the JSON value @"cuban"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumHispanicOrLatino -- ^ Represents the JSON value @"hispanic_or_latino"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumMexican -- ^ Represents the JSON value @"mexican"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumNotHispanicOrLatino -- ^ Represents the JSON value @"not_hispanic_or_latino"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumOtherHispanicOrLatino -- ^ Represents the JSON value @"other_hispanic_or_latino"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPreferNotToAnswer -- ^ Represents the JSON value @"prefer_not_to_answer"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPuertoRican -- ^ Represents the JSON value @"puerto_rican"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Other val) = val;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumCuban) = "cuban";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumHispanicOrLatino) = "hispanic_or_latino";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumMexican) = "mexican";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumNotHispanicOrLatino) = "not_hispanic_or_latino";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumOtherHispanicOrLatino) = "other_hispanic_or_latino";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPreferNotToAnswer) = "prefer_not_to_answer";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPuertoRican) = "puerto_rican"}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "cuban" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumCuban
                                             | val GHC.Classes.== "hispanic_or_latino" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumHispanicOrLatino
                                             | val GHC.Classes.== "mexican" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumMexican
                                             | val GHC.Classes.== "not_hispanic_or_latino" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumNotHispanicOrLatino
                                             | val GHC.Classes.== "other_hispanic_or_latino" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumOtherHispanicOrLatino
                                             | val GHC.Classes.== "prefer_not_to_answer" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPreferNotToAnswer
                                             | val GHC.Classes.== "puerto_rican" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'EnumPuertoRican
                                             | GHC.Base.otherwise -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'EthnicityDetails'Ethnicity'Other val)}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.race_details@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails' = PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails' {
  -- | race
  postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race :: (GHC.Maybe.Maybe [PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'])
  -- | race_other
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'RaceOther :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'RaceOther obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_other" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'RaceOther obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'" (\obj -> (GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race_other"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails' :: PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'
mkPostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails' = PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'{postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race = GHC.Maybe.Nothing,
                                                                                                                                        postAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'RaceOther = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_cfpb_data.properties.race_details.properties.race.items@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race' =
   PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAfricanAmerican -- ^ Represents the JSON value @"african_american"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAmericanIndianOrAlaskaNative -- ^ Represents the JSON value @"american_indian_or_alaska_native"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAsian -- ^ Represents the JSON value @"asian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAsianIndian -- ^ Represents the JSON value @"asian_indian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumBlackOrAfricanAmerican -- ^ Represents the JSON value @"black_or_african_american"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumChinese -- ^ Represents the JSON value @"chinese"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumEthiopian -- ^ Represents the JSON value @"ethiopian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumFilipino -- ^ Represents the JSON value @"filipino"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumGuamanianOrChamorro -- ^ Represents the JSON value @"guamanian_or_chamorro"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumHaitian -- ^ Represents the JSON value @"haitian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumJamaican -- ^ Represents the JSON value @"jamaican"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumJapanese -- ^ Represents the JSON value @"japanese"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumKorean -- ^ Represents the JSON value @"korean"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiian -- ^ Represents the JSON value @"native_hawaiian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiianOrOtherPacificIslander -- ^ Represents the JSON value @"native_hawaiian_or_other_pacific_islander"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNigerian -- ^ Represents the JSON value @"nigerian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherAsian -- ^ Represents the JSON value @"other_asian"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherBlackOrAfricanAmerican -- ^ Represents the JSON value @"other_black_or_african_american"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherPacificIslander -- ^ Represents the JSON value @"other_pacific_islander"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumPreferNotToAnswer -- ^ Represents the JSON value @"prefer_not_to_answer"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumSamoan -- ^ Represents the JSON value @"samoan"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumSomali -- ^ Represents the JSON value @"somali"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumVietnamese -- ^ Represents the JSON value @"vietnamese"@
  | PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumWhite -- ^ Represents the JSON value @"white"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'
    where {toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'Other val) = val;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAfricanAmerican) = "african_american";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAmericanIndianOrAlaskaNative) = "american_indian_or_alaska_native";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAsian) = "asian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAsianIndian) = "asian_indian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumBlackOrAfricanAmerican) = "black_or_african_american";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumChinese) = "chinese";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumEthiopian) = "ethiopian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumFilipino) = "filipino";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumGuamanianOrChamorro) = "guamanian_or_chamorro";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumHaitian) = "haitian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumJamaican) = "jamaican";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumJapanese) = "japanese";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumKorean) = "korean";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiian) = "native_hawaiian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiianOrOtherPacificIslander) = "native_hawaiian_or_other_pacific_islander";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNigerian) = "nigerian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherAsian) = "other_asian";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherBlackOrAfricanAmerican) = "other_black_or_african_american";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherPacificIslander) = "other_pacific_islander";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumPreferNotToAnswer) = "prefer_not_to_answer";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumSamoan) = "samoan";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumSomali) = "somali";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumVietnamese) = "vietnamese";
           toJSON (PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumWhite) = "white"}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "african_american" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAfricanAmerican
                                             | val GHC.Classes.== "american_indian_or_alaska_native" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAmericanIndianOrAlaskaNative
                                             | val GHC.Classes.== "asian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAsian
                                             | val GHC.Classes.== "asian_indian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumAsianIndian
                                             | val GHC.Classes.== "black_or_african_american" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumBlackOrAfricanAmerican
                                             | val GHC.Classes.== "chinese" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumChinese
                                             | val GHC.Classes.== "ethiopian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumEthiopian
                                             | val GHC.Classes.== "filipino" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumFilipino
                                             | val GHC.Classes.== "guamanian_or_chamorro" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumGuamanianOrChamorro
                                             | val GHC.Classes.== "haitian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumHaitian
                                             | val GHC.Classes.== "jamaican" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumJamaican
                                             | val GHC.Classes.== "japanese" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumJapanese
                                             | val GHC.Classes.== "korean" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumKorean
                                             | val GHC.Classes.== "native_hawaiian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiian
                                             | val GHC.Classes.== "native_hawaiian_or_other_pacific_islander" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNativeHawaiianOrOtherPacificIslander
                                             | val GHC.Classes.== "nigerian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumNigerian
                                             | val GHC.Classes.== "other_asian" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherAsian
                                             | val GHC.Classes.== "other_black_or_african_american" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherBlackOrAfricanAmerican
                                             | val GHC.Classes.== "other_pacific_islander" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumOtherPacificIslander
                                             | val GHC.Classes.== "prefer_not_to_answer" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumPreferNotToAnswer
                                             | val GHC.Classes.== "samoan" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumSamoan
                                             | val GHC.Classes.== "somali" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumSomali
                                             | val GHC.Classes.== "vietnamese" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumVietnamese
                                             | val GHC.Classes.== "white" -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'EnumWhite
                                             | GHC.Base.otherwise -> PostAccountsAccountPeoplePersonRequestBodyUsCfpbData'RaceDetails'Race'Other val)}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification@ in the specification.
-- 
-- The person\'s verification status.
data PostAccountsAccountPeoplePersonRequestBodyVerification' = PostAccountsAccountPeoplePersonRequestBodyVerification' {
  -- | additional_document
  postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument')
  -- | document
  , postAccountsAccountPeoplePersonRequestBodyVerification'Document :: (GHC.Maybe.Maybe PostAccountsAccountPeoplePersonRequestBodyVerification'Document')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyVerification'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'Document obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'Document obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyVerification'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyVerification'" (\obj -> (GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyVerification'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyVerification' :: PostAccountsAccountPeoplePersonRequestBodyVerification'
mkPostAccountsAccountPeoplePersonRequestBodyVerification' = PostAccountsAccountPeoplePersonRequestBodyVerification'{postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument = GHC.Maybe.Nothing,
                                                                                                                    postAccountsAccountPeoplePersonRequestBodyVerification'Document = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification.properties.additional_document@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument' = PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Front obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Front obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'" (\obj -> (GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument' :: PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'
mkPostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument' = PostAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'{postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Back = GHC.Maybe.Nothing,
                                                                                                                                                          postAccountsAccountPeoplePersonRequestBodyVerification'AdditionalDocument'Front = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/people\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification.properties.document@ in the specification.
-- 
-- 
data PostAccountsAccountPeoplePersonRequestBodyVerification'Document' = PostAccountsAccountPeoplePersonRequestBodyVerification'Document' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountsAccountPeoplePersonRequestBodyVerification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountsAccountPeoplePersonRequestBodyVerification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPeoplePersonRequestBodyVerification'Document'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'Document'Front obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPeoplePersonRequestBodyVerification'Document'Front obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPeoplePersonRequestBodyVerification'Document'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPeoplePersonRequestBodyVerification'Document'" (\obj -> (GHC.Base.pure PostAccountsAccountPeoplePersonRequestBodyVerification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))}
-- | Create a new 'PostAccountsAccountPeoplePersonRequestBodyVerification'Document'' with all required fields.
mkPostAccountsAccountPeoplePersonRequestBodyVerification'Document' :: PostAccountsAccountPeoplePersonRequestBodyVerification'Document'
mkPostAccountsAccountPeoplePersonRequestBodyVerification'Document' = PostAccountsAccountPeoplePersonRequestBodyVerification'Document'{postAccountsAccountPeoplePersonRequestBodyVerification'Document'Back = GHC.Maybe.Nothing,
                                                                                                                                      postAccountsAccountPeoplePersonRequestBodyVerification'Document'Front = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postAccountsAccountPeoplePerson'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountsAccountPeoplePersonResponseError' is used.
data PostAccountsAccountPeoplePersonResponse =
   PostAccountsAccountPeoplePersonResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostAccountsAccountPeoplePersonResponse200 Person -- ^ Successful response.
  | PostAccountsAccountPeoplePersonResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
