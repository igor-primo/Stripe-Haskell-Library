-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postDisputesDispute
module StripeAPI.Operations.PostDisputesDispute where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/disputes/{dispute}
-- 
-- \<p>When you get a dispute, contacting your customer is always the best first step. If that doesnâ€™t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your \<a href=\"https:\/\/dashboard.stripe.com\/disputes\">dashboard\<\/a>, but if you prefer, you can use the API to submit evidence programmatically.\<\/p>
-- 
-- \<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our \<a href=\"\/docs\/disputes\/categories\">guide to dispute types\<\/a>.\<\/p>
postDisputesDispute :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ dispute | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostDisputesDisputeRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostDisputesDisputeResponse) -- ^ Monadic computation which returns the result of the operation
postDisputesDispute dispute
                    body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostDisputesDisputeResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostDisputesDisputeResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                     Dispute)
                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostDisputesDisputeResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                       Error)
                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/disputes/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel dispute)) GHC.Base.<> "")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBody = PostDisputesDisputeRequestBody {
  -- | evidence: Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
  postDisputesDisputeRequestBodyEvidence :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence')
  -- | expand: Specifies which fields in the response should be expanded.
  , postDisputesDisputeRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postDisputesDisputeRequestBodyMetadata :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyMetadata'Variants)
  -- | submit: Whether to immediately submit evidence to the bank. If \`false\`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to \`true\` (the default).
  , postDisputesDisputeRequestBodySubmit :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evidence" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodySubmit obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evidence" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodySubmit obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBody" (\obj -> (((GHC.Base.pure PostDisputesDisputeRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "evidence")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "submit"))}
-- | Create a new 'PostDisputesDisputeRequestBody' with all required fields.
mkPostDisputesDisputeRequestBody :: PostDisputesDisputeRequestBody
mkPostDisputesDisputeRequestBody = PostDisputesDisputeRequestBody{postDisputesDisputeRequestBodyEvidence = GHC.Maybe.Nothing,
                                                                  postDisputesDisputeRequestBodyExpand = GHC.Maybe.Nothing,
                                                                  postDisputesDisputeRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                  postDisputesDisputeRequestBodySubmit = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence@ in the specification.
-- 
-- Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
data PostDisputesDisputeRequestBodyEvidence' = PostDisputesDisputeRequestBodyEvidence' {
  -- | access_activity_log
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  postDisputesDisputeRequestBodyEvidence'AccessActivityLog :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | billing_address
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'BillingAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | cancellation_policy
  , postDisputesDisputeRequestBodyEvidence'CancellationPolicy :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | cancellation_policy_disclosure
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'CancellationPolicyDisclosure :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | cancellation_rebuttal
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'CancellationRebuttal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer_communication
  , postDisputesDisputeRequestBodyEvidence'CustomerCommunication :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer_email_address
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'CustomerEmailAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'CustomerName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer_purchase_ip
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'CustomerPurchaseIp :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer_signature
  , postDisputesDisputeRequestBodyEvidence'CustomerSignature :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | duplicate_charge_documentation
  , postDisputesDisputeRequestBodyEvidence'DuplicateChargeDocumentation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | duplicate_charge_explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'DuplicateChargeExplanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | duplicate_charge_id
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'DuplicateChargeId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | enhanced_evidence
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'Variants)
  -- | product_description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | receipt
  , postDisputesDisputeRequestBodyEvidence'Receipt :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | refund_policy
  , postDisputesDisputeRequestBodyEvidence'RefundPolicy :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | refund_policy_disclosure
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'RefundPolicyDisclosure :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | refund_refusal_explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'RefundRefusalExplanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | service_date
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'ServiceDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | service_documentation
  , postDisputesDisputeRequestBodyEvidence'ServiceDocumentation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipping_address
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'ShippingAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipping_carrier
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'ShippingCarrier :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipping_date
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'ShippingDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipping_documentation
  , postDisputesDisputeRequestBodyEvidence'ShippingDocumentation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipping_tracking_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postDisputesDisputeRequestBodyEvidence'ShippingTrackingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | uncategorized_file
  , postDisputesDisputeRequestBodyEvidence'UncategorizedFile :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | uncategorized_text
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 20000
  , postDisputesDisputeRequestBodyEvidence'UncategorizedText :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_activity_log" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'AccessActivityLog obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'BillingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CancellationPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CancellationPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_rebuttal" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CancellationRebuttal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_communication" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerCommunication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_name" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_signature" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerSignature obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_documentation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'DuplicateChargeDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_explanation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'DuplicateChargeExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'DuplicateChargeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enhanced_evidence" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'Receipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'RefundPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'RefundPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_refusal_explanation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'RefundRefusalExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_date" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ServiceDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_documentation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ServiceDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_carrier" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_date" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_documentation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_tracking_number" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingTrackingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_file" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'UncategorizedFile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_text" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'UncategorizedText obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_activity_log" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'AccessActivityLog obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'BillingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CancellationPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CancellationPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_rebuttal" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CancellationRebuttal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_communication" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerCommunication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_name" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_signature" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'CustomerSignature obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_documentation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'DuplicateChargeDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_explanation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'DuplicateChargeExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'DuplicateChargeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enhanced_evidence" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'Receipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'RefundPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'RefundPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_refusal_explanation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'RefundRefusalExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_date" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ServiceDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_documentation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ServiceDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_carrier" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_date" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_documentation" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_tracking_number" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'ShippingTrackingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_file" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'UncategorizedFile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_text" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'UncategorizedText obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'" (\obj -> (((((((((((((((((((((((((((GHC.Base.pure PostDisputesDisputeRequestBodyEvidence' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "access_activity_log")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_policy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_policy_disclosure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_rebuttal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_communication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_email_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_purchase_ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_signature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate_charge_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate_charge_explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate_charge_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enhanced_evidence")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_policy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_policy_disclosure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_refusal_explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_tracking_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uncategorized_file")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uncategorized_text"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence' :: PostDisputesDisputeRequestBodyEvidence'
mkPostDisputesDisputeRequestBodyEvidence' = PostDisputesDisputeRequestBodyEvidence'{postDisputesDisputeRequestBodyEvidence'AccessActivityLog = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'BillingAddress = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CancellationPolicy = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CancellationPolicyDisclosure = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CancellationRebuttal = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CustomerCommunication = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CustomerEmailAddress = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CustomerName = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CustomerPurchaseIp = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'CustomerSignature = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'DuplicateChargeDocumentation = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'DuplicateChargeExplanation = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'DuplicateChargeId = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'EnhancedEvidence = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ProductDescription = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'Receipt = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'RefundPolicy = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'RefundPolicyDisclosure = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'RefundRefusalExplanation = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ServiceDate = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ServiceDocumentation = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ShippingAddress = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ShippingCarrier = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ShippingDate = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ShippingDocumentation = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'ShippingTrackingNumber = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'UncategorizedFile = GHC.Maybe.Nothing,
                                                                                    postDisputesDisputeRequestBodyEvidence'UncategorizedText = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 {
  -- | visa_compelling_evidence_3
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3 :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3')
  -- | visa_compliance
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa_compelling_evidence_3" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa_compliance" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa_compelling_evidence_3" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa_compliance" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1" (\obj -> (GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "visa_compelling_evidence_3")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "visa_compliance"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 :: PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3 = GHC.Maybe.Nothing,
                                                                                                                                  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3' {
  -- | disputed_transaction
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction')
  -- | prior_undisputed_transactions
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions :: (GHC.Maybe.Maybe [PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disputed_transaction" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("prior_undisputed_transactions" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("disputed_transaction" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("prior_undisputed_transactions" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'" (\obj -> (GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "disputed_transaction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "prior_undisputed_transactions"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3' :: PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction = GHC.Maybe.Nothing,
                                                                                                                                                                                    postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction' {
  -- | customer_account_id
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Variants)
  -- | customer_device_fingerprint
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Variants)
  -- | customer_device_id
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Variants)
  -- | customer_email_address
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Variants)
  -- | customer_purchase_ip
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Variants)
  -- | merchandise_or_services
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices')
  -- | product_description
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Variants)
  -- | shipping_address
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_account_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_fingerprint" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("merchandise_or_services" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_account_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_fingerprint" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("merchandise_or_services" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'" (\obj -> (((((((GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_device_fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_device_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_email_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_purchase_ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "merchandise_or_services")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_address"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction' :: PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription = GHC.Maybe.Nothing,
                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.customer_account_id.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerAccountId'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.customer_device_fingerprint.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceFingerprint'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.customer_device_id.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerDeviceId'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.customer_email_address.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerEmailAddress'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.customer_purchase_ip.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'CustomerPurchaseIp'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.merchandise_or_services@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices' =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'EnumMerchandise -- ^ Represents the JSON value @"merchandise"@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'EnumServices -- ^ Represents the JSON value @"services"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'Other val) = val;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'EnumMerchandise) = "merchandise";
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'EnumServices) = "services"}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "merchandise" -> PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'EnumMerchandise
                                             | val GHC.Classes.== "services" -> PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'EnumServices
                                             | GHC.Base.otherwise -> PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'MerchandiseOrServices'Other val)}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.product_description.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ProductDescription'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress' {
  -- | city
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Variants)
  -- | country
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Variants)
  -- | line1
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1 :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Variants)
  -- | line2
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2 :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Variants)
  -- | postal_code
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Variants)
  -- | state
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'" (\obj -> (((((GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress' :: PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address.properties.city.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'City'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address.properties.country.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Country'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address.properties.line1.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line1'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address.properties.line2.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'Line2'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address.properties.postal_code.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'PostalCode'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.disputed_transaction.properties.shipping_address.properties.state.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'DisputedTransaction'ShippingAddress'State'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions' {
  -- | charge
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge :: Data.Text.Internal.Text
  -- | customer_account_id
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Variants)
  -- | customer_device_fingerprint
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Variants)
  -- | customer_device_id
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Variants)
  -- | customer_email_address
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Variants)
  -- | customer_purchase_ip
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Variants)
  -- | product_description
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Variants)
  -- | shipping_address
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["charge" Data.Aeson.Types.ToJSON..= postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_account_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_fingerprint" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["charge" Data.Aeson.Types.ToJSON..= postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_account_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_fingerprint" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_device_id" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'" (\obj -> (((((((GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "charge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_device_fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_device_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_email_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_purchase_ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_address"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions' :: Data.Text.Internal.Text -- ^ 'postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge'
  -> PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions' postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge = postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'Charge,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                      postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.customer_account_id.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerAccountId'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.customer_device_fingerprint.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceFingerprint'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.customer_device_id.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerDeviceId'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.customer_email_address.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerEmailAddress'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.customer_purchase_ip.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'CustomerPurchaseIp'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.product_description.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ProductDescription'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress' {
  -- | city
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Variants)
  -- | country
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Variants)
  -- | line1
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1 :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Variants)
  -- | line2
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2 :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Variants)
  -- | postal_code
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Variants)
  -- | state
  , postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State :: (GHC.Maybe.Maybe PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'" (\obj -> (((((GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress' :: PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                            postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address.properties.city.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'City'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address.properties.country.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Country'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address.properties.line1.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line1'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address.properties.line2.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'Line2'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address.properties.postal_code.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'PostalCode'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compelling_evidence_3.properties.prior_undisputed_transactions.items.properties.shipping_address.properties.state.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompellingEvidence_3'PriorUndisputedTransactions'ShippingAddress'State'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf.properties.visa_compliance@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance' {
  -- | fee_acknowledged
  postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'FeeAcknowledged :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fee_acknowledged" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'FeeAcknowledged obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fee_acknowledged" Data.Aeson.Types.ToJSON..=)) (postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'FeeAcknowledged obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'" (\obj -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fee_acknowledged"))}
-- | Create a new 'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'' with all required fields.
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance' :: PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'
mkPostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance' = PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'{postDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1VisaCompliance'FeeAcknowledged = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.enhanced_evidence.anyOf@ in the specification.
-- 
-- 
data PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'Variants =
   PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'Variants
    where {toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'PostDisputesDisputeRequestBodyEvidence'EnhancedEvidence'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostDisputesDisputeRequestBodyMetadata'Variants =
   PostDisputesDisputeRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostDisputesDisputeRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostDisputesDisputeRequestBodyMetadata'Variants
    where {toJSON (PostDisputesDisputeRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostDisputesDisputeRequestBodyMetadata'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostDisputesDisputeRequestBodyMetadata'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostDisputesDisputeRequestBodyMetadata'EmptyString
                              | GHC.Base.otherwise -> case (PostDisputesDisputeRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Represents a response of the operation 'postDisputesDispute'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostDisputesDisputeResponseError' is used.
data PostDisputesDisputeResponse =
   PostDisputesDisputeResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostDisputesDisputeResponse200 Dispute -- ^ Successful response.
  | PostDisputesDisputeResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
