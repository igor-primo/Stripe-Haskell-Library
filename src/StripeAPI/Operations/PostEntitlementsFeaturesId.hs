-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postEntitlementsFeaturesId
module StripeAPI.Operations.PostEntitlementsFeaturesId where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/entitlements/features/{id}
-- 
-- \<p>Update a featureâ€™s metadata or permanently deactivate it.\<\/p>
postEntitlementsFeaturesId :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ id | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostEntitlementsFeaturesIdRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostEntitlementsFeaturesIdResponse) -- ^ Monadic computation which returns the result of the operation
postEntitlementsFeaturesId id
                           body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostEntitlementsFeaturesIdResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostEntitlementsFeaturesIdResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                          Entitlements'feature)
                                                                                                                                                                                       | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostEntitlementsFeaturesIdResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                            Error)
                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/entitlements/features/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel id)) GHC.Base.<> "")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/entitlements\/features\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostEntitlementsFeaturesIdRequestBody = PostEntitlementsFeaturesIdRequestBody {
  -- | active: Inactive features cannot be attached to new products and will not be returned from the features list endpoint.
  postEntitlementsFeaturesIdRequestBodyActive :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | expand: Specifies which fields in the response should be expanded.
  , postEntitlementsFeaturesIdRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | metadata: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , postEntitlementsFeaturesIdRequestBodyMetadata :: (GHC.Maybe.Maybe PostEntitlementsFeaturesIdRequestBodyMetadata'Variants)
  -- | name: The feature\'s name, for your own purpose, not meant to be displayable to the customer.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 80
  , postEntitlementsFeaturesIdRequestBodyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostEntitlementsFeaturesIdRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyName obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postEntitlementsFeaturesIdRequestBodyName obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostEntitlementsFeaturesIdRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostEntitlementsFeaturesIdRequestBody" (\obj -> (((GHC.Base.pure PostEntitlementsFeaturesIdRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name"))}
-- | Create a new 'PostEntitlementsFeaturesIdRequestBody' with all required fields.
mkPostEntitlementsFeaturesIdRequestBody :: PostEntitlementsFeaturesIdRequestBody
mkPostEntitlementsFeaturesIdRequestBody = PostEntitlementsFeaturesIdRequestBody{postEntitlementsFeaturesIdRequestBodyActive = GHC.Maybe.Nothing,
                                                                                postEntitlementsFeaturesIdRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                postEntitlementsFeaturesIdRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                postEntitlementsFeaturesIdRequestBodyName = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/entitlements\/features\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
data PostEntitlementsFeaturesIdRequestBodyMetadata'Variants =
   PostEntitlementsFeaturesIdRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostEntitlementsFeaturesIdRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostEntitlementsFeaturesIdRequestBodyMetadata'Variants
    where {toJSON (PostEntitlementsFeaturesIdRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostEntitlementsFeaturesIdRequestBodyMetadata'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostEntitlementsFeaturesIdRequestBodyMetadata'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostEntitlementsFeaturesIdRequestBodyMetadata'EmptyString
                              | GHC.Base.otherwise -> case (PostEntitlementsFeaturesIdRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Represents a response of the operation 'postEntitlementsFeaturesId'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostEntitlementsFeaturesIdResponseError' is used.
data PostEntitlementsFeaturesIdResponse =
   PostEntitlementsFeaturesIdResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostEntitlementsFeaturesIdResponse200 Entitlements'feature -- ^ Successful response.
  | PostEntitlementsFeaturesIdResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
