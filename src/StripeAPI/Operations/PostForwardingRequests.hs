-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postForwardingRequests
module StripeAPI.Operations.PostForwardingRequests where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/forwarding/requests
-- 
-- \<p>Creates a ForwardingRequest object.\<\/p>
postForwardingRequests :: forall m . StripeAPI.Common.MonadHTTP m => PostForwardingRequestsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostForwardingRequestsResponse) -- ^ Monadic computation which returns the result of the operation
postForwardingRequests body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostForwardingRequestsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostForwardingRequestsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              Forwarding'request)
                                                                                                                                                                               | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostForwardingRequestsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                Error)
                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/forwarding/requests" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/forwarding\/requests.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostForwardingRequestsRequestBody = PostForwardingRequestsRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postForwardingRequestsRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postForwardingRequestsRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | payment_method: The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postForwardingRequestsRequestBodyPaymentMethod :: Data.Text.Internal.Text
  -- | replacements: The field kinds to be replaced in the forwarded request.
  , postForwardingRequestsRequestBodyReplacements :: [PostForwardingRequestsRequestBodyReplacements']
  -- | request: The request body and headers to be sent to the destination endpoint.
  , postForwardingRequestsRequestBodyRequest :: (GHC.Maybe.Maybe PostForwardingRequestsRequestBodyRequest')
  -- | url: The destination URL for the forwarded request. Must be supported by the config.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postForwardingRequestsRequestBodyUrl :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostForwardingRequestsRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyMetadata obj) : ["payment_method" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyPaymentMethod obj] : ["replacements" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyReplacements obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyRequest obj) : ["url" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyUrl obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyMetadata obj) : ["payment_method" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyPaymentMethod obj] : ["replacements" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyReplacements obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyRequest obj) : ["url" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyUrl obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostForwardingRequestsRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostForwardingRequestsRequestBody" (\obj -> (((((GHC.Base.pure PostForwardingRequestsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "replacements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))}
-- | Create a new 'PostForwardingRequestsRequestBody' with all required fields.
mkPostForwardingRequestsRequestBody :: Data.Text.Internal.Text -- ^ 'postForwardingRequestsRequestBodyPaymentMethod'
  -> [PostForwardingRequestsRequestBodyReplacements'] -- ^ 'postForwardingRequestsRequestBodyReplacements'
  -> Data.Text.Internal.Text -- ^ 'postForwardingRequestsRequestBodyUrl'
  -> PostForwardingRequestsRequestBody
mkPostForwardingRequestsRequestBody postForwardingRequestsRequestBodyPaymentMethod postForwardingRequestsRequestBodyReplacements postForwardingRequestsRequestBodyUrl = PostForwardingRequestsRequestBody{postForwardingRequestsRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                                          postForwardingRequestsRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                                                                                                                                          postForwardingRequestsRequestBodyPaymentMethod = postForwardingRequestsRequestBodyPaymentMethod,
                                                                                                                                                                                                          postForwardingRequestsRequestBodyReplacements = postForwardingRequestsRequestBodyReplacements,
                                                                                                                                                                                                          postForwardingRequestsRequestBodyRequest = GHC.Maybe.Nothing,
                                                                                                                                                                                                          postForwardingRequestsRequestBodyUrl = postForwardingRequestsRequestBodyUrl}
-- | Defines the enum schema located at @paths.\/v1\/forwarding\/requests.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.replacements.items@ in the specification.
-- 
-- 
data PostForwardingRequestsRequestBodyReplacements' =
   PostForwardingRequestsRequestBodyReplacements'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostForwardingRequestsRequestBodyReplacements'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostForwardingRequestsRequestBodyReplacements'EnumCardCvc -- ^ Represents the JSON value @"card_cvc"@
  | PostForwardingRequestsRequestBodyReplacements'EnumCardExpiry -- ^ Represents the JSON value @"card_expiry"@
  | PostForwardingRequestsRequestBodyReplacements'EnumCardNumber -- ^ Represents the JSON value @"card_number"@
  | PostForwardingRequestsRequestBodyReplacements'EnumCardholderName -- ^ Represents the JSON value @"cardholder_name"@
  | PostForwardingRequestsRequestBodyReplacements'EnumRequestSignature -- ^ Represents the JSON value @"request_signature"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostForwardingRequestsRequestBodyReplacements'
    where {toJSON (PostForwardingRequestsRequestBodyReplacements'Other val) = val;
           toJSON (PostForwardingRequestsRequestBodyReplacements'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostForwardingRequestsRequestBodyReplacements'EnumCardCvc) = "card_cvc";
           toJSON (PostForwardingRequestsRequestBodyReplacements'EnumCardExpiry) = "card_expiry";
           toJSON (PostForwardingRequestsRequestBodyReplacements'EnumCardNumber) = "card_number";
           toJSON (PostForwardingRequestsRequestBodyReplacements'EnumCardholderName) = "cardholder_name";
           toJSON (PostForwardingRequestsRequestBodyReplacements'EnumRequestSignature) = "request_signature"}
instance Data.Aeson.Types.FromJSON.FromJSON PostForwardingRequestsRequestBodyReplacements'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "card_cvc" -> PostForwardingRequestsRequestBodyReplacements'EnumCardCvc
                                             | val GHC.Classes.== "card_expiry" -> PostForwardingRequestsRequestBodyReplacements'EnumCardExpiry
                                             | val GHC.Classes.== "card_number" -> PostForwardingRequestsRequestBodyReplacements'EnumCardNumber
                                             | val GHC.Classes.== "cardholder_name" -> PostForwardingRequestsRequestBodyReplacements'EnumCardholderName
                                             | val GHC.Classes.== "request_signature" -> PostForwardingRequestsRequestBodyReplacements'EnumRequestSignature
                                             | GHC.Base.otherwise -> PostForwardingRequestsRequestBodyReplacements'Other val)}
-- | Defines the object schema located at @paths.\/v1\/forwarding\/requests.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.request@ in the specification.
-- 
-- The request body and headers to be sent to the destination endpoint.
data PostForwardingRequestsRequestBodyRequest' = PostForwardingRequestsRequestBodyRequest' {
  -- | body
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postForwardingRequestsRequestBodyRequest'Body :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headers
  , postForwardingRequestsRequestBodyRequest'Headers :: (GHC.Maybe.Maybe [PostForwardingRequestsRequestBodyRequest'Headers'])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostForwardingRequestsRequestBodyRequest'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("body" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyRequest'Body obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("headers" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyRequest'Headers obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("body" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyRequest'Body obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("headers" Data.Aeson.Types.ToJSON..=)) (postForwardingRequestsRequestBodyRequest'Headers obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostForwardingRequestsRequestBodyRequest'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostForwardingRequestsRequestBodyRequest'" (\obj -> (GHC.Base.pure PostForwardingRequestsRequestBodyRequest' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "headers"))}
-- | Create a new 'PostForwardingRequestsRequestBodyRequest'' with all required fields.
mkPostForwardingRequestsRequestBodyRequest' :: PostForwardingRequestsRequestBodyRequest'
mkPostForwardingRequestsRequestBodyRequest' = PostForwardingRequestsRequestBodyRequest'{postForwardingRequestsRequestBodyRequest'Body = GHC.Maybe.Nothing,
                                                                                        postForwardingRequestsRequestBodyRequest'Headers = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/forwarding\/requests.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.request.properties.headers.items@ in the specification.
-- 
-- 
data PostForwardingRequestsRequestBodyRequest'Headers' = PostForwardingRequestsRequestBodyRequest'Headers' {
  -- | name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postForwardingRequestsRequestBodyRequest'Headers'Name :: Data.Text.Internal.Text
  -- | value
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postForwardingRequestsRequestBodyRequest'Headers'Value :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostForwardingRequestsRequestBodyRequest'Headers'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["name" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyRequest'Headers'Name obj] : ["value" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyRequest'Headers'Value obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["name" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyRequest'Headers'Name obj] : ["value" Data.Aeson.Types.ToJSON..= postForwardingRequestsRequestBodyRequest'Headers'Value obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostForwardingRequestsRequestBodyRequest'Headers'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostForwardingRequestsRequestBodyRequest'Headers'" (\obj -> (GHC.Base.pure PostForwardingRequestsRequestBodyRequest'Headers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "value"))}
-- | Create a new 'PostForwardingRequestsRequestBodyRequest'Headers'' with all required fields.
mkPostForwardingRequestsRequestBodyRequest'Headers' :: Data.Text.Internal.Text -- ^ 'postForwardingRequestsRequestBodyRequest'Headers'Name'
  -> Data.Text.Internal.Text -- ^ 'postForwardingRequestsRequestBodyRequest'Headers'Value'
  -> PostForwardingRequestsRequestBodyRequest'Headers'
mkPostForwardingRequestsRequestBodyRequest'Headers' postForwardingRequestsRequestBodyRequest'Headers'Name postForwardingRequestsRequestBodyRequest'Headers'Value = PostForwardingRequestsRequestBodyRequest'Headers'{postForwardingRequestsRequestBodyRequest'Headers'Name = postForwardingRequestsRequestBodyRequest'Headers'Name,
                                                                                                                                                                                                                     postForwardingRequestsRequestBodyRequest'Headers'Value = postForwardingRequestsRequestBodyRequest'Headers'Value}
-- | Represents a response of the operation 'postForwardingRequests'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostForwardingRequestsResponseError' is used.
data PostForwardingRequestsResponse =
   PostForwardingRequestsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostForwardingRequestsResponse200 Forwarding'request -- ^ Successful response.
  | PostForwardingRequestsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
