-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postInvoicesInvoiceAddLines
module StripeAPI.Operations.PostInvoicesInvoiceAddLines where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/invoices/{invoice}/add_lines
-- 
-- \<p>Adds multiple line items to an invoice. This is only possible when an invoice is still a draft.\<\/p>
postInvoicesInvoiceAddLines :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ invoice | Constraints: Maximum length of 5000
  -> PostInvoicesInvoiceAddLinesRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostInvoicesInvoiceAddLinesResponse) -- ^ Monadic computation which returns the result of the operation
postInvoicesInvoiceAddLines invoice
                            body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostInvoicesInvoiceAddLinesResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostInvoicesInvoiceAddLinesResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                             Invoice)
                                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostInvoicesInvoiceAddLinesResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                               Error)
                                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/invoices/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel invoice)) GHC.Base.<> "/add_lines")) GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBody = PostInvoicesInvoiceAddLinesRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postInvoicesInvoiceAddLinesRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | invoice_metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Variants)
  -- | lines: The line items to add.
  , postInvoicesInvoiceAddLinesRequestBodyLines :: [PostInvoicesInvoiceAddLinesRequestBodyLines']
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata obj) : ["lines" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata obj) : ["lines" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBody" (\obj -> ((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lines"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBody' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBody :: [PostInvoicesInvoiceAddLinesRequestBodyLines'] -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'
  -> PostInvoicesInvoiceAddLinesRequestBody
mkPostInvoicesInvoiceAddLinesRequestBody postInvoicesInvoiceAddLinesRequestBodyLines = PostInvoicesInvoiceAddLinesRequestBody{postInvoicesInvoiceAddLinesRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                              postInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata = GHC.Maybe.Nothing,
                                                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines = postInvoicesInvoiceAddLinesRequestBodyLines}
-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.invoice_metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Variants =
   PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Variants
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'EmptyString
                              | GHC.Base.otherwise -> case (PostInvoicesInvoiceAddLinesRequestBodyInvoiceMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines' = PostInvoicesInvoiceAddLinesRequestBodyLines' {
  -- | amount
  postInvoicesInvoiceAddLinesRequestBodyLines'Amount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | discountable
  , postInvoicesInvoiceAddLinesRequestBodyLines'Discountable :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | discounts
  , postInvoicesInvoiceAddLinesRequestBodyLines'Discounts :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'Variants)
  -- | invoice_item
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'InvoiceItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata
  , postInvoicesInvoiceAddLinesRequestBodyLines'Metadata :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Variants)
  -- | period
  , postInvoicesInvoiceAddLinesRequestBodyLines'Period :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'Period')
  -- | price_data
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData')
  -- | pricing
  , postInvoicesInvoiceAddLinesRequestBodyLines'Pricing :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing')
  -- | quantity
  , postInvoicesInvoiceAddLinesRequestBodyLines'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | tax_amounts
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'Variants)
  -- | tax_rates
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxRates :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discountable" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discountable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'InvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("period" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Period obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pricing" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Pricing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_amounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxRates obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discountable" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discountable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'InvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("period" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Period obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pricing" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Pricing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_amounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxRates obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'" (\obj -> (((((((((((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discountable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "period")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pricing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_rates"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines' :: PostInvoicesInvoiceAddLinesRequestBodyLines'
mkPostInvoicesInvoiceAddLinesRequestBodyLines' = PostInvoicesInvoiceAddLinesRequestBodyLines'{postInvoicesInvoiceAddLinesRequestBodyLines'Amount = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Description = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Discountable = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Discounts = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'InvoiceItem = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Metadata = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Period = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'PriceData = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Pricing = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Quantity = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts = GHC.Maybe.Nothing,
                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'TaxRates = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.discounts.anyOf.items@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 = PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 {
  -- | coupon
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Coupon :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | discount
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Discount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | promotion_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1PromotionCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Coupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Discount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1PromotionCode obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Coupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Discount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1PromotionCode obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1" (\obj -> ((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotion_code"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 :: PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1
mkPostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 = PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1{postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Coupon = GHC.Maybe.Nothing,
                                                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1Discount = GHC.Maybe.Nothing,
                                                                                                                              postInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1PromotionCode = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.discounts.anyOf@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'Variants =
   PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'EmptyString -- ^ Represents the JSON value @""@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'ListTPostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 [PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1]
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'Variants
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'ListTPostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'EmptyString
                              | GHC.Base.otherwise -> case (PostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'ListTPostInvoicesInvoiceAddLinesRequestBodyLines'Discounts'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.metadata.anyOf@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Variants =
   PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'EmptyString -- ^ Represents the JSON value @""@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Variants
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'EmptyString
                              | GHC.Base.otherwise -> case (PostInvoicesInvoiceAddLinesRequestBodyLines'Metadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.period@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'Period' = PostInvoicesInvoiceAddLinesRequestBodyLines'Period' {
  -- | end
  postInvoicesInvoiceAddLinesRequestBodyLines'Period'End :: GHC.Types.Int
  -- | start
  , postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Period'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["end" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'Period'End obj] : ["start" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["end" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'Period'End obj] : ["start" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Period'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'Period'" (\obj -> (GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'Period' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "start"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'Period'' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'Period' :: GHC.Types.Int -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'Period'End'
  -> GHC.Types.Int -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start'
  -> PostInvoicesInvoiceAddLinesRequestBodyLines'Period'
mkPostInvoicesInvoiceAddLinesRequestBodyLines'Period' postInvoicesInvoiceAddLinesRequestBodyLines'Period'End postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start = PostInvoicesInvoiceAddLinesRequestBodyLines'Period'{postInvoicesInvoiceAddLinesRequestBodyLines'Period'End = postInvoicesInvoiceAddLinesRequestBodyLines'Period'End,
                                                                                                                                                                                                                            postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start = postInvoicesInvoiceAddLinesRequestBodyLines'Period'Start}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.price_data@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData' = PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData' {
  -- | currency
  postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency :: Data.Text.Internal.Text
  -- | product
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Product :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_data
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData')
  -- | tax_behavior
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior')
  -- | unit_amount
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | unit_amount_decimal
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmountDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Product obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmountDecimal obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Product obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmountDecimal obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'" (\obj -> (((((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount_decimal"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'PriceData' :: Data.Text.Internal.Text -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency'
  -> PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'
mkPostInvoicesInvoiceAddLinesRequestBodyLines'PriceData' postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency = PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'{postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency = postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Currency,
                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'Product = GHC.Maybe.Nothing,
                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData = GHC.Maybe.Nothing,
                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior = GHC.Maybe.Nothing,
                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmount = GHC.Maybe.Nothing,
                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'UnitAmountDecimal = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.price_data.properties.product_data@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData' = PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData' {
  -- | description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 40000
  postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | images
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Images :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | metadata
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name :: Data.Text.Internal.Text
  -- | tax_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'TaxCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("images" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Images obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Metadata obj) : ["name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'TaxCode obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("images" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Images obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Metadata obj) : ["name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'TaxCode obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'" (\obj -> ((((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "images")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_code"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData' :: Data.Text.Internal.Text -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name'
  -> PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'
mkPostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData' postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name = PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'{postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Description = GHC.Maybe.Nothing,
                                                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Images = GHC.Maybe.Nothing,
                                                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Metadata = GHC.Maybe.Nothing,
                                                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name = postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'Name,
                                                                                                                                                                                                                 postInvoicesInvoiceAddLinesRequestBodyLines'PriceData'ProductData'TaxCode = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.price_data.properties.tax_behavior@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior' =
   PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumExclusive -- ^ Represents the JSON value @"exclusive"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumInclusive -- ^ Represents the JSON value @"inclusive"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumUnspecified -- ^ Represents the JSON value @"unspecified"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'Other val) = val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumExclusive) = "exclusive";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumInclusive) = "inclusive";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumUnspecified) = "unspecified"}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "exclusive" -> PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumExclusive
                                             | val GHC.Classes.== "inclusive" -> PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumInclusive
                                             | val GHC.Classes.== "unspecified" -> PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'EnumUnspecified
                                             | GHC.Base.otherwise -> PostInvoicesInvoiceAddLinesRequestBodyLines'PriceData'TaxBehavior'Other val)}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.pricing@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing' = PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing' {
  -- | price
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postInvoicesInvoiceAddLinesRequestBodyLines'Pricing'Price :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Pricing'Price obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'Pricing'Price obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing'" (\obj -> GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing'' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'Pricing' :: PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing'
mkPostInvoicesInvoiceAddLinesRequestBodyLines'Pricing' = PostInvoicesInvoiceAddLinesRequestBodyLines'Pricing'{postInvoicesInvoiceAddLinesRequestBodyLines'Pricing'Price = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_amounts.anyOf.items@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 = PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 {
  -- | amount
  postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount :: GHC.Types.Int
  -- | tax_rate_data
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData :: PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'
  -- | taxability_reason
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason')
  -- | taxable_amount
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount obj] : ["tax_rate_data" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxability_reason" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason obj) : ["taxable_amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount obj] : ["tax_rate_data" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxability_reason" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason obj) : ["taxable_amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1" (\obj -> (((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tax_rate_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "taxability_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "taxable_amount"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 :: GHC.Types.Int -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount'
  -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData' -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'
  -> GHC.Types.Int -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount'
  -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1
mkPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount = PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1{postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount = postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1Amount,
                                                                                                                                                                                                                                                                                                                                                        postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData = postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData,
                                                                                                                                                                                                                                                                                                                                                        postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                        postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount = postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxableAmount}
-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_amounts.anyOf.items.properties.tax_rate_data@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData' = PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData' {
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | display_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName :: Data.Text.Internal.Text
  -- | inclusive
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive :: GHC.Types.Bool
  -- | jurisdiction
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Jurisdiction :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | jurisdiction_level
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel')
  -- | percentage
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage :: GHC.Types.Double
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tax_type
  , postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType :: (GHC.Maybe.Maybe PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Description obj) : ["display_name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName obj] : ["inclusive" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jurisdiction" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Jurisdiction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jurisdiction_level" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel obj) : ["percentage" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_type" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Description obj) : ["display_name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName obj] : ["inclusive" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jurisdiction" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Jurisdiction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jurisdiction_level" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel obj) : ["percentage" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_type" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'" (\obj -> ((((((((GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "display_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jurisdiction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jurisdiction_level")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "percentage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_type"))}
-- | Create a new 'PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'' with all required fields.
mkPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData' :: Data.Text.Internal.Text -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName'
  -> GHC.Types.Bool -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive'
  -> GHC.Types.Double -- ^ 'postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage'
  -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'
mkPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData' postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage = PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'{postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Country = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Description = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName = postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'DisplayName,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive = postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Inclusive,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Jurisdiction = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage = postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'Percentage,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'State = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                    postInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_amounts.anyOf.items.properties.tax_rate_data.properties.jurisdiction_level@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel' =
   PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCity -- ^ Represents the JSON value @"city"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCountry -- ^ Represents the JSON value @"country"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCounty -- ^ Represents the JSON value @"county"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumDistrict -- ^ Represents the JSON value @"district"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumMultiple -- ^ Represents the JSON value @"multiple"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumState -- ^ Represents the JSON value @"state"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'Other val) = val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCity) = "city";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCountry) = "country";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCounty) = "county";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumDistrict) = "district";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumMultiple) = "multiple";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumState) = "state"}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "city" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCity
                                             | val GHC.Classes.== "country" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCountry
                                             | val GHC.Classes.== "county" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumCounty
                                             | val GHC.Classes.== "district" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumDistrict
                                             | val GHC.Classes.== "multiple" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumMultiple
                                             | val GHC.Classes.== "state" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'EnumState
                                             | GHC.Base.otherwise -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'JurisdictionLevel'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_amounts.anyOf.items.properties.tax_rate_data.properties.tax_type@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType' =
   PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumAmusementTax -- ^ Represents the JSON value @"amusement_tax"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumCommunicationsTax -- ^ Represents the JSON value @"communications_tax"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumGst -- ^ Represents the JSON value @"gst"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumHst -- ^ Represents the JSON value @"hst"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumIgst -- ^ Represents the JSON value @"igst"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumJct -- ^ Represents the JSON value @"jct"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumLeaseTax -- ^ Represents the JSON value @"lease_tax"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumPst -- ^ Represents the JSON value @"pst"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumQst -- ^ Represents the JSON value @"qst"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumRetailDeliveryFee -- ^ Represents the JSON value @"retail_delivery_fee"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumRst -- ^ Represents the JSON value @"rst"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumSalesTax -- ^ Represents the JSON value @"sales_tax"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumServiceTax -- ^ Represents the JSON value @"service_tax"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumVat -- ^ Represents the JSON value @"vat"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'Other val) = val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumAmusementTax) = "amusement_tax";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumCommunicationsTax) = "communications_tax";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumGst) = "gst";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumHst) = "hst";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumIgst) = "igst";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumJct) = "jct";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumLeaseTax) = "lease_tax";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumPst) = "pst";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumQst) = "qst";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumRetailDeliveryFee) = "retail_delivery_fee";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumRst) = "rst";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumSalesTax) = "sales_tax";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumServiceTax) = "service_tax";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumVat) = "vat"}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "amusement_tax" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumAmusementTax
                                             | val GHC.Classes.== "communications_tax" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumCommunicationsTax
                                             | val GHC.Classes.== "gst" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumGst
                                             | val GHC.Classes.== "hst" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumHst
                                             | val GHC.Classes.== "igst" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumIgst
                                             | val GHC.Classes.== "jct" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumJct
                                             | val GHC.Classes.== "lease_tax" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumLeaseTax
                                             | val GHC.Classes.== "pst" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumPst
                                             | val GHC.Classes.== "qst" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumQst
                                             | val GHC.Classes.== "retail_delivery_fee" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumRetailDeliveryFee
                                             | val GHC.Classes.== "rst" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumRst
                                             | val GHC.Classes.== "sales_tax" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumSalesTax
                                             | val GHC.Classes.== "service_tax" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumServiceTax
                                             | val GHC.Classes.== "vat" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'EnumVat
                                             | GHC.Base.otherwise -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxRateData'TaxType'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_amounts.anyOf.items.properties.taxability_reason@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason' =
   PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumCustomerExempt -- ^ Represents the JSON value @"customer_exempt"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotCollecting -- ^ Represents the JSON value @"not_collecting"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotSubjectToTax -- ^ Represents the JSON value @"not_subject_to_tax"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotSupported -- ^ Represents the JSON value @"not_supported"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionProductExempt -- ^ Represents the JSON value @"portion_product_exempt"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionReducedRated -- ^ Represents the JSON value @"portion_reduced_rated"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionStandardRated -- ^ Represents the JSON value @"portion_standard_rated"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProductExempt -- ^ Represents the JSON value @"product_exempt"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProductExemptHoliday -- ^ Represents the JSON value @"product_exempt_holiday"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProportionallyRated -- ^ Represents the JSON value @"proportionally_rated"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumReducedRated -- ^ Represents the JSON value @"reduced_rated"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumReverseCharge -- ^ Represents the JSON value @"reverse_charge"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumStandardRated -- ^ Represents the JSON value @"standard_rated"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumTaxableBasisReduced -- ^ Represents the JSON value @"taxable_basis_reduced"@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumZeroRated -- ^ Represents the JSON value @"zero_rated"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'Other val) = val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumCustomerExempt) = "customer_exempt";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotCollecting) = "not_collecting";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotSubjectToTax) = "not_subject_to_tax";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotSupported) = "not_supported";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionProductExempt) = "portion_product_exempt";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionReducedRated) = "portion_reduced_rated";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionStandardRated) = "portion_standard_rated";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProductExempt) = "product_exempt";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProductExemptHoliday) = "product_exempt_holiday";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProportionallyRated) = "proportionally_rated";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumReducedRated) = "reduced_rated";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumReverseCharge) = "reverse_charge";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumStandardRated) = "standard_rated";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumTaxableBasisReduced) = "taxable_basis_reduced";
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumZeroRated) = "zero_rated"}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "customer_exempt" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumCustomerExempt
                                             | val GHC.Classes.== "not_collecting" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotCollecting
                                             | val GHC.Classes.== "not_subject_to_tax" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotSubjectToTax
                                             | val GHC.Classes.== "not_supported" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumNotSupported
                                             | val GHC.Classes.== "portion_product_exempt" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionProductExempt
                                             | val GHC.Classes.== "portion_reduced_rated" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionReducedRated
                                             | val GHC.Classes.== "portion_standard_rated" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumPortionStandardRated
                                             | val GHC.Classes.== "product_exempt" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProductExempt
                                             | val GHC.Classes.== "product_exempt_holiday" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProductExemptHoliday
                                             | val GHC.Classes.== "proportionally_rated" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumProportionallyRated
                                             | val GHC.Classes.== "reduced_rated" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumReducedRated
                                             | val GHC.Classes.== "reverse_charge" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumReverseCharge
                                             | val GHC.Classes.== "standard_rated" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumStandardRated
                                             | val GHC.Classes.== "taxable_basis_reduced" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumTaxableBasisReduced
                                             | val GHC.Classes.== "zero_rated" -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'EnumZeroRated
                                             | GHC.Base.otherwise -> PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1TaxabilityReason'Other val)}
-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_amounts.anyOf@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'Variants =
   PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'EmptyString -- ^ Represents the JSON value @""@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'ListTPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 [PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1]
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'Variants
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'ListTPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'EmptyString
                              | GHC.Base.otherwise -> case (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'ListTPostInvoicesInvoiceAddLinesRequestBodyLines'TaxAmounts'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/add_lines.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lines.items.properties.tax_rates.anyOf@ in the specification.
-- 
-- 
data PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'Variants =
   PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'EmptyString -- ^ Represents the JSON value @""@
  | PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'ListTText [Data.Text.Internal.Text]
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'Variants
    where {toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'EmptyString
                              | GHC.Base.otherwise -> case (PostInvoicesInvoiceAddLinesRequestBodyLines'TaxRates'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Represents a response of the operation 'postInvoicesInvoiceAddLines'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostInvoicesInvoiceAddLinesResponseError' is used.
data PostInvoicesInvoiceAddLinesResponse =
   PostInvoicesInvoiceAddLinesResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostInvoicesInvoiceAddLinesResponse200 Invoice -- ^ Successful response.
  | PostInvoicesInvoiceAddLinesResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
