-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postIssuingPersonalizationDesigns
module StripeAPI.Operations.PostIssuingPersonalizationDesigns where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/issuing/personalization_designs
-- 
-- \<p>Creates a personalization design object.\<\/p>
postIssuingPersonalizationDesigns :: forall m . StripeAPI.Common.MonadHTTP m => PostIssuingPersonalizationDesignsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostIssuingPersonalizationDesignsResponse) -- ^ Monadic computation which returns the result of the operation
postIssuingPersonalizationDesigns body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostIssuingPersonalizationDesignsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostIssuingPersonalizationDesignsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Issuing'personalizationDesign)
                                                                                                                                                                                                     | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostIssuingPersonalizationDesignsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                 Error)
                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/issuing/personalization_designs" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsRequestBody = PostIssuingPersonalizationDesignsRequestBody {
  -- | card_logo: The file for the card logo, for use with physical bundles that support card logos. Must have a \`purpose\` value of \`issuing_logo\`.
  postIssuingPersonalizationDesignsRequestBodyCardLogo :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | carrier_text: Hash containing carrier text, for use with physical bundles that support carrier text.
  , postIssuingPersonalizationDesignsRequestBodyCarrierText :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsRequestBodyCarrierText')
  -- | expand: Specifies which fields in the response should be expanded.
  , postIssuingPersonalizationDesignsRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | lookup_key: A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postIssuingPersonalizationDesignsRequestBodyLookupKey :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postIssuingPersonalizationDesignsRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | name: Friendly display name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postIssuingPersonalizationDesignsRequestBodyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | physical_bundle: The physical bundle object belonging to this personalization design.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postIssuingPersonalizationDesignsRequestBodyPhysicalBundle :: Data.Text.Internal.Text
  -- | preferences: Information on whether this personalization design is used to create cards when one is not specified.
  , postIssuingPersonalizationDesignsRequestBodyPreferences :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsRequestBodyPreferences')
  -- | transfer_lookup_key: If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.
  , postIssuingPersonalizationDesignsRequestBodyTransferLookupKey :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyLookupKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyName obj) : ["physical_bundle" Data.Aeson.Types.ToJSON..= postIssuingPersonalizationDesignsRequestBodyPhysicalBundle obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferences" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyPreferences obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyTransferLookupKey obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyLookupKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyName obj) : ["physical_bundle" Data.Aeson.Types.ToJSON..= postIssuingPersonalizationDesignsRequestBodyPhysicalBundle obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferences" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyPreferences obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyTransferLookupKey obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingPersonalizationDesignsRequestBody" (\obj -> ((((((((GHC.Base.pure PostIssuingPersonalizationDesignsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier_text")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lookup_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "physical_bundle")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferences")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfer_lookup_key"))}
-- | Create a new 'PostIssuingPersonalizationDesignsRequestBody' with all required fields.
mkPostIssuingPersonalizationDesignsRequestBody :: Data.Text.Internal.Text -- ^ 'postIssuingPersonalizationDesignsRequestBodyPhysicalBundle'
  -> PostIssuingPersonalizationDesignsRequestBody
mkPostIssuingPersonalizationDesignsRequestBody postIssuingPersonalizationDesignsRequestBodyPhysicalBundle = PostIssuingPersonalizationDesignsRequestBody{postIssuingPersonalizationDesignsRequestBodyCardLogo = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyCarrierText = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyLookupKey = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyName = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyPhysicalBundle = postIssuingPersonalizationDesignsRequestBodyPhysicalBundle,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyPreferences = GHC.Maybe.Nothing,
                                                                                                                                                         postIssuingPersonalizationDesignsRequestBodyTransferLookupKey = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text@ in the specification.
-- 
-- Hash containing carrier text, for use with physical bundles that support carrier text.
data PostIssuingPersonalizationDesignsRequestBodyCarrierText' = PostIssuingPersonalizationDesignsRequestBodyCarrierText' {
  -- | footer_body
  postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Variants)
  -- | footer_title
  , postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Variants)
  -- | header_body
  , postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Variants)
  -- | header_title
  , postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingPersonalizationDesignsRequestBodyCarrierText'" (\obj -> (((GHC.Base.pure PostIssuingPersonalizationDesignsRequestBodyCarrierText' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "footer_body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "footer_title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "header_body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "header_title"))}
-- | Create a new 'PostIssuingPersonalizationDesignsRequestBodyCarrierText'' with all required fields.
mkPostIssuingPersonalizationDesignsRequestBodyCarrierText' :: PostIssuingPersonalizationDesignsRequestBodyCarrierText'
mkPostIssuingPersonalizationDesignsRequestBodyCarrierText' = PostIssuingPersonalizationDesignsRequestBodyCarrierText'{postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody = GHC.Maybe.Nothing,
                                                                                                                      postIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle = GHC.Maybe.Nothing,
                                                                                                                      postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody = GHC.Maybe.Nothing,
                                                                                                                      postIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.properties.footer_body.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Variants =
   PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Variants
    where {toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterBody'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.properties.footer_title.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Variants =
   PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Variants
    where {toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsRequestBodyCarrierText'FooterTitle'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.properties.header_body.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Variants =
   PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Variants
    where {toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderBody'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.properties.header_title.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Variants =
   PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Variants
    where {toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsRequestBodyCarrierText'HeaderTitle'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/issuing\/personalization_designs.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.preferences@ in the specification.
-- 
-- Information on whether this personalization design is used to create cards when one is not specified.
data PostIssuingPersonalizationDesignsRequestBodyPreferences' = PostIssuingPersonalizationDesignsRequestBodyPreferences' {
  -- | is_default
  postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsRequestBodyPreferences'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["is_default" Data.Aeson.Types.ToJSON..= postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["is_default" Data.Aeson.Types.ToJSON..= postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsRequestBodyPreferences'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingPersonalizationDesignsRequestBodyPreferences'" (\obj -> GHC.Base.pure PostIssuingPersonalizationDesignsRequestBodyPreferences' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "is_default"))}
-- | Create a new 'PostIssuingPersonalizationDesignsRequestBodyPreferences'' with all required fields.
mkPostIssuingPersonalizationDesignsRequestBodyPreferences' :: GHC.Types.Bool -- ^ 'postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault'
  -> PostIssuingPersonalizationDesignsRequestBodyPreferences'
mkPostIssuingPersonalizationDesignsRequestBodyPreferences' postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault = PostIssuingPersonalizationDesignsRequestBodyPreferences'{postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault = postIssuingPersonalizationDesignsRequestBodyPreferences'IsDefault}
-- | Represents a response of the operation 'postIssuingPersonalizationDesigns'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIssuingPersonalizationDesignsResponseError' is used.
data PostIssuingPersonalizationDesignsResponse =
   PostIssuingPersonalizationDesignsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostIssuingPersonalizationDesignsResponse200 Issuing'personalizationDesign -- ^ Successful response.
  | PostIssuingPersonalizationDesignsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
