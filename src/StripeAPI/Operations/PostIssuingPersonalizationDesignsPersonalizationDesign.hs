-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postIssuingPersonalizationDesignsPersonalizationDesign
module StripeAPI.Operations.PostIssuingPersonalizationDesignsPersonalizationDesign where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/issuing/personalization_designs/{personalization_design}
-- 
-- \<p>Updates a card personalization object.\<\/p>
postIssuingPersonalizationDesignsPersonalizationDesign :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ personalization_design | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostIssuingPersonalizationDesignsPersonalizationDesignResponse) -- ^ Monadic computation which returns the result of the operation
postIssuingPersonalizationDesignsPersonalizationDesign personalizationDesign
                                                       body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostIssuingPersonalizationDesignsPersonalizationDesignResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostIssuingPersonalizationDesignsPersonalizationDesignResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ssuing'personalizationDesign)
                                                                                                                                                                                                                                               | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostIssuingPersonalizationDesignsPersonalizationDesignResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Error)
                                                                                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/issuing/personalization_designs/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel personalizationDesign)) GHC.Base.<> "")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody = PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody {
  -- | card_logo: The file for the card logo, for use with physical bundles that support card logos. Must have a \`purpose\` value of \`issuing_logo\`.
  postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Variants)
  -- | carrier_text: Hash containing carrier text, for use with physical bundles that support carrier text.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'Variants)
  -- | expand: Specifies which fields in the response should be expanded.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | lookup_key: A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Variants)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | name: Friendly display name. Providing an empty string will set the field to null.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Variants)
  -- | physical_bundle: The physical bundle object belonging to this personalization design.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPhysicalBundle :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | preferences: Information on whether this personalization design is used to create cards when one is not specified.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences')
  -- | transfer_lookup_key: If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyTransferLookupKey :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("physical_bundle" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPhysicalBundle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferences" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyTransferLookupKey obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("physical_bundle" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPhysicalBundle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferences" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_lookup_key" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyTransferLookupKey obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody" (\obj -> ((((((((GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier_text")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lookup_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "physical_bundle")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferences")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfer_lookup_key"))}
-- | Create a new 'PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody' with all required fields.
mkPostIssuingPersonalizationDesignsPersonalizationDesignRequestBody :: PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody
mkPostIssuingPersonalizationDesignsPersonalizationDesignRequestBody = PostIssuingPersonalizationDesignsPersonalizationDesignRequestBody{postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPhysicalBundle = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences = GHC.Maybe.Nothing,
                                                                                                                                        postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyTransferLookupKey = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card_logo.anyOf@ in the specification.
-- 
-- The file for the card logo, for use with physical bundles that support card logos. Must have a \`purpose\` value of \`issuing_logo\`.
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCardLogo'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 = PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 {
  -- | footer_body
  postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Variants)
  -- | footer_title
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Variants)
  -- | header_body
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Variants)
  -- | header_title
  , postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle :: (GHC.Maybe.Maybe PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_body" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("header_title" Data.Aeson.Types.ToJSON..=)) (postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1" (\obj -> (((GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "footer_body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "footer_title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "header_body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "header_title"))}
-- | Create a new 'PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1' with all required fields.
mkPostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 :: PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1
mkPostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 = PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1{postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody = GHC.Maybe.Nothing,
                                                                                                                                                                            postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle = GHC.Maybe.Nothing,
                                                                                                                                                                            postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody = GHC.Maybe.Nothing,
                                                                                                                                                                            postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.anyOf.properties.footer_body.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterBody'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.anyOf.properties.footer_title.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1FooterTitle'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.anyOf.properties.header_body.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderBody'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.anyOf.properties.header_title.anyOf@ in the specification.
-- 
-- 
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1HeaderTitle'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.carrier_text.anyOf@ in the specification.
-- 
-- Hash containing carrier text, for use with physical bundles that support carrier text.
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyCarrierText'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.lookup_key.anyOf@ in the specification.
-- 
-- A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyLookupKey'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.name.anyOf@ in the specification.
-- 
-- Friendly display name. Providing an empty string will set the field to null.
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Variants =
   PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Variants
    where {toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'EmptyString
                              | GHC.Base.otherwise -> case (PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyName'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/issuing\/personalization_designs\/{personalization_design}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.preferences@ in the specification.
-- 
-- Information on whether this personalization design is used to create cards when one is not specified.
data PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences' = PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences' {
  -- | is_default
  postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["is_default" Data.Aeson.Types.ToJSON..= postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["is_default" Data.Aeson.Types.ToJSON..= postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'" (\obj -> GHC.Base.pure PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "is_default"))}
-- | Create a new 'PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'' with all required fields.
mkPostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences' :: GHC.Types.Bool -- ^ 'postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault'
  -> PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'
mkPostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences' postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault = PostIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'{postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault = postIssuingPersonalizationDesignsPersonalizationDesignRequestBodyPreferences'IsDefault}
-- | Represents a response of the operation 'postIssuingPersonalizationDesignsPersonalizationDesign'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIssuingPersonalizationDesignsPersonalizationDesignResponseError' is used.
data PostIssuingPersonalizationDesignsPersonalizationDesignResponse =
   PostIssuingPersonalizationDesignsPersonalizationDesignResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostIssuingPersonalizationDesignsPersonalizationDesignResponse200 Issuing'personalizationDesign -- ^ Successful response.
  | PostIssuingPersonalizationDesignsPersonalizationDesignResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
