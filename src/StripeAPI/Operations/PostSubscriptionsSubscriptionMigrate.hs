-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postSubscriptionsSubscriptionMigrate
module StripeAPI.Operations.PostSubscriptionsSubscriptionMigrate where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/subscriptions/{subscription}/migrate
-- 
-- \<p>Upgrade the billing_mode of an existing subscription.\<\/p>
postSubscriptionsSubscriptionMigrate :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ subscription | Constraints: Maximum length of 5000
  -> PostSubscriptionsSubscriptionMigrateRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostSubscriptionsSubscriptionMigrateResponse) -- ^ Monadic computation which returns the result of the operation
postSubscriptionsSubscriptionMigrate subscription
                                     body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostSubscriptionsSubscriptionMigrateResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostSubscriptionsSubscriptionMigrateResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Subscription)
                                                                                                                                                                                                           | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostSubscriptionsSubscriptionMigrateResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                          Error)
                                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/subscriptions/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel subscription)) GHC.Base.<> "/migrate")) GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/subscriptions\/{subscription}\/migrate.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostSubscriptionsSubscriptionMigrateRequestBody = PostSubscriptionsSubscriptionMigrateRequestBody {
  -- | billing_mode: Controls how prorations and invoices for subscriptions are calculated and orchestrated.
  postSubscriptionsSubscriptionMigrateRequestBodyBillingMode :: PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'
  -- | expand: Specifies which fields in the response should be expanded.
  , postSubscriptionsSubscriptionMigrateRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostSubscriptionsSubscriptionMigrateRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["billing_mode" Data.Aeson.Types.ToJSON..= postSubscriptionsSubscriptionMigrateRequestBodyBillingMode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postSubscriptionsSubscriptionMigrateRequestBodyExpand obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["billing_mode" Data.Aeson.Types.ToJSON..= postSubscriptionsSubscriptionMigrateRequestBodyBillingMode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postSubscriptionsSubscriptionMigrateRequestBodyExpand obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostSubscriptionsSubscriptionMigrateRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSubscriptionsSubscriptionMigrateRequestBody" (\obj -> (GHC.Base.pure PostSubscriptionsSubscriptionMigrateRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "billing_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))}
-- | Create a new 'PostSubscriptionsSubscriptionMigrateRequestBody' with all required fields.
mkPostSubscriptionsSubscriptionMigrateRequestBody :: PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode' -- ^ 'postSubscriptionsSubscriptionMigrateRequestBodyBillingMode'
  -> PostSubscriptionsSubscriptionMigrateRequestBody
mkPostSubscriptionsSubscriptionMigrateRequestBody postSubscriptionsSubscriptionMigrateRequestBodyBillingMode = PostSubscriptionsSubscriptionMigrateRequestBody{postSubscriptionsSubscriptionMigrateRequestBodyBillingMode = postSubscriptionsSubscriptionMigrateRequestBodyBillingMode,
                                                                                                                                                               postSubscriptionsSubscriptionMigrateRequestBodyExpand = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/subscriptions\/{subscription}\/migrate.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.billing_mode@ in the specification.
-- 
-- Controls how prorations and invoices for subscriptions are calculated and orchestrated.
data PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode' = PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode' {

  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "flexible"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "flexible"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'" (\obj -> GHC.Base.pure PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode')}
-- | Create a new 'PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'' with all required fields.
mkPostSubscriptionsSubscriptionMigrateRequestBodyBillingMode' :: PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'
mkPostSubscriptionsSubscriptionMigrateRequestBodyBillingMode' = PostSubscriptionsSubscriptionMigrateRequestBodyBillingMode'{}
-- | Represents a response of the operation 'postSubscriptionsSubscriptionMigrate'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSubscriptionsSubscriptionMigrateResponseError' is used.
data PostSubscriptionsSubscriptionMigrateResponse =
   PostSubscriptionsSubscriptionMigrateResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostSubscriptionsSubscriptionMigrateResponse200 Subscription -- ^ Successful response.
  | PostSubscriptionsSubscriptionMigrateResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
