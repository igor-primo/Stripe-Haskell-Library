-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTaxCalculations
module StripeAPI.Operations.PostTaxCalculations where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/tax/calculations
-- 
-- \<p>Calculates tax based on the input and returns a Tax \<code>Calculation\<\/code> object.\<\/p>
postTaxCalculations :: forall m . StripeAPI.Common.MonadHTTP m => PostTaxCalculationsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTaxCalculationsResponse) -- ^ Monadic computation which returns the result of the operation
postTaxCalculations body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTaxCalculationsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTaxCalculationsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                     Tax'calculation)
                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTaxCalculationsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                       Error)
                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/tax/calculations" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBody = PostTaxCalculationsRequestBody {
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  postTaxCalculationsRequestBodyCurrency :: Data.Text.Internal.Text
  -- | customer: The ID of an existing customer to use for this calculation. If provided, the customer\'s address and tax IDs are copied to \`customer_details\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTaxCalculationsRequestBodyCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer_details: Details about the customer, including address and tax IDs.
  , postTaxCalculationsRequestBodyCustomerDetails :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails')
  -- | expand: Specifies which fields in the response should be expanded.
  , postTaxCalculationsRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | line_items: A list of items the customer is purchasing.
  , postTaxCalculationsRequestBodyLineItems :: [PostTaxCalculationsRequestBodyLineItems']
  -- | ship_from_details: Details about the address from which the goods are being shipped.
  , postTaxCalculationsRequestBodyShipFromDetails :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShipFromDetails')
  -- | shipping_cost: Shipping cost details to be used for the calculation.
  , postTaxCalculationsRequestBodyShippingCost :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShippingCost')
  -- | tax_date: Timestamp of date at which the tax rules and rates in effect applies for the calculation. Measured in seconds since the Unix epoch. Can be up to 48 hours in the past, and up to 48 hours in the future.
  , postTaxCalculationsRequestBodyTaxDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_details" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyExpand obj) : ["line_items" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyLineItems obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ship_from_details" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_date" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyTaxDate obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_details" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyExpand obj) : ["line_items" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyLineItems obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ship_from_details" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_date" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyTaxDate obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBody" (\obj -> (((((((GHC.Base.pure PostTaxCalculationsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ship_from_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_cost")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_date"))}
-- | Create a new 'PostTaxCalculationsRequestBody' with all required fields.
mkPostTaxCalculationsRequestBody :: Data.Text.Internal.Text -- ^ 'postTaxCalculationsRequestBodyCurrency'
  -> [PostTaxCalculationsRequestBodyLineItems'] -- ^ 'postTaxCalculationsRequestBodyLineItems'
  -> PostTaxCalculationsRequestBody
mkPostTaxCalculationsRequestBody postTaxCalculationsRequestBodyCurrency postTaxCalculationsRequestBodyLineItems = PostTaxCalculationsRequestBody{postTaxCalculationsRequestBodyCurrency = postTaxCalculationsRequestBodyCurrency,
                                                                                                                                                 postTaxCalculationsRequestBodyCustomer = GHC.Maybe.Nothing,
                                                                                                                                                 postTaxCalculationsRequestBodyCustomerDetails = GHC.Maybe.Nothing,
                                                                                                                                                 postTaxCalculationsRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                 postTaxCalculationsRequestBodyLineItems = postTaxCalculationsRequestBodyLineItems,
                                                                                                                                                 postTaxCalculationsRequestBodyShipFromDetails = GHC.Maybe.Nothing,
                                                                                                                                                 postTaxCalculationsRequestBodyShippingCost = GHC.Maybe.Nothing,
                                                                                                                                                 postTaxCalculationsRequestBodyTaxDate = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details@ in the specification.
-- 
-- Details about the customer, including address and tax IDs.
data PostTaxCalculationsRequestBodyCustomerDetails' = PostTaxCalculationsRequestBodyCustomerDetails' {
  -- | address
  postTaxCalculationsRequestBodyCustomerDetails'Address :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'Address')
  -- | address_source
  , postTaxCalculationsRequestBodyCustomerDetails'AddressSource :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'AddressSource')
  -- | ip_address
  , postTaxCalculationsRequestBodyCustomerDetails'IpAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tax_ids
  , postTaxCalculationsRequestBodyCustomerDetails'TaxIds :: (GHC.Maybe.Maybe [PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'])
  -- | taxability_override
  , postTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_source" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'AddressSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'IpAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_ids" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'TaxIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxability_override" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_source" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'AddressSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'IpAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_ids" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'TaxIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxability_override" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyCustomerDetails'" (\obj -> ((((GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_ids")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "taxability_override"))}
-- | Create a new 'PostTaxCalculationsRequestBodyCustomerDetails'' with all required fields.
mkPostTaxCalculationsRequestBodyCustomerDetails' :: PostTaxCalculationsRequestBodyCustomerDetails'
mkPostTaxCalculationsRequestBodyCustomerDetails' = PostTaxCalculationsRequestBodyCustomerDetails'{postTaxCalculationsRequestBodyCustomerDetails'Address = GHC.Maybe.Nothing,
                                                                                                  postTaxCalculationsRequestBodyCustomerDetails'AddressSource = GHC.Maybe.Nothing,
                                                                                                  postTaxCalculationsRequestBodyCustomerDetails'IpAddress = GHC.Maybe.Nothing,
                                                                                                  postTaxCalculationsRequestBodyCustomerDetails'TaxIds = GHC.Maybe.Nothing,
                                                                                                  postTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'Address' = PostTaxCalculationsRequestBodyCustomerDetails'Address' {
  -- | city
  postTaxCalculationsRequestBodyCustomerDetails'Address'City :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Variants)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTaxCalculationsRequestBodyCustomerDetails'Address'Country :: Data.Text.Internal.Text
  -- | line1
  , postTaxCalculationsRequestBodyCustomerDetails'Address'Line1 :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Variants)
  -- | line2
  , postTaxCalculationsRequestBodyCustomerDetails'Address'Line2 :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Variants)
  -- | postal_code
  , postTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Variants)
  -- | state
  , postTaxCalculationsRequestBodyCustomerDetails'Address'State :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'City obj) : ["country" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCustomerDetails'Address'Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'City obj) : ["country" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCustomerDetails'Address'Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyCustomerDetails'Address'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyCustomerDetails'Address'" (\obj -> (((((GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostTaxCalculationsRequestBodyCustomerDetails'Address'' with all required fields.
mkPostTaxCalculationsRequestBodyCustomerDetails'Address' :: Data.Text.Internal.Text -- ^ 'postTaxCalculationsRequestBodyCustomerDetails'Address'Country'
  -> PostTaxCalculationsRequestBodyCustomerDetails'Address'
mkPostTaxCalculationsRequestBodyCustomerDetails'Address' postTaxCalculationsRequestBodyCustomerDetails'Address'Country = PostTaxCalculationsRequestBodyCustomerDetails'Address'{postTaxCalculationsRequestBodyCustomerDetails'Address'City = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyCustomerDetails'Address'Country = postTaxCalculationsRequestBodyCustomerDetails'Address'Country,
                                                                                                                                                                                postTaxCalculationsRequestBodyCustomerDetails'Address'Line1 = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyCustomerDetails'Address'Line2 = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyCustomerDetails'Address'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address.properties.city.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Variants =
   PostTaxCalculationsRequestBodyCustomerDetails'Address'City'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Variants
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'City'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'Address'City'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyCustomerDetails'Address'City'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address.properties.line1.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Variants =
   PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Variants
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyCustomerDetails'Address'Line1'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address.properties.line2.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Variants =
   PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Variants
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyCustomerDetails'Address'Line2'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address.properties.postal_code.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Variants =
   PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Variants
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyCustomerDetails'Address'PostalCode'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address.properties.state.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Variants =
   PostTaxCalculationsRequestBodyCustomerDetails'Address'State'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Variants
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'Address'State'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'Address'State'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyCustomerDetails'Address'State'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.address_source@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'AddressSource' =
   PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'EnumBilling -- ^ Represents the JSON value @"billing"@
  | PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'EnumShipping -- ^ Represents the JSON value @"shipping"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'Other val) = val;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'EnumBilling) = "billing";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'EnumShipping) = "shipping"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "billing" -> PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'EnumBilling
                                             | val GHC.Classes.== "shipping" -> PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'EnumShipping
                                             | GHC.Base.otherwise -> PostTaxCalculationsRequestBodyCustomerDetails'AddressSource'Other val)}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.tax_ids.items@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'TaxIds' = PostTaxCalculationsRequestBodyCustomerDetails'TaxIds' {
  -- | type
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type :: PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'
  -- | value
  , postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["type" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type obj] : ["value" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["type" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type obj] : ["value" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'" (\obj -> (GHC.Base.pure PostTaxCalculationsRequestBodyCustomerDetails'TaxIds' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "value"))}
-- | Create a new 'PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'' with all required fields.
mkPostTaxCalculationsRequestBodyCustomerDetails'TaxIds' :: PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type' -- ^ 'postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'
  -> Data.Text.Internal.Text -- ^ 'postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value'
  -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'
mkPostTaxCalculationsRequestBodyCustomerDetails'TaxIds' postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value = PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'{postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type = postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type,
                                                                                                                                                                                                                                     postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value = postTaxCalculationsRequestBodyCustomerDetails'TaxIds'Value}
-- | Defines the enum schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.tax_ids.items.properties.type@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type' =
   PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAdNrt -- ^ Represents the JSON value @"ad_nrt"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAeTrn -- ^ Represents the JSON value @"ae_trn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAlTin -- ^ Represents the JSON value @"al_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAmTin -- ^ Represents the JSON value @"am_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAoTin -- ^ Represents the JSON value @"ao_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumArCuit -- ^ Represents the JSON value @"ar_cuit"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAuAbn -- ^ Represents the JSON value @"au_abn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAuArn -- ^ Represents the JSON value @"au_arn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAwTin -- ^ Represents the JSON value @"aw_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAzTin -- ^ Represents the JSON value @"az_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBaTin -- ^ Represents the JSON value @"ba_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBbTin -- ^ Represents the JSON value @"bb_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBdBin -- ^ Represents the JSON value @"bd_bin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBfIfu -- ^ Represents the JSON value @"bf_ifu"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBgUic -- ^ Represents the JSON value @"bg_uic"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBhVat -- ^ Represents the JSON value @"bh_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBjIfu -- ^ Represents the JSON value @"bj_ifu"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBoTin -- ^ Represents the JSON value @"bo_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBrCnpj -- ^ Represents the JSON value @"br_cnpj"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBrCpf -- ^ Represents the JSON value @"br_cpf"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBsTin -- ^ Represents the JSON value @"bs_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumByTin -- ^ Represents the JSON value @"by_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaBn -- ^ Represents the JSON value @"ca_bn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaGstHst -- ^ Represents the JSON value @"ca_gst_hst"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstBc -- ^ Represents the JSON value @"ca_pst_bc"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstMb -- ^ Represents the JSON value @"ca_pst_mb"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstSk -- ^ Represents the JSON value @"ca_pst_sk"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaQst -- ^ Represents the JSON value @"ca_qst"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCdNif -- ^ Represents the JSON value @"cd_nif"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumChUid -- ^ Represents the JSON value @"ch_uid"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumChVat -- ^ Represents the JSON value @"ch_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumClTin -- ^ Represents the JSON value @"cl_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCmNiu -- ^ Represents the JSON value @"cm_niu"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCnTin -- ^ Represents the JSON value @"cn_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCoNit -- ^ Represents the JSON value @"co_nit"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCrTin -- ^ Represents the JSON value @"cr_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCvNif -- ^ Represents the JSON value @"cv_nif"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumDeStn -- ^ Represents the JSON value @"de_stn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumDoRcn -- ^ Represents the JSON value @"do_rcn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEcRuc -- ^ Represents the JSON value @"ec_ruc"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEgTin -- ^ Represents the JSON value @"eg_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEsCif -- ^ Represents the JSON value @"es_cif"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEtTin -- ^ Represents the JSON value @"et_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEuOssVat -- ^ Represents the JSON value @"eu_oss_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEuVat -- ^ Represents the JSON value @"eu_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGbVat -- ^ Represents the JSON value @"gb_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGeVat -- ^ Represents the JSON value @"ge_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGnNif -- ^ Represents the JSON value @"gn_nif"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHkBr -- ^ Represents the JSON value @"hk_br"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHrOib -- ^ Represents the JSON value @"hr_oib"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHuTin -- ^ Represents the JSON value @"hu_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIdNpwp -- ^ Represents the JSON value @"id_npwp"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIlVat -- ^ Represents the JSON value @"il_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumInGst -- ^ Represents the JSON value @"in_gst"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIsVat -- ^ Represents the JSON value @"is_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpCn -- ^ Represents the JSON value @"jp_cn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpRn -- ^ Represents the JSON value @"jp_rn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpTrn -- ^ Represents the JSON value @"jp_trn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKePin -- ^ Represents the JSON value @"ke_pin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKgTin -- ^ Represents the JSON value @"kg_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKhTin -- ^ Represents the JSON value @"kh_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKrBrn -- ^ Represents the JSON value @"kr_brn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKzBin -- ^ Represents the JSON value @"kz_bin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLaTin -- ^ Represents the JSON value @"la_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLiUid -- ^ Represents the JSON value @"li_uid"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLiVat -- ^ Represents the JSON value @"li_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMaVat -- ^ Represents the JSON value @"ma_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMdVat -- ^ Represents the JSON value @"md_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMePib -- ^ Represents the JSON value @"me_pib"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMkVat -- ^ Represents the JSON value @"mk_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMrNif -- ^ Represents the JSON value @"mr_nif"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMxRfc -- ^ Represents the JSON value @"mx_rfc"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMyFrp -- ^ Represents the JSON value @"my_frp"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMyItn -- ^ Represents the JSON value @"my_itn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMySst -- ^ Represents the JSON value @"my_sst"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNgTin -- ^ Represents the JSON value @"ng_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNoVat -- ^ Represents the JSON value @"no_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNoVoec -- ^ Represents the JSON value @"no_voec"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNpPan -- ^ Represents the JSON value @"np_pan"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNzGst -- ^ Represents the JSON value @"nz_gst"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumOmVat -- ^ Represents the JSON value @"om_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumPeRuc -- ^ Represents the JSON value @"pe_ruc"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumPhTin -- ^ Represents the JSON value @"ph_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRoTin -- ^ Represents the JSON value @"ro_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRsPib -- ^ Represents the JSON value @"rs_pib"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRuInn -- ^ Represents the JSON value @"ru_inn"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRuKpp -- ^ Represents the JSON value @"ru_kpp"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSaVat -- ^ Represents the JSON value @"sa_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSgGst -- ^ Represents the JSON value @"sg_gst"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSgUen -- ^ Represents the JSON value @"sg_uen"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSiTin -- ^ Represents the JSON value @"si_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSnNinea -- ^ Represents the JSON value @"sn_ninea"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSrFin -- ^ Represents the JSON value @"sr_fin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSvNit -- ^ Represents the JSON value @"sv_nit"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumThVat -- ^ Represents the JSON value @"th_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTjTin -- ^ Represents the JSON value @"tj_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTrTin -- ^ Represents the JSON value @"tr_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTwVat -- ^ Represents the JSON value @"tw_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTzVat -- ^ Represents the JSON value @"tz_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUaVat -- ^ Represents the JSON value @"ua_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUgTin -- ^ Represents the JSON value @"ug_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUsEin -- ^ Represents the JSON value @"us_ein"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUyRuc -- ^ Represents the JSON value @"uy_ruc"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUzTin -- ^ Represents the JSON value @"uz_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUzVat -- ^ Represents the JSON value @"uz_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumVeRif -- ^ Represents the JSON value @"ve_rif"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumVnTin -- ^ Represents the JSON value @"vn_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZaVat -- ^ Represents the JSON value @"za_vat"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZmTin -- ^ Represents the JSON value @"zm_tin"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZwTin -- ^ Represents the JSON value @"zw_tin"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'Other val) = val;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAdNrt) = "ad_nrt";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAeTrn) = "ae_trn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAlTin) = "al_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAmTin) = "am_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAoTin) = "ao_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumArCuit) = "ar_cuit";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAuAbn) = "au_abn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAuArn) = "au_arn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAwTin) = "aw_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAzTin) = "az_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBaTin) = "ba_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBbTin) = "bb_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBdBin) = "bd_bin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBfIfu) = "bf_ifu";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBgUic) = "bg_uic";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBhVat) = "bh_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBjIfu) = "bj_ifu";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBoTin) = "bo_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBrCnpj) = "br_cnpj";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBrCpf) = "br_cpf";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBsTin) = "bs_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumByTin) = "by_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaBn) = "ca_bn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaGstHst) = "ca_gst_hst";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstBc) = "ca_pst_bc";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstMb) = "ca_pst_mb";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstSk) = "ca_pst_sk";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaQst) = "ca_qst";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCdNif) = "cd_nif";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumChUid) = "ch_uid";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumChVat) = "ch_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumClTin) = "cl_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCmNiu) = "cm_niu";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCnTin) = "cn_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCoNit) = "co_nit";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCrTin) = "cr_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCvNif) = "cv_nif";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumDeStn) = "de_stn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumDoRcn) = "do_rcn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEcRuc) = "ec_ruc";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEgTin) = "eg_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEsCif) = "es_cif";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEtTin) = "et_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEuOssVat) = "eu_oss_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEuVat) = "eu_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGbVat) = "gb_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGeVat) = "ge_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGnNif) = "gn_nif";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHkBr) = "hk_br";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHrOib) = "hr_oib";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHuTin) = "hu_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIdNpwp) = "id_npwp";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIlVat) = "il_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumInGst) = "in_gst";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIsVat) = "is_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpCn) = "jp_cn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpRn) = "jp_rn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpTrn) = "jp_trn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKePin) = "ke_pin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKgTin) = "kg_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKhTin) = "kh_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKrBrn) = "kr_brn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKzBin) = "kz_bin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLaTin) = "la_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLiUid) = "li_uid";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLiVat) = "li_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMaVat) = "ma_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMdVat) = "md_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMePib) = "me_pib";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMkVat) = "mk_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMrNif) = "mr_nif";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMxRfc) = "mx_rfc";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMyFrp) = "my_frp";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMyItn) = "my_itn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMySst) = "my_sst";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNgTin) = "ng_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNoVat) = "no_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNoVoec) = "no_voec";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNpPan) = "np_pan";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNzGst) = "nz_gst";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumOmVat) = "om_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumPeRuc) = "pe_ruc";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumPhTin) = "ph_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRoTin) = "ro_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRsPib) = "rs_pib";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRuInn) = "ru_inn";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRuKpp) = "ru_kpp";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSaVat) = "sa_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSgGst) = "sg_gst";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSgUen) = "sg_uen";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSiTin) = "si_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSnNinea) = "sn_ninea";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSrFin) = "sr_fin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSvNit) = "sv_nit";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumThVat) = "th_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTjTin) = "tj_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTrTin) = "tr_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTwVat) = "tw_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTzVat) = "tz_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUaVat) = "ua_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUgTin) = "ug_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUsEin) = "us_ein";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUyRuc) = "uy_ruc";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUzTin) = "uz_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUzVat) = "uz_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumVeRif) = "ve_rif";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumVnTin) = "vn_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZaVat) = "za_vat";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZmTin) = "zm_tin";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZwTin) = "zw_tin"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ad_nrt" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAdNrt
                                             | val GHC.Classes.== "ae_trn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAeTrn
                                             | val GHC.Classes.== "al_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAlTin
                                             | val GHC.Classes.== "am_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAmTin
                                             | val GHC.Classes.== "ao_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAoTin
                                             | val GHC.Classes.== "ar_cuit" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumArCuit
                                             | val GHC.Classes.== "au_abn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAuAbn
                                             | val GHC.Classes.== "au_arn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAuArn
                                             | val GHC.Classes.== "aw_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAwTin
                                             | val GHC.Classes.== "az_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumAzTin
                                             | val GHC.Classes.== "ba_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBaTin
                                             | val GHC.Classes.== "bb_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBbTin
                                             | val GHC.Classes.== "bd_bin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBdBin
                                             | val GHC.Classes.== "bf_ifu" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBfIfu
                                             | val GHC.Classes.== "bg_uic" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBgUic
                                             | val GHC.Classes.== "bh_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBhVat
                                             | val GHC.Classes.== "bj_ifu" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBjIfu
                                             | val GHC.Classes.== "bo_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBoTin
                                             | val GHC.Classes.== "br_cnpj" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBrCnpj
                                             | val GHC.Classes.== "br_cpf" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBrCpf
                                             | val GHC.Classes.== "bs_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumBsTin
                                             | val GHC.Classes.== "by_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumByTin
                                             | val GHC.Classes.== "ca_bn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaBn
                                             | val GHC.Classes.== "ca_gst_hst" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaGstHst
                                             | val GHC.Classes.== "ca_pst_bc" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstBc
                                             | val GHC.Classes.== "ca_pst_mb" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstMb
                                             | val GHC.Classes.== "ca_pst_sk" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaPstSk
                                             | val GHC.Classes.== "ca_qst" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCaQst
                                             | val GHC.Classes.== "cd_nif" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCdNif
                                             | val GHC.Classes.== "ch_uid" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumChUid
                                             | val GHC.Classes.== "ch_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumChVat
                                             | val GHC.Classes.== "cl_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumClTin
                                             | val GHC.Classes.== "cm_niu" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCmNiu
                                             | val GHC.Classes.== "cn_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCnTin
                                             | val GHC.Classes.== "co_nit" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCoNit
                                             | val GHC.Classes.== "cr_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCrTin
                                             | val GHC.Classes.== "cv_nif" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumCvNif
                                             | val GHC.Classes.== "de_stn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumDeStn
                                             | val GHC.Classes.== "do_rcn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumDoRcn
                                             | val GHC.Classes.== "ec_ruc" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEcRuc
                                             | val GHC.Classes.== "eg_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEgTin
                                             | val GHC.Classes.== "es_cif" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEsCif
                                             | val GHC.Classes.== "et_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEtTin
                                             | val GHC.Classes.== "eu_oss_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEuOssVat
                                             | val GHC.Classes.== "eu_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumEuVat
                                             | val GHC.Classes.== "gb_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGbVat
                                             | val GHC.Classes.== "ge_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGeVat
                                             | val GHC.Classes.== "gn_nif" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumGnNif
                                             | val GHC.Classes.== "hk_br" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHkBr
                                             | val GHC.Classes.== "hr_oib" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHrOib
                                             | val GHC.Classes.== "hu_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumHuTin
                                             | val GHC.Classes.== "id_npwp" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIdNpwp
                                             | val GHC.Classes.== "il_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIlVat
                                             | val GHC.Classes.== "in_gst" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumInGst
                                             | val GHC.Classes.== "is_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumIsVat
                                             | val GHC.Classes.== "jp_cn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpCn
                                             | val GHC.Classes.== "jp_rn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpRn
                                             | val GHC.Classes.== "jp_trn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumJpTrn
                                             | val GHC.Classes.== "ke_pin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKePin
                                             | val GHC.Classes.== "kg_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKgTin
                                             | val GHC.Classes.== "kh_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKhTin
                                             | val GHC.Classes.== "kr_brn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKrBrn
                                             | val GHC.Classes.== "kz_bin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumKzBin
                                             | val GHC.Classes.== "la_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLaTin
                                             | val GHC.Classes.== "li_uid" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLiUid
                                             | val GHC.Classes.== "li_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumLiVat
                                             | val GHC.Classes.== "ma_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMaVat
                                             | val GHC.Classes.== "md_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMdVat
                                             | val GHC.Classes.== "me_pib" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMePib
                                             | val GHC.Classes.== "mk_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMkVat
                                             | val GHC.Classes.== "mr_nif" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMrNif
                                             | val GHC.Classes.== "mx_rfc" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMxRfc
                                             | val GHC.Classes.== "my_frp" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMyFrp
                                             | val GHC.Classes.== "my_itn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMyItn
                                             | val GHC.Classes.== "my_sst" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumMySst
                                             | val GHC.Classes.== "ng_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNgTin
                                             | val GHC.Classes.== "no_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNoVat
                                             | val GHC.Classes.== "no_voec" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNoVoec
                                             | val GHC.Classes.== "np_pan" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNpPan
                                             | val GHC.Classes.== "nz_gst" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumNzGst
                                             | val GHC.Classes.== "om_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumOmVat
                                             | val GHC.Classes.== "pe_ruc" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumPeRuc
                                             | val GHC.Classes.== "ph_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumPhTin
                                             | val GHC.Classes.== "ro_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRoTin
                                             | val GHC.Classes.== "rs_pib" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRsPib
                                             | val GHC.Classes.== "ru_inn" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRuInn
                                             | val GHC.Classes.== "ru_kpp" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumRuKpp
                                             | val GHC.Classes.== "sa_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSaVat
                                             | val GHC.Classes.== "sg_gst" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSgGst
                                             | val GHC.Classes.== "sg_uen" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSgUen
                                             | val GHC.Classes.== "si_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSiTin
                                             | val GHC.Classes.== "sn_ninea" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSnNinea
                                             | val GHC.Classes.== "sr_fin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSrFin
                                             | val GHC.Classes.== "sv_nit" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumSvNit
                                             | val GHC.Classes.== "th_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumThVat
                                             | val GHC.Classes.== "tj_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTjTin
                                             | val GHC.Classes.== "tr_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTrTin
                                             | val GHC.Classes.== "tw_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTwVat
                                             | val GHC.Classes.== "tz_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumTzVat
                                             | val GHC.Classes.== "ua_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUaVat
                                             | val GHC.Classes.== "ug_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUgTin
                                             | val GHC.Classes.== "us_ein" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUsEin
                                             | val GHC.Classes.== "uy_ruc" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUyRuc
                                             | val GHC.Classes.== "uz_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUzTin
                                             | val GHC.Classes.== "uz_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumUzVat
                                             | val GHC.Classes.== "ve_rif" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumVeRif
                                             | val GHC.Classes.== "vn_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumVnTin
                                             | val GHC.Classes.== "za_vat" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZaVat
                                             | val GHC.Classes.== "zm_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZmTin
                                             | val GHC.Classes.== "zw_tin" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'EnumZwTin
                                             | GHC.Base.otherwise -> PostTaxCalculationsRequestBodyCustomerDetails'TaxIds'Type'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.customer_details.properties.taxability_override@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride' =
   PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumCustomerExempt -- ^ Represents the JSON value @"customer_exempt"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumNone -- ^ Represents the JSON value @"none"@
  | PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumReverseCharge -- ^ Represents the JSON value @"reverse_charge"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'
    where {toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'Other val) = val;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumCustomerExempt) = "customer_exempt";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumNone) = "none";
           toJSON (PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumReverseCharge) = "reverse_charge"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "customer_exempt" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumCustomerExempt
                                             | val GHC.Classes.== "none" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumNone
                                             | val GHC.Classes.== "reverse_charge" -> PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'EnumReverseCharge
                                             | GHC.Base.otherwise -> PostTaxCalculationsRequestBodyCustomerDetails'TaxabilityOverride'Other val)}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.line_items.items@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyLineItems' = PostTaxCalculationsRequestBodyLineItems' {
  -- | amount
  postTaxCalculationsRequestBodyLineItems'Amount :: GHC.Types.Int
  -- | metadata
  , postTaxCalculationsRequestBodyLineItems'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | product
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTaxCalculationsRequestBodyLineItems'Product :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | quantity
  , postTaxCalculationsRequestBodyLineItems'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | reference
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postTaxCalculationsRequestBodyLineItems'Reference :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tax_behavior
  , postTaxCalculationsRequestBodyLineItems'TaxBehavior :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyLineItems'TaxBehavior')
  -- | tax_code
  , postTaxCalculationsRequestBodyLineItems'TaxCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyLineItems'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyLineItems'Amount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Product obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Reference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'TaxCode obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyLineItems'Amount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Product obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'Reference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyLineItems'TaxCode obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyLineItems'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyLineItems'" (\obj -> ((((((GHC.Base.pure PostTaxCalculationsRequestBodyLineItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_code"))}
-- | Create a new 'PostTaxCalculationsRequestBodyLineItems'' with all required fields.
mkPostTaxCalculationsRequestBodyLineItems' :: GHC.Types.Int -- ^ 'postTaxCalculationsRequestBodyLineItems'Amount'
  -> PostTaxCalculationsRequestBodyLineItems'
mkPostTaxCalculationsRequestBodyLineItems' postTaxCalculationsRequestBodyLineItems'Amount = PostTaxCalculationsRequestBodyLineItems'{postTaxCalculationsRequestBodyLineItems'Amount = postTaxCalculationsRequestBodyLineItems'Amount,
                                                                                                                                     postTaxCalculationsRequestBodyLineItems'Metadata = GHC.Maybe.Nothing,
                                                                                                                                     postTaxCalculationsRequestBodyLineItems'Product = GHC.Maybe.Nothing,
                                                                                                                                     postTaxCalculationsRequestBodyLineItems'Quantity = GHC.Maybe.Nothing,
                                                                                                                                     postTaxCalculationsRequestBodyLineItems'Reference = GHC.Maybe.Nothing,
                                                                                                                                     postTaxCalculationsRequestBodyLineItems'TaxBehavior = GHC.Maybe.Nothing,
                                                                                                                                     postTaxCalculationsRequestBodyLineItems'TaxCode = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.line_items.items.properties.tax_behavior@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyLineItems'TaxBehavior' =
   PostTaxCalculationsRequestBodyLineItems'TaxBehavior'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTaxCalculationsRequestBodyLineItems'TaxBehavior'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTaxCalculationsRequestBodyLineItems'TaxBehavior'EnumExclusive -- ^ Represents the JSON value @"exclusive"@
  | PostTaxCalculationsRequestBodyLineItems'TaxBehavior'EnumInclusive -- ^ Represents the JSON value @"inclusive"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyLineItems'TaxBehavior'
    where {toJSON (PostTaxCalculationsRequestBodyLineItems'TaxBehavior'Other val) = val;
           toJSON (PostTaxCalculationsRequestBodyLineItems'TaxBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTaxCalculationsRequestBodyLineItems'TaxBehavior'EnumExclusive) = "exclusive";
           toJSON (PostTaxCalculationsRequestBodyLineItems'TaxBehavior'EnumInclusive) = "inclusive"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyLineItems'TaxBehavior'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "exclusive" -> PostTaxCalculationsRequestBodyLineItems'TaxBehavior'EnumExclusive
                                             | val GHC.Classes.== "inclusive" -> PostTaxCalculationsRequestBodyLineItems'TaxBehavior'EnumInclusive
                                             | GHC.Base.otherwise -> PostTaxCalculationsRequestBodyLineItems'TaxBehavior'Other val)}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details@ in the specification.
-- 
-- Details about the address from which the goods are being shipped.
data PostTaxCalculationsRequestBodyShipFromDetails' = PostTaxCalculationsRequestBodyShipFromDetails' {
  -- | address
  postTaxCalculationsRequestBodyShipFromDetails'Address :: PostTaxCalculationsRequestBodyShipFromDetails'Address'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["address" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyShipFromDetails'Address obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["address" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyShipFromDetails'Address obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyShipFromDetails'" (\obj -> GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address"))}
-- | Create a new 'PostTaxCalculationsRequestBodyShipFromDetails'' with all required fields.
mkPostTaxCalculationsRequestBodyShipFromDetails' :: PostTaxCalculationsRequestBodyShipFromDetails'Address' -- ^ 'postTaxCalculationsRequestBodyShipFromDetails'Address'
  -> PostTaxCalculationsRequestBodyShipFromDetails'
mkPostTaxCalculationsRequestBodyShipFromDetails' postTaxCalculationsRequestBodyShipFromDetails'Address = PostTaxCalculationsRequestBodyShipFromDetails'{postTaxCalculationsRequestBodyShipFromDetails'Address = postTaxCalculationsRequestBodyShipFromDetails'Address}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details.properties.address@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShipFromDetails'Address' = PostTaxCalculationsRequestBodyShipFromDetails'Address' {
  -- | city
  postTaxCalculationsRequestBodyShipFromDetails'Address'City :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Variants)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTaxCalculationsRequestBodyShipFromDetails'Address'Country :: Data.Text.Internal.Text
  -- | line1
  , postTaxCalculationsRequestBodyShipFromDetails'Address'Line1 :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Variants)
  -- | line2
  , postTaxCalculationsRequestBodyShipFromDetails'Address'Line2 :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Variants)
  -- | postal_code
  , postTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Variants)
  -- | state
  , postTaxCalculationsRequestBodyShipFromDetails'Address'State :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'City obj) : ["country" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyShipFromDetails'Address'Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'City obj) : ["country" Data.Aeson.Types.ToJSON..= postTaxCalculationsRequestBodyShipFromDetails'Address'Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShipFromDetails'Address'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyShipFromDetails'Address'" (\obj -> (((((GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostTaxCalculationsRequestBodyShipFromDetails'Address'' with all required fields.
mkPostTaxCalculationsRequestBodyShipFromDetails'Address' :: Data.Text.Internal.Text -- ^ 'postTaxCalculationsRequestBodyShipFromDetails'Address'Country'
  -> PostTaxCalculationsRequestBodyShipFromDetails'Address'
mkPostTaxCalculationsRequestBodyShipFromDetails'Address' postTaxCalculationsRequestBodyShipFromDetails'Address'Country = PostTaxCalculationsRequestBodyShipFromDetails'Address'{postTaxCalculationsRequestBodyShipFromDetails'Address'City = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyShipFromDetails'Address'Country = postTaxCalculationsRequestBodyShipFromDetails'Address'Country,
                                                                                                                                                                                postTaxCalculationsRequestBodyShipFromDetails'Address'Line1 = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyShipFromDetails'Address'Line2 = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                postTaxCalculationsRequestBodyShipFromDetails'Address'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details.properties.address.properties.city.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Variants =
   PostTaxCalculationsRequestBodyShipFromDetails'Address'City'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Variants
    where {toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'City'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails'Address'City'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyShipFromDetails'Address'City'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details.properties.address.properties.line1.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Variants =
   PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Variants
    where {toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyShipFromDetails'Address'Line1'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details.properties.address.properties.line2.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Variants =
   PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Variants
    where {toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyShipFromDetails'Address'Line2'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details.properties.address.properties.postal_code.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Variants =
   PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Variants
    where {toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyShipFromDetails'Address'PostalCode'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ship_from_details.properties.address.properties.state.anyOf@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Variants =
   PostTaxCalculationsRequestBodyShipFromDetails'Address'State'EmptyString -- ^ Represents the JSON value @""@
  | PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Variants
    where {toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTaxCalculationsRequestBodyShipFromDetails'Address'State'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTaxCalculationsRequestBodyShipFromDetails'Address'State'EmptyString
                              | GHC.Base.otherwise -> case (PostTaxCalculationsRequestBodyShipFromDetails'Address'State'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.shipping_cost@ in the specification.
-- 
-- Shipping cost details to be used for the calculation.
data PostTaxCalculationsRequestBodyShippingCost' = PostTaxCalculationsRequestBodyShippingCost' {
  -- | amount
  postTaxCalculationsRequestBodyShippingCost'Amount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | shipping_rate
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTaxCalculationsRequestBodyShippingCost'ShippingRate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tax_behavior
  , postTaxCalculationsRequestBodyShippingCost'TaxBehavior :: (GHC.Maybe.Maybe PostTaxCalculationsRequestBodyShippingCost'TaxBehavior')
  -- | tax_code
  , postTaxCalculationsRequestBodyShippingCost'TaxCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShippingCost'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'ShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'TaxCode obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'ShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postTaxCalculationsRequestBodyShippingCost'TaxCode obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShippingCost'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxCalculationsRequestBodyShippingCost'" (\obj -> (((GHC.Base.pure PostTaxCalculationsRequestBodyShippingCost' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_code"))}
-- | Create a new 'PostTaxCalculationsRequestBodyShippingCost'' with all required fields.
mkPostTaxCalculationsRequestBodyShippingCost' :: PostTaxCalculationsRequestBodyShippingCost'
mkPostTaxCalculationsRequestBodyShippingCost' = PostTaxCalculationsRequestBodyShippingCost'{postTaxCalculationsRequestBodyShippingCost'Amount = GHC.Maybe.Nothing,
                                                                                            postTaxCalculationsRequestBodyShippingCost'ShippingRate = GHC.Maybe.Nothing,
                                                                                            postTaxCalculationsRequestBodyShippingCost'TaxBehavior = GHC.Maybe.Nothing,
                                                                                            postTaxCalculationsRequestBodyShippingCost'TaxCode = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/tax\/calculations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.shipping_cost.properties.tax_behavior@ in the specification.
-- 
-- 
data PostTaxCalculationsRequestBodyShippingCost'TaxBehavior' =
   PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'EnumExclusive -- ^ Represents the JSON value @"exclusive"@
  | PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'EnumInclusive -- ^ Represents the JSON value @"inclusive"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'
    where {toJSON (PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'Other val) = val;
           toJSON (PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'EnumExclusive) = "exclusive";
           toJSON (PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'EnumInclusive) = "inclusive"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "exclusive" -> PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'EnumExclusive
                                             | val GHC.Classes.== "inclusive" -> PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'EnumInclusive
                                             | GHC.Base.otherwise -> PostTaxCalculationsRequestBodyShippingCost'TaxBehavior'Other val)}
-- | Represents a response of the operation 'postTaxCalculations'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTaxCalculationsResponseError' is used.
data PostTaxCalculationsResponse =
   PostTaxCalculationsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTaxCalculationsResponse200 Tax'calculation -- ^ Successful response.
  | PostTaxCalculationsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
