-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTerminalReadersReaderCollectPaymentMethod
module StripeAPI.Operations.PostTerminalReadersReaderCollectPaymentMethod where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/terminal/readers/{reader}/collect_payment_method
-- 
-- \<p>Initiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.\<\/p>
postTerminalReadersReaderCollectPaymentMethod :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ reader | Constraints: Maximum length of 5000
  -> PostTerminalReadersReaderCollectPaymentMethodRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTerminalReadersReaderCollectPaymentMethodResponse) -- ^ Monadic computation which returns the result of the operation
postTerminalReadersReaderCollectPaymentMethod reader
                                              body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTerminalReadersReaderCollectPaymentMethodResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTerminalReadersReaderCollectPaymentMethodResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
erminal'reader)
                                                                                                                                                                                                                             | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTerminalReadersReaderCollectPaymentMethodResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Error)
                                                                                                                                                                                                                             | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/terminal/readers/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel reader)) GHC.Base.<> "/collect_payment_method")) GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/terminal\/readers\/{reader}\/collect_payment_method.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTerminalReadersReaderCollectPaymentMethodRequestBody = PostTerminalReadersReaderCollectPaymentMethodRequestBody {
  -- | collect_config: Configuration overrides.
  postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig :: (GHC.Maybe.Maybe PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig')
  -- | expand: Specifies which fields in the response should be expanded.
  , postTerminalReadersReaderCollectPaymentMethodRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | payment_intent: PaymentIntent ID.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalReadersReaderCollectPaymentMethodRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collect_config" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyExpand obj) : ["payment_intent" Data.Aeson.Types.ToJSON..= postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collect_config" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyExpand obj) : ["payment_intent" Data.Aeson.Types.ToJSON..= postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalReadersReaderCollectPaymentMethodRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalReadersReaderCollectPaymentMethodRequestBody" (\obj -> ((GHC.Base.pure PostTerminalReadersReaderCollectPaymentMethodRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "collect_config")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_intent"))}
-- | Create a new 'PostTerminalReadersReaderCollectPaymentMethodRequestBody' with all required fields.
mkPostTerminalReadersReaderCollectPaymentMethodRequestBody :: Data.Text.Internal.Text -- ^ 'postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent'
  -> PostTerminalReadersReaderCollectPaymentMethodRequestBody
mkPostTerminalReadersReaderCollectPaymentMethodRequestBody postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent = PostTerminalReadersReaderCollectPaymentMethodRequestBody{postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTerminalReadersReaderCollectPaymentMethodRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent = postTerminalReadersReaderCollectPaymentMethodRequestBodyPaymentIntent}
-- | Defines the object schema located at @paths.\/v1\/terminal\/readers\/{reader}\/collect_payment_method.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.collect_config@ in the specification.
-- 
-- Configuration overrides.
data PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig' = PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig' {
  -- | allow_redisplay
  postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay :: (GHC.Maybe.Maybe PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay')
  -- | enable_customer_cancellation
  , postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'EnableCustomerCancellation :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | skip_tipping
  , postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'SkipTipping :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | tipping
  , postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping :: (GHC.Maybe.Maybe PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_redisplay" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enable_customer_cancellation" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'EnableCustomerCancellation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_tipping" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'SkipTipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tipping" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_redisplay" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enable_customer_cancellation" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'EnableCustomerCancellation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_tipping" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'SkipTipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tipping" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'" (\obj -> (((GHC.Base.pure PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_redisplay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enable_customer_cancellation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "skip_tipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tipping"))}
-- | Create a new 'PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'' with all required fields.
mkPostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig' :: PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'
mkPostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig' = PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'{postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay = GHC.Maybe.Nothing,
                                                                                                                                                  postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'EnableCustomerCancellation = GHC.Maybe.Nothing,
                                                                                                                                                  postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'SkipTipping = GHC.Maybe.Nothing,
                                                                                                                                                  postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/terminal\/readers\/{reader}\/collect_payment_method.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.collect_config.properties.allow_redisplay@ in the specification.
-- 
-- 
data PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay' =
   PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumAlways -- ^ Represents the JSON value @"always"@
  | PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumLimited -- ^ Represents the JSON value @"limited"@
  | PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumUnspecified -- ^ Represents the JSON value @"unspecified"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'
    where {toJSON (PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'Other val) = val;
           toJSON (PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumAlways) = "always";
           toJSON (PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumLimited) = "limited";
           toJSON (PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumUnspecified) = "unspecified"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "always" -> PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumAlways
                                             | val GHC.Classes.== "limited" -> PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumLimited
                                             | val GHC.Classes.== "unspecified" -> PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'EnumUnspecified
                                             | GHC.Base.otherwise -> PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'AllowRedisplay'Other val)}
-- | Defines the object schema located at @paths.\/v1\/terminal\/readers\/{reader}\/collect_payment_method.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.collect_config.properties.tipping@ in the specification.
-- 
-- 
data PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping' = PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping' {
  -- | amount_eligible
  postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'AmountEligible :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_eligible" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'AmountEligible obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_eligible" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'AmountEligible obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'" (\obj -> GHC.Base.pure PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_eligible"))}
-- | Create a new 'PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'' with all required fields.
mkPostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping' :: PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'
mkPostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping' = PostTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'{postTerminalReadersReaderCollectPaymentMethodRequestBodyCollectConfig'Tipping'AmountEligible = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postTerminalReadersReaderCollectPaymentMethod'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTerminalReadersReaderCollectPaymentMethodResponseError' is used.
data PostTerminalReadersReaderCollectPaymentMethodResponse =
   PostTerminalReadersReaderCollectPaymentMethodResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTerminalReadersReaderCollectPaymentMethodResponse200 Terminal'reader -- ^ Successful response.
  | PostTerminalReadersReaderCollectPaymentMethodResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
