-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTestHelpersConfirmationTokens
module StripeAPI.Operations.PostTestHelpersConfirmationTokens where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/test_helpers/confirmation_tokens
-- 
-- \<p>Creates a test mode Confirmation Token server side for your integration tests.\<\/p>
postTestHelpersConfirmationTokens :: forall m . StripeAPI.Common.MonadHTTP m => GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTestHelpersConfirmationTokensResponse) -- ^ Monadic computation which returns the result of the operation
postTestHelpersConfirmationTokens body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTestHelpersConfirmationTokensResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersConfirmationTokensResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ConfirmationToken)
                                                                                                                                                                                                     | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersConfirmationTokensResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                 Error)
                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/test_helpers/confirmation_tokens" GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBody = PostTestHelpersConfirmationTokensRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postTestHelpersConfirmationTokensRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | payment_method: ID of an existing PaymentMethod.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | payment_method_data: If provided, this hash will be used to create a PaymentMethod.
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData')
  -- | payment_method_options: Payment-method-specific configuration for this ConfirmationToken.
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions')
  -- | return_url: Return URL used to confirm the Intent.
  , postTestHelpersConfirmationTokensRequestBodyReturnUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | setup_future_usage: Indicates that you intend to make future payments with this ConfirmationToken\'s payment method.
  -- 
  -- The presence of this property will [attach the payment method](https:\/\/stripe.com\/docs\/payments\/save-during-payment) to the PaymentIntent\'s Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
  , postTestHelpersConfirmationTokensRequestBodySetupFutureUsage :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage')
  -- | shipping: Shipping information for this ConfirmationToken.
  , postTestHelpersConfirmationTokensRequestBodyShipping :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyShipping')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_data" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyReturnUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_future_usage" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodySetupFutureUsage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_data" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyReturnUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_future_usage" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodySetupFutureUsage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBody" (\obj -> ((((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "setup_future_usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBody' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBody :: PostTestHelpersConfirmationTokensRequestBody
mkPostTestHelpersConfirmationTokensRequestBody = PostTestHelpersConfirmationTokensRequestBody{postTestHelpersConfirmationTokensRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethod = GHC.Maybe.Nothing,
                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethodData = GHC.Maybe.Nothing,
                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions = GHC.Maybe.Nothing,
                                                                                              postTestHelpersConfirmationTokensRequestBodyReturnUrl = GHC.Maybe.Nothing,
                                                                                              postTestHelpersConfirmationTokensRequestBodySetupFutureUsage = GHC.Maybe.Nothing,
                                                                                              postTestHelpersConfirmationTokensRequestBodyShipping = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data@ in the specification.
-- 
-- If provided, this hash will be used to create a PaymentMethod.
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData' {
  -- | acss_debit
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit')
  -- | affirm
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Affirm :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | afterpay_clearpay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AfterpayClearpay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | alipay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alipay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | allow_redisplay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay')
  -- | alma
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alma :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | amazon_pay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AmazonPay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | au_becs_debit
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit')
  -- | bacs_debit
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit')
  -- | bancontact
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Bancontact :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | billie
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Billie :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | billing_details
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails')
  -- | blik
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Blik :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | boleto
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto')
  -- | cashapp
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Cashapp :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | crypto
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Crypto :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | customer_balance
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'CustomerBalance :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | eps
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps')
  -- | fpx
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx')
  -- | giropay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Giropay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | grabpay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Grabpay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | ideal
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal')
  -- | interac_present
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'InteracPresent :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | kakao_pay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KakaoPay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | klarna
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna')
  -- | konbini
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Konbini :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | kr_card
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KrCard :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | link
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Link :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | metadata
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | mobilepay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Mobilepay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | multibanco
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Multibanco :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | naver_pay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay')
  -- | nz_bank_account
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount')
  -- | oxxo
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Oxxo :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | p24
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24 :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24')
  -- | pay_by_bank
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'PayByBank :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | payco
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Payco :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | paynow
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paynow :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | paypal
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paypal :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | pix
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Pix :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | promptpay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Promptpay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | radar_options
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions')
  -- | revolut_pay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RevolutPay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | samsung_pay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SamsungPay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | satispay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Satispay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | sepa_debit
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit')
  -- | sofort
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort')
  -- | swish
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Swish :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | twint
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Twint :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | type
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'
  -- | us_bank_account
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount')
  -- | wechat_pay
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'WechatPay :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | zip
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Zip :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Affirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_redisplay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alma" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alma obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AmazonPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billie" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Billie obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Blik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Cashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("crypto" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Crypto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'CustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Grabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interac_present" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'InteracPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kakao_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KakaoPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Konbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kr_card" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KrCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Link obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mobilepay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Mobilepay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("naver_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nz_bank_account" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Oxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pay_by_bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'PayByBank obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payco" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Payco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pix" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Pix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Promptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("radar_options" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("samsung_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SamsungPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("satispay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Satispay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("swish" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Swish obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("twint" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Twint obj) : ["type" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'WechatPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("zip" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Zip obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Affirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_redisplay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alma" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alma obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AmazonPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billie" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Billie obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Blik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Cashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("crypto" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Crypto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'CustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Grabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interac_present" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'InteracPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kakao_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KakaoPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Konbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kr_card" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KrCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Link obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mobilepay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Mobilepay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("naver_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nz_bank_account" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Oxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pay_by_bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'PayByBank obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payco" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Payco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pix" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Pix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Promptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("radar_options" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("samsung_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SamsungPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("satispay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Satispay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("swish" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Swish obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("twint" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Twint obj) : ["type" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'WechatPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("zip" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Zip obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'" (\obj -> ((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_redisplay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alma")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amazon_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billie")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "blik")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "crypto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interac_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "kakao_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "kr_card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mobilepay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "multibanco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "naver_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nz_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pay_by_bank")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "radar_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "samsung_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "satispay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "swish")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "twint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "zip"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type' -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Affirm = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AfterpayClearpay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alipay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Alma = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AmazonPay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Bancontact = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Billie = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Blik = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Cashapp = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Crypto = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'CustomerBalance = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Giropay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Grabpay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'InteracPresent = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KakaoPay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Konbini = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'KrCard = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Link = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Metadata = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Mobilepay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Multibanco = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Oxxo = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24 = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'PayByBank = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Payco = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paynow = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Paypal = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Pix = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Promptpay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RevolutPay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SamsungPay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Satispay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Swish = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Twint = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'WechatPay = GHC.Maybe.Nothing,
                                                                                                                                                                                                     postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Zip = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.acss_debit@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit' {
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber :: Data.Text.Internal.Text
  -- | institution_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber :: Data.Text.Internal.Text
  -- | transit_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["account_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber obj] : ["institution_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber obj] : ["transit_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["account_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber obj] : ["institution_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber obj] : ["transit_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'" (\obj -> ((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "institution_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transit_number"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit' :: Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'AccountNumber,
                                                                                                                                                                                                                                                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'InstitutionNumber,
                                                                                                                                                                                                                                                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AcssDebit'TransitNumber}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.allow_redisplay@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumAlways -- ^ Represents the JSON value @"always"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumLimited -- ^ Represents the JSON value @"limited"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumUnspecified -- ^ Represents the JSON value @"unspecified"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumAlways) = "always";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumLimited) = "limited";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumUnspecified) = "unspecified"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "always" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumAlways
                                             | val GHC.Classes.== "limited" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumLimited
                                             | val GHC.Classes.== "unspecified" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'EnumUnspecified
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AllowRedisplay'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.au_becs_debit@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit' {
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber :: Data.Text.Internal.Text
  -- | bsb_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["account_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber obj] : ["bsb_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["account_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber obj] : ["bsb_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'" (\obj -> (GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bsb_number"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit' :: Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'AccountNumber,
                                                                                                                                                                                                                                                                                                                                      postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'AuBecsDebit'BsbNumber}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.bacs_debit@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit' {
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'AccountNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | sort_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'SortCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'AccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sort_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'SortCode obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'AccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sort_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'SortCode obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'" (\obj -> (GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sort_code"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'AccountNumber = GHC.Maybe.Nothing,
                                                                                                                                                      postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BacsDebit'SortCode = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.billing_details@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails' {
  -- | address
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'Variants)
  -- | email
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Variants)
  -- | name
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Variants)
  -- | phone
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Variants)
  -- | tax_id
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'TaxId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'TaxId obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'TaxId obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'" (\obj -> ((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_id"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address = GHC.Maybe.Nothing,
                                                                                                                                                                postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email = GHC.Maybe.Nothing,
                                                                                                                                                                postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name = GHC.Maybe.Nothing,
                                                                                                                                                                postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone = GHC.Maybe.Nothing,
                                                                                                                                                                postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'TaxId = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.billing_details.properties.address.anyOf@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1" (\obj -> (((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1City = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Country = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line1 = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1Line2 = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1PostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                            postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.billing_details.properties.address.anyOf@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'Variants =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'EmptyString -- ^ Represents the JSON value @""@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'Variants
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'EmptyString
                              | GHC.Base.otherwise -> case (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Address'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.billing_details.properties.email.anyOf@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Variants =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'EmptyString -- ^ Represents the JSON value @""@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Variants
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'EmptyString
                              | GHC.Base.otherwise -> case (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Email'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.billing_details.properties.name.anyOf@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Variants =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'EmptyString -- ^ Represents the JSON value @""@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Variants
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'EmptyString
                              | GHC.Base.otherwise -> case (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Name'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the oneOf schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.billing_details.properties.phone.anyOf@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Variants =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'EmptyString -- ^ Represents the JSON value @""@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Variants
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'EmptyString
                              | GHC.Base.otherwise -> case (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'BillingDetails'Phone'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.boleto@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto' {
  -- | tax_id
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["tax_id" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["tax_id" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tax_id"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto' :: Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Boleto'TaxId}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.eps@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps' {
  -- | bank
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.eps.properties.bank@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumArzteUndApothekerBank -- ^ Represents the JSON value @"arzte_und_apotheker_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumAustrianAnadiBankAg -- ^ Represents the JSON value @"austrian_anadi_bank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankAustria -- ^ Represents the JSON value @"bank_austria"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankhausCarlSpangler -- ^ Represents the JSON value @"bankhaus_carl_spangler"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankhausSchelhammerUndSchatteraAg -- ^ Represents the JSON value @"bankhaus_schelhammer_und_schattera_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBawagPskAg -- ^ Represents the JSON value @"bawag_psk_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBksBankAg -- ^ Represents the JSON value @"bks_bank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBrullKallmusBankAg -- ^ Represents the JSON value @"brull_kallmus_bank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBtvVierLanderBank -- ^ Represents the JSON value @"btv_vier_lander_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumCapitalBankGraweGruppeAg -- ^ Represents the JSON value @"capital_bank_grawe_gruppe_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumDeutscheBankAg -- ^ Represents the JSON value @"deutsche_bank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumDolomitenbank -- ^ Represents the JSON value @"dolomitenbank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumEasybankAg -- ^ Represents the JSON value @"easybank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumErsteBankUndSparkassen -- ^ Represents the JSON value @"erste_bank_und_sparkassen"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoAlpeadriabankInternationalAg -- ^ Represents the JSON value @"hypo_alpeadriabank_international_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoBankBurgenlandAktiengesellschaft -- ^ Represents the JSON value @"hypo_bank_burgenland_aktiengesellschaft"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoNoeLbFurNiederosterreichUWien -- ^ Represents the JSON value @"hypo_noe_lb_fur_niederosterreich_u_wien"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoOberosterreichSalzburgSteiermark -- ^ Represents the JSON value @"hypo_oberosterreich_salzburg_steiermark"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoTirolBankAg -- ^ Represents the JSON value @"hypo_tirol_bank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoVorarlbergBankAg -- ^ Represents the JSON value @"hypo_vorarlberg_bank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumMarchfelderBank -- ^ Represents the JSON value @"marchfelder_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumOberbankAg -- ^ Represents the JSON value @"oberbank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumRaiffeisenBankengruppeOsterreich -- ^ Represents the JSON value @"raiffeisen_bankengruppe_osterreich"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumSchoellerbankAg -- ^ Represents the JSON value @"schoellerbank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumSpardaBankWien -- ^ Represents the JSON value @"sparda_bank_wien"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVolksbankGruppe -- ^ Represents the JSON value @"volksbank_gruppe"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVolkskreditbankAg -- ^ Represents the JSON value @"volkskreditbank_ag"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVrBankBraunau -- ^ Represents the JSON value @"vr_bank_braunau"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumArzteUndApothekerBank) = "arzte_und_apotheker_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumAustrianAnadiBankAg) = "austrian_anadi_bank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankAustria) = "bank_austria";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankhausCarlSpangler) = "bankhaus_carl_spangler";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankhausSchelhammerUndSchatteraAg) = "bankhaus_schelhammer_und_schattera_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBawagPskAg) = "bawag_psk_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBksBankAg) = "bks_bank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBrullKallmusBankAg) = "brull_kallmus_bank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBtvVierLanderBank) = "btv_vier_lander_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumCapitalBankGraweGruppeAg) = "capital_bank_grawe_gruppe_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumDeutscheBankAg) = "deutsche_bank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumDolomitenbank) = "dolomitenbank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumEasybankAg) = "easybank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumErsteBankUndSparkassen) = "erste_bank_und_sparkassen";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoAlpeadriabankInternationalAg) = "hypo_alpeadriabank_international_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoBankBurgenlandAktiengesellschaft) = "hypo_bank_burgenland_aktiengesellschaft";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoNoeLbFurNiederosterreichUWien) = "hypo_noe_lb_fur_niederosterreich_u_wien";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoOberosterreichSalzburgSteiermark) = "hypo_oberosterreich_salzburg_steiermark";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoTirolBankAg) = "hypo_tirol_bank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoVorarlbergBankAg) = "hypo_vorarlberg_bank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumMarchfelderBank) = "marchfelder_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumOberbankAg) = "oberbank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumRaiffeisenBankengruppeOsterreich) = "raiffeisen_bankengruppe_osterreich";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumSchoellerbankAg) = "schoellerbank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumSpardaBankWien) = "sparda_bank_wien";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVolksbankGruppe) = "volksbank_gruppe";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVolkskreditbankAg) = "volkskreditbank_ag";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVrBankBraunau) = "vr_bank_braunau"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "arzte_und_apotheker_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumArzteUndApothekerBank
                                             | val GHC.Classes.== "austrian_anadi_bank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumAustrianAnadiBankAg
                                             | val GHC.Classes.== "bank_austria" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankAustria
                                             | val GHC.Classes.== "bankhaus_carl_spangler" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankhausCarlSpangler
                                             | val GHC.Classes.== "bankhaus_schelhammer_und_schattera_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBankhausSchelhammerUndSchatteraAg
                                             | val GHC.Classes.== "bawag_psk_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBawagPskAg
                                             | val GHC.Classes.== "bks_bank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBksBankAg
                                             | val GHC.Classes.== "brull_kallmus_bank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBrullKallmusBankAg
                                             | val GHC.Classes.== "btv_vier_lander_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumBtvVierLanderBank
                                             | val GHC.Classes.== "capital_bank_grawe_gruppe_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumCapitalBankGraweGruppeAg
                                             | val GHC.Classes.== "deutsche_bank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumDeutscheBankAg
                                             | val GHC.Classes.== "dolomitenbank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumDolomitenbank
                                             | val GHC.Classes.== "easybank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumEasybankAg
                                             | val GHC.Classes.== "erste_bank_und_sparkassen" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumErsteBankUndSparkassen
                                             | val GHC.Classes.== "hypo_alpeadriabank_international_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoAlpeadriabankInternationalAg
                                             | val GHC.Classes.== "hypo_bank_burgenland_aktiengesellschaft" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoBankBurgenlandAktiengesellschaft
                                             | val GHC.Classes.== "hypo_noe_lb_fur_niederosterreich_u_wien" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoNoeLbFurNiederosterreichUWien
                                             | val GHC.Classes.== "hypo_oberosterreich_salzburg_steiermark" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoOberosterreichSalzburgSteiermark
                                             | val GHC.Classes.== "hypo_tirol_bank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoTirolBankAg
                                             | val GHC.Classes.== "hypo_vorarlberg_bank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumHypoVorarlbergBankAg
                                             | val GHC.Classes.== "marchfelder_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumMarchfelderBank
                                             | val GHC.Classes.== "oberbank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumOberbankAg
                                             | val GHC.Classes.== "raiffeisen_bankengruppe_osterreich" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumRaiffeisenBankengruppeOsterreich
                                             | val GHC.Classes.== "schoellerbank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumSchoellerbankAg
                                             | val GHC.Classes.== "sparda_bank_wien" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumSpardaBankWien
                                             | val GHC.Classes.== "volksbank_gruppe" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVolksbankGruppe
                                             | val GHC.Classes.== "volkskreditbank_ag" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVolkskreditbankAg
                                             | val GHC.Classes.== "vr_bank_braunau" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'EnumVrBankBraunau
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Eps'Bank'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.fpx@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx' {
  -- | bank
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["bank" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["bank" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bank"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank' -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.fpx.properties.bank@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAffinBank -- ^ Represents the JSON value @"affin_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAgrobank -- ^ Represents the JSON value @"agrobank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAllianceBank -- ^ Represents the JSON value @"alliance_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAmbank -- ^ Represents the JSON value @"ambank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankIslam -- ^ Represents the JSON value @"bank_islam"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankMuamalat -- ^ Represents the JSON value @"bank_muamalat"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankOfChina -- ^ Represents the JSON value @"bank_of_china"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankRakyat -- ^ Represents the JSON value @"bank_rakyat"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBsn -- ^ Represents the JSON value @"bsn"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumCimb -- ^ Represents the JSON value @"cimb"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumDeutscheBank -- ^ Represents the JSON value @"deutsche_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumHongLeongBank -- ^ Represents the JSON value @"hong_leong_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumHsbc -- ^ Represents the JSON value @"hsbc"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumKfh -- ^ Represents the JSON value @"kfh"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumMaybank2e -- ^ Represents the JSON value @"maybank2e"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumMaybank2u -- ^ Represents the JSON value @"maybank2u"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumOcbc -- ^ Represents the JSON value @"ocbc"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumPbEnterprise -- ^ Represents the JSON value @"pb_enterprise"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumPublicBank -- ^ Represents the JSON value @"public_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumRhb -- ^ Represents the JSON value @"rhb"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumStandardChartered -- ^ Represents the JSON value @"standard_chartered"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumUob -- ^ Represents the JSON value @"uob"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAffinBank) = "affin_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAgrobank) = "agrobank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAllianceBank) = "alliance_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAmbank) = "ambank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankIslam) = "bank_islam";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankMuamalat) = "bank_muamalat";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankOfChina) = "bank_of_china";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankRakyat) = "bank_rakyat";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBsn) = "bsn";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumCimb) = "cimb";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumDeutscheBank) = "deutsche_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumHongLeongBank) = "hong_leong_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumHsbc) = "hsbc";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumKfh) = "kfh";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumMaybank2e) = "maybank2e";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumMaybank2u) = "maybank2u";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumOcbc) = "ocbc";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumPbEnterprise) = "pb_enterprise";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumPublicBank) = "public_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumRhb) = "rhb";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumStandardChartered) = "standard_chartered";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumUob) = "uob"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "affin_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAffinBank
                                             | val GHC.Classes.== "agrobank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAgrobank
                                             | val GHC.Classes.== "alliance_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAllianceBank
                                             | val GHC.Classes.== "ambank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumAmbank
                                             | val GHC.Classes.== "bank_islam" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankIslam
                                             | val GHC.Classes.== "bank_muamalat" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankMuamalat
                                             | val GHC.Classes.== "bank_of_china" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankOfChina
                                             | val GHC.Classes.== "bank_rakyat" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBankRakyat
                                             | val GHC.Classes.== "bsn" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumBsn
                                             | val GHC.Classes.== "cimb" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumCimb
                                             | val GHC.Classes.== "deutsche_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumDeutscheBank
                                             | val GHC.Classes.== "hong_leong_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumHongLeongBank
                                             | val GHC.Classes.== "hsbc" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumHsbc
                                             | val GHC.Classes.== "kfh" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumKfh
                                             | val GHC.Classes.== "maybank2e" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumMaybank2e
                                             | val GHC.Classes.== "maybank2u" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumMaybank2u
                                             | val GHC.Classes.== "ocbc" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumOcbc
                                             | val GHC.Classes.== "pb_enterprise" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumPbEnterprise
                                             | val GHC.Classes.== "public_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumPublicBank
                                             | val GHC.Classes.== "rhb" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumRhb
                                             | val GHC.Classes.== "standard_chartered" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumStandardChartered
                                             | val GHC.Classes.== "uob" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'EnumUob
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Fpx'Bank'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.ideal@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal' {
  -- | bank
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.ideal.properties.bank@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumAbnAmro -- ^ Represents the JSON value @"abn_amro"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumAsnBank -- ^ Represents the JSON value @"asn_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumBunq -- ^ Represents the JSON value @"bunq"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumBuut -- ^ Represents the JSON value @"buut"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumHandelsbanken -- ^ Represents the JSON value @"handelsbanken"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumIng -- ^ Represents the JSON value @"ing"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumKnab -- ^ Represents the JSON value @"knab"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumMoneyou -- ^ Represents the JSON value @"moneyou"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumN26 -- ^ Represents the JSON value @"n26"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumNn -- ^ Represents the JSON value @"nn"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRabobank -- ^ Represents the JSON value @"rabobank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRegiobank -- ^ Represents the JSON value @"regiobank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRevolut -- ^ Represents the JSON value @"revolut"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumSnsBank -- ^ Represents the JSON value @"sns_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumTriodosBank -- ^ Represents the JSON value @"triodos_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumVanLanschot -- ^ Represents the JSON value @"van_lanschot"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumYoursafe -- ^ Represents the JSON value @"yoursafe"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumAbnAmro) = "abn_amro";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumAsnBank) = "asn_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumBunq) = "bunq";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumBuut) = "buut";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumHandelsbanken) = "handelsbanken";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumIng) = "ing";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumKnab) = "knab";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumMoneyou) = "moneyou";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumN26) = "n26";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumNn) = "nn";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRabobank) = "rabobank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRegiobank) = "regiobank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRevolut) = "revolut";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumSnsBank) = "sns_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumTriodosBank) = "triodos_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumVanLanschot) = "van_lanschot";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumYoursafe) = "yoursafe"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "abn_amro" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumAbnAmro
                                             | val GHC.Classes.== "asn_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumAsnBank
                                             | val GHC.Classes.== "bunq" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumBunq
                                             | val GHC.Classes.== "buut" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumBuut
                                             | val GHC.Classes.== "handelsbanken" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumHandelsbanken
                                             | val GHC.Classes.== "ing" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumIng
                                             | val GHC.Classes.== "knab" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumKnab
                                             | val GHC.Classes.== "moneyou" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumMoneyou
                                             | val GHC.Classes.== "n26" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumN26
                                             | val GHC.Classes.== "nn" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumNn
                                             | val GHC.Classes.== "rabobank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRabobank
                                             | val GHC.Classes.== "regiobank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRegiobank
                                             | val GHC.Classes.== "revolut" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumRevolut
                                             | val GHC.Classes.== "sns_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumSnsBank
                                             | val GHC.Classes.== "triodos_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumTriodosBank
                                             | val GHC.Classes.== "van_lanschot" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumVanLanschot
                                             | val GHC.Classes.== "yoursafe" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'EnumYoursafe
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Ideal'Bank'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.klarna@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna' {
  -- | dob
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.klarna.properties.dob@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob' {
  -- | day
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day :: GHC.Types.Int
  -- | month
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month :: GHC.Types.Int
  -- | year
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day obj] : ["month" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month obj] : ["year" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day obj] : ["month" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month obj] : ["year" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'" (\obj -> ((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob' :: GHC.Types.Int -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day'
  -> GHC.Types.Int -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month'
  -> GHC.Types.Int -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Day,
                                                                                                                                                                                                                                                                                                                                                                                                  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Month,
                                                                                                                                                                                                                                                                                                                                                                                                  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Klarna'Dob'Year}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.naver_pay@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay' {
  -- | funding
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.naver_pay.properties.funding@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'EnumCard -- ^ Represents the JSON value @"card"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'EnumPoints -- ^ Represents the JSON value @"points"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'EnumCard) = "card";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'EnumPoints) = "points"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "card" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'EnumCard
                                             | val GHC.Classes.== "points" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'EnumPoints
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NaverPay'Funding'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.nz_bank_account@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount' {
  -- | account_holder_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountHolderName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber :: Data.Text.Internal.Text
  -- | bank_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode :: Data.Text.Internal.Text
  -- | branch_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode :: Data.Text.Internal.Text
  -- | reference
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 128
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Reference :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | suffix
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountHolderName obj) : ["account_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber obj] : ["bank_code" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode obj] : ["branch_code" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Reference obj) : ["suffix" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountHolderName obj) : ["account_number" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber obj] : ["bank_code" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode obj] : ["branch_code" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Reference obj) : ["suffix" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'" (\obj -> (((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bank_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "branch_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "suffix"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount' :: Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountHolderName = GHC.Maybe.Nothing,
postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'AccountNumber,
postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BankCode,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'BranchCode,
postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Reference = GHC.Maybe.Nothing,
postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'NzBankAccount'Suffix}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.p24@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24' {
  -- | bank
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.p24.properties.bank@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumAliorBank -- ^ Represents the JSON value @"alior_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankMillennium -- ^ Represents the JSON value @"bank_millennium"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankNowyBfgSa -- ^ Represents the JSON value @"bank_nowy_bfg_sa"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankPekaoSa -- ^ Represents the JSON value @"bank_pekao_sa"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankiSpbdzielcze -- ^ Represents the JSON value @"banki_spbdzielcze"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBlik -- ^ Represents the JSON value @"blik"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBnpParibas -- ^ Represents the JSON value @"bnp_paribas"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBoz -- ^ Represents the JSON value @"boz"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumCitiHandlowy -- ^ Represents the JSON value @"citi_handlowy"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumCreditAgricole -- ^ Represents the JSON value @"credit_agricole"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumEnvelobank -- ^ Represents the JSON value @"envelobank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumEtransferPocztowy24 -- ^ Represents the JSON value @"etransfer_pocztowy24"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumGetinBank -- ^ Represents the JSON value @"getin_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumIdeabank -- ^ Represents the JSON value @"ideabank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumIng -- ^ Represents the JSON value @"ing"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumInteligo -- ^ Represents the JSON value @"inteligo"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumMbankMtransfer -- ^ Represents the JSON value @"mbank_mtransfer"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumNestPrzelew -- ^ Represents the JSON value @"nest_przelew"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumNoblePay -- ^ Represents the JSON value @"noble_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumPbacZIpko -- ^ Represents the JSON value @"pbac_z_ipko"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumPlusBank -- ^ Represents the JSON value @"plus_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumSantanderPrzelew24 -- ^ Represents the JSON value @"santander_przelew24"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumTmobileUsbugiBankowe -- ^ Represents the JSON value @"tmobile_usbugi_bankowe"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumToyotaBank -- ^ Represents the JSON value @"toyota_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumVelobank -- ^ Represents the JSON value @"velobank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumVolkswagenBank -- ^ Represents the JSON value @"volkswagen_bank"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumAliorBank) = "alior_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankMillennium) = "bank_millennium";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankNowyBfgSa) = "bank_nowy_bfg_sa";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankPekaoSa) = "bank_pekao_sa";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankiSpbdzielcze) = "banki_spbdzielcze";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBlik) = "blik";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBnpParibas) = "bnp_paribas";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBoz) = "boz";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumCitiHandlowy) = "citi_handlowy";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumCreditAgricole) = "credit_agricole";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumEnvelobank) = "envelobank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumEtransferPocztowy24) = "etransfer_pocztowy24";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumGetinBank) = "getin_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumIdeabank) = "ideabank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumIng) = "ing";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumInteligo) = "inteligo";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumMbankMtransfer) = "mbank_mtransfer";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumNestPrzelew) = "nest_przelew";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumNoblePay) = "noble_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumPbacZIpko) = "pbac_z_ipko";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumPlusBank) = "plus_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumSantanderPrzelew24) = "santander_przelew24";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumTmobileUsbugiBankowe) = "tmobile_usbugi_bankowe";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumToyotaBank) = "toyota_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumVelobank) = "velobank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumVolkswagenBank) = "volkswagen_bank"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "alior_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumAliorBank
                                             | val GHC.Classes.== "bank_millennium" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankMillennium
                                             | val GHC.Classes.== "bank_nowy_bfg_sa" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankNowyBfgSa
                                             | val GHC.Classes.== "bank_pekao_sa" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankPekaoSa
                                             | val GHC.Classes.== "banki_spbdzielcze" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBankiSpbdzielcze
                                             | val GHC.Classes.== "blik" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBlik
                                             | val GHC.Classes.== "bnp_paribas" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBnpParibas
                                             | val GHC.Classes.== "boz" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumBoz
                                             | val GHC.Classes.== "citi_handlowy" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumCitiHandlowy
                                             | val GHC.Classes.== "credit_agricole" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumCreditAgricole
                                             | val GHC.Classes.== "envelobank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumEnvelobank
                                             | val GHC.Classes.== "etransfer_pocztowy24" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumEtransferPocztowy24
                                             | val GHC.Classes.== "getin_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumGetinBank
                                             | val GHC.Classes.== "ideabank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumIdeabank
                                             | val GHC.Classes.== "ing" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumIng
                                             | val GHC.Classes.== "inteligo" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumInteligo
                                             | val GHC.Classes.== "mbank_mtransfer" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumMbankMtransfer
                                             | val GHC.Classes.== "nest_przelew" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumNestPrzelew
                                             | val GHC.Classes.== "noble_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumNoblePay
                                             | val GHC.Classes.== "pbac_z_ipko" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumPbacZIpko
                                             | val GHC.Classes.== "plus_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumPlusBank
                                             | val GHC.Classes.== "santander_przelew24" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumSantanderPrzelew24
                                             | val GHC.Classes.== "tmobile_usbugi_bankowe" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumTmobileUsbugiBankowe
                                             | val GHC.Classes.== "toyota_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumToyotaBank
                                             | val GHC.Classes.== "velobank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumVelobank
                                             | val GHC.Classes.== "volkswagen_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'EnumVolkswagenBank
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'P24'Bank'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.radar_options@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions' {
  -- | session
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'Session :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'Session obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'Session obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "session"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'RadarOptions'Session = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.sepa_debit@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit' {
  -- | iban
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["iban" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["iban" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "iban"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit' :: Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'SepaDebit'Iban}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.sofort@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort' {
  -- | country
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["country" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["country" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country' -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort' postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country = postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.sofort.properties.country@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumAT -- ^ Represents the JSON value @"AT"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumBE -- ^ Represents the JSON value @"BE"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumDE -- ^ Represents the JSON value @"DE"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumES -- ^ Represents the JSON value @"ES"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumIT -- ^ Represents the JSON value @"IT"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumNL -- ^ Represents the JSON value @"NL"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumAT) = "AT";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumBE) = "BE";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumDE) = "DE";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumES) = "ES";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumIT) = "IT";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumNL) = "NL"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "AT" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumAT
                                             | val GHC.Classes.== "BE" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumBE
                                             | val GHC.Classes.== "DE" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumDE
                                             | val GHC.Classes.== "ES" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumES
                                             | val GHC.Classes.== "IT" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumIT
                                             | val GHC.Classes.== "NL" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'EnumNL
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Sofort'Country'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.type@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAcssDebit -- ^ Represents the JSON value @"acss_debit"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAffirm -- ^ Represents the JSON value @"affirm"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAfterpayClearpay -- ^ Represents the JSON value @"afterpay_clearpay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAlipay -- ^ Represents the JSON value @"alipay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAlma -- ^ Represents the JSON value @"alma"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAmazonPay -- ^ Represents the JSON value @"amazon_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAuBecsDebit -- ^ Represents the JSON value @"au_becs_debit"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBacsDebit -- ^ Represents the JSON value @"bacs_debit"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBancontact -- ^ Represents the JSON value @"bancontact"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBillie -- ^ Represents the JSON value @"billie"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBlik -- ^ Represents the JSON value @"blik"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBoleto -- ^ Represents the JSON value @"boleto"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCashapp -- ^ Represents the JSON value @"cashapp"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCrypto -- ^ Represents the JSON value @"crypto"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCustomerBalance -- ^ Represents the JSON value @"customer_balance"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumEps -- ^ Represents the JSON value @"eps"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumFpx -- ^ Represents the JSON value @"fpx"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumGiropay -- ^ Represents the JSON value @"giropay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumGrabpay -- ^ Represents the JSON value @"grabpay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumIdeal -- ^ Represents the JSON value @"ideal"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKakaoPay -- ^ Represents the JSON value @"kakao_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKlarna -- ^ Represents the JSON value @"klarna"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKonbini -- ^ Represents the JSON value @"konbini"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKrCard -- ^ Represents the JSON value @"kr_card"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumLink -- ^ Represents the JSON value @"link"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumMobilepay -- ^ Represents the JSON value @"mobilepay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumMultibanco -- ^ Represents the JSON value @"multibanco"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumNaverPay -- ^ Represents the JSON value @"naver_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumNzBankAccount -- ^ Represents the JSON value @"nz_bank_account"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumOxxo -- ^ Represents the JSON value @"oxxo"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumP24 -- ^ Represents the JSON value @"p24"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPayByBank -- ^ Represents the JSON value @"pay_by_bank"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPayco -- ^ Represents the JSON value @"payco"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPaynow -- ^ Represents the JSON value @"paynow"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPaypal -- ^ Represents the JSON value @"paypal"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPix -- ^ Represents the JSON value @"pix"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPromptpay -- ^ Represents the JSON value @"promptpay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumRevolutPay -- ^ Represents the JSON value @"revolut_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSamsungPay -- ^ Represents the JSON value @"samsung_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSatispay -- ^ Represents the JSON value @"satispay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSepaDebit -- ^ Represents the JSON value @"sepa_debit"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSofort -- ^ Represents the JSON value @"sofort"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSwish -- ^ Represents the JSON value @"swish"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumTwint -- ^ Represents the JSON value @"twint"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumUsBankAccount -- ^ Represents the JSON value @"us_bank_account"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumWechatPay -- ^ Represents the JSON value @"wechat_pay"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumZip -- ^ Represents the JSON value @"zip"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAcssDebit) = "acss_debit";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAffirm) = "affirm";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAfterpayClearpay) = "afterpay_clearpay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAlipay) = "alipay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAlma) = "alma";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAmazonPay) = "amazon_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAuBecsDebit) = "au_becs_debit";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBacsDebit) = "bacs_debit";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBancontact) = "bancontact";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBillie) = "billie";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBlik) = "blik";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBoleto) = "boleto";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCashapp) = "cashapp";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCrypto) = "crypto";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCustomerBalance) = "customer_balance";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumEps) = "eps";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumFpx) = "fpx";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumGiropay) = "giropay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumGrabpay) = "grabpay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumIdeal) = "ideal";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKakaoPay) = "kakao_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKlarna) = "klarna";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKonbini) = "konbini";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKrCard) = "kr_card";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumLink) = "link";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumMobilepay) = "mobilepay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumMultibanco) = "multibanco";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumNaverPay) = "naver_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumNzBankAccount) = "nz_bank_account";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumOxxo) = "oxxo";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumP24) = "p24";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPayByBank) = "pay_by_bank";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPayco) = "payco";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPaynow) = "paynow";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPaypal) = "paypal";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPix) = "pix";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPromptpay) = "promptpay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumRevolutPay) = "revolut_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSamsungPay) = "samsung_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSatispay) = "satispay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSepaDebit) = "sepa_debit";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSofort) = "sofort";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSwish) = "swish";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumTwint) = "twint";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumUsBankAccount) = "us_bank_account";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumWechatPay) = "wechat_pay";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumZip) = "zip"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "acss_debit" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAcssDebit
                                             | val GHC.Classes.== "affirm" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAffirm
                                             | val GHC.Classes.== "afterpay_clearpay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAfterpayClearpay
                                             | val GHC.Classes.== "alipay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAlipay
                                             | val GHC.Classes.== "alma" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAlma
                                             | val GHC.Classes.== "amazon_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAmazonPay
                                             | val GHC.Classes.== "au_becs_debit" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumAuBecsDebit
                                             | val GHC.Classes.== "bacs_debit" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBacsDebit
                                             | val GHC.Classes.== "bancontact" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBancontact
                                             | val GHC.Classes.== "billie" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBillie
                                             | val GHC.Classes.== "blik" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBlik
                                             | val GHC.Classes.== "boleto" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumBoleto
                                             | val GHC.Classes.== "cashapp" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCashapp
                                             | val GHC.Classes.== "crypto" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCrypto
                                             | val GHC.Classes.== "customer_balance" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumCustomerBalance
                                             | val GHC.Classes.== "eps" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumEps
                                             | val GHC.Classes.== "fpx" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumFpx
                                             | val GHC.Classes.== "giropay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumGiropay
                                             | val GHC.Classes.== "grabpay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumGrabpay
                                             | val GHC.Classes.== "ideal" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumIdeal
                                             | val GHC.Classes.== "kakao_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKakaoPay
                                             | val GHC.Classes.== "klarna" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKlarna
                                             | val GHC.Classes.== "konbini" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKonbini
                                             | val GHC.Classes.== "kr_card" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumKrCard
                                             | val GHC.Classes.== "link" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumLink
                                             | val GHC.Classes.== "mobilepay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumMobilepay
                                             | val GHC.Classes.== "multibanco" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumMultibanco
                                             | val GHC.Classes.== "naver_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumNaverPay
                                             | val GHC.Classes.== "nz_bank_account" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumNzBankAccount
                                             | val GHC.Classes.== "oxxo" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumOxxo
                                             | val GHC.Classes.== "p24" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumP24
                                             | val GHC.Classes.== "pay_by_bank" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPayByBank
                                             | val GHC.Classes.== "payco" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPayco
                                             | val GHC.Classes.== "paynow" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPaynow
                                             | val GHC.Classes.== "paypal" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPaypal
                                             | val GHC.Classes.== "pix" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPix
                                             | val GHC.Classes.== "promptpay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumPromptpay
                                             | val GHC.Classes.== "revolut_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumRevolutPay
                                             | val GHC.Classes.== "samsung_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSamsungPay
                                             | val GHC.Classes.== "satispay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSatispay
                                             | val GHC.Classes.== "sepa_debit" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSepaDebit
                                             | val GHC.Classes.== "sofort" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSofort
                                             | val GHC.Classes.== "swish" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumSwish
                                             | val GHC.Classes.== "twint" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumTwint
                                             | val GHC.Classes.== "us_bank_account" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumUsBankAccount
                                             | val GHC.Classes.== "wechat_pay" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumWechatPay
                                             | val GHC.Classes.== "zip" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'EnumZip
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'Type'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.us_bank_account@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount' {
  -- | account_holder_type
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType')
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | account_type
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType')
  -- | financial_connections_account
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'FinancialConnectionsAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | routing_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'RoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections_account" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'FinancialConnectionsAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'RoutingNumber obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections_account" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'FinancialConnectionsAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'RoutingNumber obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'" (\obj -> ((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_connections_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType = GHC.Maybe.Nothing,
                                                                                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountNumber = GHC.Maybe.Nothing,
                                                                                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType = GHC.Maybe.Nothing,
                                                                                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'FinancialConnectionsAccount = GHC.Maybe.Nothing,
                                                                                                                                                              postTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'RoutingNumber = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.us_bank_account.properties.account_holder_type@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'EnumCompany -- ^ Represents the JSON value @"company"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'EnumIndividual -- ^ Represents the JSON value @"individual"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'EnumCompany) = "company";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'EnumIndividual) = "individual"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "company" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'EnumCompany
                                             | val GHC.Classes.== "individual" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'EnumIndividual
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountHolderType'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_data.properties.us_bank_account.properties.account_type@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'EnumChecking -- ^ Represents the JSON value @"checking"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'EnumSavings -- ^ Represents the JSON value @"savings"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'EnumChecking) = "checking";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'EnumSavings) = "savings"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "checking" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'EnumChecking
                                             | val GHC.Classes.== "savings" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'EnumSavings
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodData'UsBankAccount'AccountType'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_options@ in the specification.
-- 
-- Payment-method-specific configuration for this ConfirmationToken.
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions' {
  -- | card
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_options.properties.card@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card' {
  -- | installments
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("installments" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("installments" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "installments"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_options.properties.card.properties.installments@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments' {
  -- | plan
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["plan" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["plan" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'" (\obj -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "plan"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan' -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments' postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan = postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_options.properties.card.properties.installments.properties.plan@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan' = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan' {
  -- | count
  postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Count :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | interval
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval')
  -- | type
  , postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("count" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Count obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval obj) : ["type" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("count" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Count obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval obj) : ["type" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'" (\obj -> ((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan' :: PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type' -- ^ 'postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'
  -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'
mkPostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan' postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type = PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'{postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Count = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                   postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                   postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type = postTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_options.properties.card.properties.installments.properties.plan.properties.interval@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'EnumMonth -- ^ Represents the JSON value @"month"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'EnumMonth) = "month"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "month" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'EnumMonth
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Interval'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_options.properties.card.properties.installments.properties.plan.properties.type@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type' =
   PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumBonus -- ^ Represents the JSON value @"bonus"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumFixedCount -- ^ Represents the JSON value @"fixed_count"@
  | PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumRevolving -- ^ Represents the JSON value @"revolving"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumBonus) = "bonus";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumFixedCount) = "fixed_count";
           toJSON (PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumRevolving) = "revolving"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "bonus" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumBonus
                                             | val GHC.Classes.== "fixed_count" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumFixedCount
                                             | val GHC.Classes.== "revolving" -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'EnumRevolving
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodyPaymentMethodOptions'Card'Installments'Plan'Type'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.setup_future_usage@ in the specification.
-- 
-- Indicates that you intend to make future payments with this ConfirmationToken\'s payment method.
-- 
-- The presence of this property will [attach the payment method](https:\/\/stripe.com\/docs\/payments\/save-during-payment) to the PaymentIntent\'s Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
data PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage' =
   PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'EnumOffSession -- ^ Represents the JSON value @"off_session"@
  | PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'EnumOnSession -- ^ Represents the JSON value @"on_session"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'Other val) = val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'EnumOffSession) = "off_session";
           toJSON (PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'EnumOnSession) = "on_session"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "off_session" -> PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'EnumOffSession
                                             | val GHC.Classes.== "on_session" -> PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'EnumOnSession
                                             | GHC.Base.otherwise -> PostTestHelpersConfirmationTokensRequestBodySetupFutureUsage'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.shipping@ in the specification.
-- 
-- Shipping information for this ConfirmationToken.
data PostTestHelpersConfirmationTokensRequestBodyShipping' = PostTestHelpersConfirmationTokensRequestBodyShipping' {
  -- | address
  postTestHelpersConfirmationTokensRequestBodyShipping'Address :: PostTestHelpersConfirmationTokensRequestBodyShipping'Address'
  -- | name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyShipping'Name :: Data.Text.Internal.Text
  -- | phone
  , postTestHelpersConfirmationTokensRequestBodyShipping'Phone :: (GHC.Maybe.Maybe PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyShipping'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["address" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyShipping'Address obj] : ["name" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyShipping'Name obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Phone obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["address" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyShipping'Address obj] : ["name" Data.Aeson.Types.ToJSON..= postTestHelpersConfirmationTokensRequestBodyShipping'Name obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Phone obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyShipping'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyShipping'" (\obj -> ((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyShipping' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyShipping'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyShipping' :: PostTestHelpersConfirmationTokensRequestBodyShipping'Address' -- ^ 'postTestHelpersConfirmationTokensRequestBodyShipping'Address'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersConfirmationTokensRequestBodyShipping'Name'
  -> PostTestHelpersConfirmationTokensRequestBodyShipping'
mkPostTestHelpersConfirmationTokensRequestBodyShipping' postTestHelpersConfirmationTokensRequestBodyShipping'Address postTestHelpersConfirmationTokensRequestBodyShipping'Name = PostTestHelpersConfirmationTokensRequestBodyShipping'{postTestHelpersConfirmationTokensRequestBodyShipping'Address = postTestHelpersConfirmationTokensRequestBodyShipping'Address,
                                                                                                                                                                                                                                       postTestHelpersConfirmationTokensRequestBodyShipping'Name = postTestHelpersConfirmationTokensRequestBodyShipping'Name,
                                                                                                                                                                                                                                       postTestHelpersConfirmationTokensRequestBodyShipping'Phone = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.shipping.properties.address@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyShipping'Address' = PostTestHelpersConfirmationTokensRequestBodyShipping'Address' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersConfirmationTokensRequestBodyShipping'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyShipping'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyShipping'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersConfirmationTokensRequestBodyShipping'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyShipping'Address'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'State obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTestHelpersConfirmationTokensRequestBodyShipping'Address'State obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyShipping'Address'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersConfirmationTokensRequestBodyShipping'Address'" (\obj -> (((((GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyShipping'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))}
-- | Create a new 'PostTestHelpersConfirmationTokensRequestBodyShipping'Address'' with all required fields.
mkPostTestHelpersConfirmationTokensRequestBodyShipping'Address' :: PostTestHelpersConfirmationTokensRequestBodyShipping'Address'
mkPostTestHelpersConfirmationTokensRequestBodyShipping'Address' = PostTestHelpersConfirmationTokensRequestBodyShipping'Address'{postTestHelpersConfirmationTokensRequestBodyShipping'Address'City = GHC.Maybe.Nothing,
                                                                                                                                postTestHelpersConfirmationTokensRequestBodyShipping'Address'Country = GHC.Maybe.Nothing,
                                                                                                                                postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line1 = GHC.Maybe.Nothing,
                                                                                                                                postTestHelpersConfirmationTokensRequestBodyShipping'Address'Line2 = GHC.Maybe.Nothing,
                                                                                                                                postTestHelpersConfirmationTokensRequestBodyShipping'Address'PostalCode = GHC.Maybe.Nothing,
                                                                                                                                postTestHelpersConfirmationTokensRequestBodyShipping'Address'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/test_helpers\/confirmation_tokens.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.shipping.properties.phone.anyOf@ in the specification.
-- 
-- 
data PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Variants =
   PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'EmptyString -- ^ Represents the JSON value @""@
  | PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Variants
    where {toJSON (PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'EmptyString) = ""}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Variants
    where {parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'EmptyString
                              | GHC.Base.otherwise -> case (PostTestHelpersConfirmationTokensRequestBodyShipping'Phone'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Represents a response of the operation 'postTestHelpersConfirmationTokens'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTestHelpersConfirmationTokensResponseError' is used.
data PostTestHelpersConfirmationTokensResponse =
   PostTestHelpersConfirmationTokensResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTestHelpersConfirmationTokensResponse200 ConfirmationToken -- ^ Successful response.
  | PostTestHelpersConfirmationTokensResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
