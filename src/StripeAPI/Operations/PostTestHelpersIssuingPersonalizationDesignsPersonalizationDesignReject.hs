-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject
module StripeAPI.Operations.PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject
-- 
-- \<p>Updates the \<code>status\<\/code> of the specified testmode personalization design object to \<code>rejected\<\/code>.\<\/p>
postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ personalization_design | Constraints: Maximum length of 5000
  -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponse) -- ^ Monadic computation which returns the result of the operation
postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject personalizationDesign
                                                                        body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ssuing'personalizationDesign)
                                                                                                                                                                                                                                                                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
rror)
                                                                                                                                                                                                                                                                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/test_helpers/issuing/personalization_designs/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel personalizationDesign)) GHC.Base.<> "/reject")) GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/personalization_designs\/{personalization_design}\/reject.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody = PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | rejection_reasons: The reason(s) the personalization design was rejected.
  , postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons :: PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyExpand obj) : ["rejection_reasons" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyExpand obj) : ["rejection_reasons" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody" (\obj -> (GHC.Base.pure PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rejection_reasons"))}
-- | Create a new 'PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody' with all required fields.
mkPostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody :: PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons' -- ^ 'postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'
  -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody
mkPostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons = PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBody{postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                             postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons = postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/personalization_designs\/{personalization_design}\/reject.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.rejection_reasons@ in the specification.
-- 
-- The reason(s) the personalization design was rejected.
data PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons' = PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons' {
  -- | card_logo
  postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo :: (GHC.Maybe.Maybe [PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'])
  -- | carrier_text
  , postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText :: (GHC.Maybe.Maybe [PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'" (\obj -> (GHC.Base.pure PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier_text"))}
-- | Create a new 'PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'' with all required fields.
mkPostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons' :: PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'
mkPostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons' = PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'{postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo = GHC.Maybe.Nothing,
                                                                                                                                                                                                            postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/issuing\/personalization_designs\/{personalization_design}\/reject.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.rejection_reasons.properties.card_logo.items@ in the specification.
-- 
-- 
data PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo' =
   PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumGeographicLocation -- ^ Represents the JSON value @"geographic_location"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumInappropriate -- ^ Represents the JSON value @"inappropriate"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNetworkName -- ^ Represents the JSON value @"network_name"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNonBinaryImage -- ^ Represents the JSON value @"non_binary_image"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNonFiatCurrency -- ^ Represents the JSON value @"non_fiat_currency"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumOther -- ^ Represents the JSON value @"other"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumOtherEntity -- ^ Represents the JSON value @"other_entity"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumPromotionalMaterial -- ^ Represents the JSON value @"promotional_material"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'
    where {toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'Other val) = val;
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumGeographicLocation) = "geographic_location";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumInappropriate) = "inappropriate";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNetworkName) = "network_name";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNonBinaryImage) = "non_binary_image";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNonFiatCurrency) = "non_fiat_currency";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumOther) = "other";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumOtherEntity) = "other_entity";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumPromotionalMaterial) = "promotional_material"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "geographic_location" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumGeographicLocation
                                             | val GHC.Classes.== "inappropriate" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumInappropriate
                                             | val GHC.Classes.== "network_name" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNetworkName
                                             | val GHC.Classes.== "non_binary_image" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNonBinaryImage
                                             | val GHC.Classes.== "non_fiat_currency" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumNonFiatCurrency
                                             | val GHC.Classes.== "other" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumOther
                                             | val GHC.Classes.== "other_entity" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumOtherEntity
                                             | val GHC.Classes.== "promotional_material" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'EnumPromotionalMaterial
                                             | GHC.Base.otherwise -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CardLogo'Other val)}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/issuing\/personalization_designs\/{personalization_design}\/reject.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.rejection_reasons.properties.carrier_text.items@ in the specification.
-- 
-- 
data PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText' =
   PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumGeographicLocation -- ^ Represents the JSON value @"geographic_location"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumInappropriate -- ^ Represents the JSON value @"inappropriate"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumNetworkName -- ^ Represents the JSON value @"network_name"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumNonFiatCurrency -- ^ Represents the JSON value @"non_fiat_currency"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumOther -- ^ Represents the JSON value @"other"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumOtherEntity -- ^ Represents the JSON value @"other_entity"@
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumPromotionalMaterial -- ^ Represents the JSON value @"promotional_material"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'
    where {toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'Other val) = val;
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumGeographicLocation) = "geographic_location";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumInappropriate) = "inappropriate";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumNetworkName) = "network_name";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumNonFiatCurrency) = "non_fiat_currency";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumOther) = "other";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumOtherEntity) = "other_entity";
           toJSON (PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumPromotionalMaterial) = "promotional_material"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "geographic_location" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumGeographicLocation
                                             | val GHC.Classes.== "inappropriate" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumInappropriate
                                             | val GHC.Classes.== "network_name" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumNetworkName
                                             | val GHC.Classes.== "non_fiat_currency" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumNonFiatCurrency
                                             | val GHC.Classes.== "other" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumOther
                                             | val GHC.Classes.== "other_entity" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumOtherEntity
                                             | val GHC.Classes.== "promotional_material" -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'EnumPromotionalMaterial
                                             | GHC.Base.otherwise -> PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectRequestBodyRejectionReasons'CarrierText'Other val)}
-- | Represents a response of the operation 'postTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponseError' is used.
data PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponse =
   PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponse200 Issuing'personalizationDesign -- ^ Successful response.
  | PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignRejectResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
