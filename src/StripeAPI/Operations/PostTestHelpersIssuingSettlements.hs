-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTestHelpersIssuingSettlements
module StripeAPI.Operations.PostTestHelpersIssuingSettlements where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/test_helpers/issuing/settlements
-- 
-- \<p>Allows the user to create an Issuing settlement.\<\/p>
postTestHelpersIssuingSettlements :: forall m . StripeAPI.Common.MonadHTTP m => PostTestHelpersIssuingSettlementsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTestHelpersIssuingSettlementsResponse) -- ^ Monadic computation which returns the result of the operation
postTestHelpersIssuingSettlements body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTestHelpersIssuingSettlementsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersIssuingSettlementsResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Issuing'settlement)
                                                                                                                                                                                                     | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersIssuingSettlementsResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                 Error)
                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/test_helpers/issuing/settlements" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/settlements.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTestHelpersIssuingSettlementsRequestBody = PostTestHelpersIssuingSettlementsRequestBody {
  -- | bin: The Bank Identification Number reflecting this settlement record.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersIssuingSettlementsRequestBodyBin :: Data.Text.Internal.Text
  -- | clearing_date: The date that the transactions are cleared and posted to user\'s accounts.
  , postTestHelpersIssuingSettlementsRequestBodyClearingDate :: GHC.Types.Int
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  , postTestHelpersIssuingSettlementsRequestBodyCurrency :: Data.Text.Internal.Text
  -- | expand: Specifies which fields in the response should be expanded.
  , postTestHelpersIssuingSettlementsRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | interchange_fees_amount: The total interchange received as reimbursement for the transactions.
  , postTestHelpersIssuingSettlementsRequestBodyInterchangeFeesAmount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | net_total_amount: The total net amount required to settle with the network.
  , postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount :: GHC.Types.Int
  -- | network: The card network for this settlement. One of [\"visa\", \"maestro\"]
  , postTestHelpersIssuingSettlementsRequestBodyNetwork :: (GHC.Maybe.Maybe PostTestHelpersIssuingSettlementsRequestBodyNetwork')
  -- | network_settlement_identifier: The Settlement Identification Number assigned by the network.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersIssuingSettlementsRequestBodyNetworkSettlementIdentifier :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | transaction_amount: The total transaction amount reflected in this settlement.
  , postTestHelpersIssuingSettlementsRequestBodyTransactionAmount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | transaction_count: The total number of transactions reflected in this settlement.
  , postTestHelpersIssuingSettlementsRequestBodyTransactionCount :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingSettlementsRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["bin" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyBin obj] : ["clearing_date" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyClearingDate obj] : ["currency" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interchange_fees_amount" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyInterchangeFeesAmount obj) : ["net_total_amount" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyNetwork obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network_settlement_identifier" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyNetworkSettlementIdentifier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_amount" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyTransactionAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_count" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyTransactionCount obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["bin" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyBin obj] : ["clearing_date" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyClearingDate obj] : ["currency" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interchange_fees_amount" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyInterchangeFeesAmount obj) : ["net_total_amount" Data.Aeson.Types.ToJSON..= postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyNetwork obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network_settlement_identifier" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyNetworkSettlementIdentifier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_amount" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyTransactionAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_count" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingSettlementsRequestBodyTransactionCount obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingSettlementsRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingSettlementsRequestBody" (\obj -> (((((((((GHC.Base.pure PostTestHelpersIssuingSettlementsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clearing_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interchange_fees_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "net_total_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network_settlement_identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transaction_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transaction_count"))}
-- | Create a new 'PostTestHelpersIssuingSettlementsRequestBody' with all required fields.
mkPostTestHelpersIssuingSettlementsRequestBody :: Data.Text.Internal.Text -- ^ 'postTestHelpersIssuingSettlementsRequestBodyBin'
  -> GHC.Types.Int -- ^ 'postTestHelpersIssuingSettlementsRequestBodyClearingDate'
  -> Data.Text.Internal.Text -- ^ 'postTestHelpersIssuingSettlementsRequestBodyCurrency'
  -> GHC.Types.Int -- ^ 'postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount'
  -> PostTestHelpersIssuingSettlementsRequestBody
mkPostTestHelpersIssuingSettlementsRequestBody postTestHelpersIssuingSettlementsRequestBodyBin postTestHelpersIssuingSettlementsRequestBodyClearingDate postTestHelpersIssuingSettlementsRequestBodyCurrency postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount = PostTestHelpersIssuingSettlementsRequestBody{postTestHelpersIssuingSettlementsRequestBodyBin = postTestHelpersIssuingSettlementsRequestBodyBin,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyClearingDate = postTestHelpersIssuingSettlementsRequestBodyClearingDate,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyCurrency = postTestHelpersIssuingSettlementsRequestBodyCurrency,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyInterchangeFeesAmount = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount = postTestHelpersIssuingSettlementsRequestBodyNetTotalAmount,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyNetwork = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyNetworkSettlementIdentifier = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyTransactionAmount = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                       postTestHelpersIssuingSettlementsRequestBodyTransactionCount = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/issuing\/settlements.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.network@ in the specification.
-- 
-- The card network for this settlement. One of [\"visa\", \"maestro\"]
data PostTestHelpersIssuingSettlementsRequestBodyNetwork' =
   PostTestHelpersIssuingSettlementsRequestBodyNetwork'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersIssuingSettlementsRequestBodyNetwork'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersIssuingSettlementsRequestBodyNetwork'EnumMaestro -- ^ Represents the JSON value @"maestro"@
  | PostTestHelpersIssuingSettlementsRequestBodyNetwork'EnumVisa -- ^ Represents the JSON value @"visa"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingSettlementsRequestBodyNetwork'
    where {toJSON (PostTestHelpersIssuingSettlementsRequestBodyNetwork'Other val) = val;
           toJSON (PostTestHelpersIssuingSettlementsRequestBodyNetwork'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersIssuingSettlementsRequestBodyNetwork'EnumMaestro) = "maestro";
           toJSON (PostTestHelpersIssuingSettlementsRequestBodyNetwork'EnumVisa) = "visa"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingSettlementsRequestBodyNetwork'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "maestro" -> PostTestHelpersIssuingSettlementsRequestBodyNetwork'EnumMaestro
                                             | val GHC.Classes.== "visa" -> PostTestHelpersIssuingSettlementsRequestBodyNetwork'EnumVisa
                                             | GHC.Base.otherwise -> PostTestHelpersIssuingSettlementsRequestBodyNetwork'Other val)}
-- | Represents a response of the operation 'postTestHelpersIssuingSettlements'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTestHelpersIssuingSettlementsResponseError' is used.
data PostTestHelpersIssuingSettlementsResponse =
   PostTestHelpersIssuingSettlementsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTestHelpersIssuingSettlementsResponse200 Issuing'settlement -- ^ Successful response.
  | PostTestHelpersIssuingSettlementsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
