-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTestHelpersTerminalReadersReaderSucceedInputCollection
module StripeAPI.Operations.PostTestHelpersTerminalReadersReaderSucceedInputCollection where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/test_helpers/terminal/readers/{reader}/succeed_input_collection
-- 
-- \<p>Use this endpoint to trigger a successful input collection on a simulated reader.\<\/p>
postTestHelpersTerminalReadersReaderSucceedInputCollection :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ reader | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponse) -- ^ Monadic computation which returns the result of the operation
postTestHelpersTerminalReadersReaderSucceedInputCollection reader
                                                           body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
erminal'reader)
                                                                                                                                                                                                                                                       | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Error)
                                                                                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/test_helpers/terminal/readers/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel reader)) GHC.Base.<> "/succeed_input_collection")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/terminal\/readers\/{reader}\/succeed_input_collection.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody = PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | skip_non_required_inputs: This parameter defines the skip behavior for input collection.
  , postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs :: (GHC.Maybe.Maybe PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_non_required_inputs" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_non_required_inputs" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody" (\obj -> (GHC.Base.pure PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "skip_non_required_inputs"))}
-- | Create a new 'PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody' with all required fields.
mkPostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody :: PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody
mkPostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody = PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBody{postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                postTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/terminal\/readers\/{reader}\/succeed_input_collection.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.skip_non_required_inputs@ in the specification.
-- 
-- This parameter defines the skip behavior for input collection.
data PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs' =
   PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'EnumAll -- ^ Represents the JSON value @"all"@
  | PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'EnumNone -- ^ Represents the JSON value @"none"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'
    where {toJSON (PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'Other val) = val;
           toJSON (PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'EnumAll) = "all";
           toJSON (PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'EnumNone) = "none"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "all" -> PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'EnumAll
                                             | val GHC.Classes.== "none" -> PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'EnumNone
                                             | GHC.Base.otherwise -> PostTestHelpersTerminalReadersReaderSucceedInputCollectionRequestBodySkipNonRequiredInputs'Other val)}
-- | Represents a response of the operation 'postTestHelpersTerminalReadersReaderSucceedInputCollection'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponseError' is used.
data PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponse =
   PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponse200 Terminal'reader -- ^ Successful response.
  | PostTestHelpersTerminalReadersReaderSucceedInputCollectionResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
