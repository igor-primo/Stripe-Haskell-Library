-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTestHelpersTreasuryOutboundPaymentsId
module StripeAPI.Operations.PostTestHelpersTreasuryOutboundPaymentsId where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/test_helpers/treasury/outbound_payments/{id}
-- 
-- \<p>Updates a test mode created OutboundPayment with tracking details. The OutboundPayment must not be cancelable, and cannot be in the \<code>canceled\<\/code> or \<code>failed\<\/code> states.\<\/p>
postTestHelpersTreasuryOutboundPaymentsId :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ id | Constraints: Maximum length of 5000
  -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTestHelpersTreasuryOutboundPaymentsIdResponse) -- ^ Monadic computation which returns the result of the operation
postTestHelpersTreasuryOutboundPaymentsId id
                                          body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTestHelpersTreasuryOutboundPaymentsIdResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersTreasuryOutboundPaymentsIdResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Treasury'outboundPayment)
                                                                                                                                                                                                                     | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTestHelpersTreasuryOutboundPaymentsIdResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                         Error)
                                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/test_helpers/treasury/outbound_payments/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel id)) GHC.Base.<> "")) GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/treasury\/outbound_payments\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTestHelpersTreasuryOutboundPaymentsIdRequestBody = PostTestHelpersTreasuryOutboundPaymentsIdRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postTestHelpersTreasuryOutboundPaymentsIdRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | tracking_details: Details about network-specific tracking information.
  , postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails :: PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyExpand obj) : ["tracking_details" Data.Aeson.Types.ToJSON..= postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyExpand obj) : ["tracking_details" Data.Aeson.Types.ToJSON..= postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersTreasuryOutboundPaymentsIdRequestBody" (\obj -> (GHC.Base.pure PostTestHelpersTreasuryOutboundPaymentsIdRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tracking_details"))}
-- | Create a new 'PostTestHelpersTreasuryOutboundPaymentsIdRequestBody' with all required fields.
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBody :: PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails' -- ^ 'postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'
  -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBody
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBody postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails = PostTestHelpersTreasuryOutboundPaymentsIdRequestBody{postTestHelpersTreasuryOutboundPaymentsIdRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                  postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails = postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/treasury\/outbound_payments\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tracking_details@ in the specification.
-- 
-- Details about network-specific tracking information.
data PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails' = PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails' {
  -- | ach
  postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach :: (GHC.Maybe.Maybe PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach')
  -- | type
  , postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type :: PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'
  -- | us_domestic_wire
  , postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire :: (GHC.Maybe.Maybe PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach obj) : ["type" Data.Aeson.Types.ToJSON..= postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach obj) : ["type" Data.Aeson.Types.ToJSON..= postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'" (\obj -> ((GHC.Base.pure PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))}
-- | Create a new 'PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'' with all required fields.
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails' :: PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type' -- ^ 'postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'
  -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails' postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type = PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'{postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach = GHC.Maybe.Nothing,
                                                                                                                                                                                                                       postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type = postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type,
                                                                                                                                                                                                                       postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/treasury\/outbound_payments\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tracking_details.properties.ach@ in the specification.
-- 
-- 
data PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach' = PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach' {
  -- | trace_id
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["trace_id" Data.Aeson.Types.ToJSON..= postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["trace_id" Data.Aeson.Types.ToJSON..= postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'" (\obj -> GHC.Base.pure PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "trace_id"))}
-- | Create a new 'PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'' with all required fields.
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach' :: Data.Text.Internal.Text -- ^ 'postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId'
  -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach' postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId = PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'{postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId = postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Ach'TraceId}
-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/treasury\/outbound_payments\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tracking_details.properties.type@ in the specification.
-- 
-- 
data PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type' =
   PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'EnumAch -- ^ Represents the JSON value @"ach"@
  | PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'EnumUsDomesticWire -- ^ Represents the JSON value @"us_domestic_wire"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'
    where {toJSON (PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'Other val) = val;
           toJSON (PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'EnumAch) = "ach";
           toJSON (PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'EnumUsDomesticWire) = "us_domestic_wire"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ach" -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'EnumAch
                                             | val GHC.Classes.== "us_domestic_wire" -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'EnumUsDomesticWire
                                             | GHC.Base.otherwise -> PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'Type'Other val)}
-- | Defines the object schema located at @paths.\/v1\/test_helpers\/treasury\/outbound_payments\/{id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tracking_details.properties.us_domestic_wire@ in the specification.
-- 
-- 
data PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire' = PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire' {
  -- | chips
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Chips :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | imad
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Imad :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | omad
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Omad :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("chips" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Chips obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("imad" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Imad obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("omad" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Omad obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("chips" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Chips obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("imad" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Imad obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("omad" Data.Aeson.Types.ToJSON..=)) (postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Omad obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'" (\obj -> ((GHC.Base.pure PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "chips")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "imad")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "omad"))}
-- | Create a new 'PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'' with all required fields.
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire' :: PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'
mkPostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire' = PostTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'{postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Chips = GHC.Maybe.Nothing,
                                                                                                                                                                            postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Imad = GHC.Maybe.Nothing,
                                                                                                                                                                            postTestHelpersTreasuryOutboundPaymentsIdRequestBodyTrackingDetails'UsDomesticWire'Omad = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postTestHelpersTreasuryOutboundPaymentsId'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTestHelpersTreasuryOutboundPaymentsIdResponseError' is used.
data PostTestHelpersTreasuryOutboundPaymentsIdResponse =
   PostTestHelpersTreasuryOutboundPaymentsIdResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTestHelpersTreasuryOutboundPaymentsIdResponse200 Treasury'outboundPayment -- ^ Successful response.
  | PostTestHelpersTreasuryOutboundPaymentsIdResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
