-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTreasuryFinancialAccountsFinancialAccountClose
module StripeAPI.Operations.PostTreasuryFinancialAccountsFinancialAccountClose where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/treasury/financial_accounts/{financial_account}/close
-- 
-- \<p>Closes a FinancialAccount. A FinancialAccount can only be closed if it has a zero balance, has no pending InboundTransfers, and has canceled all attached Issuing cards.\<\/p>
postTreasuryFinancialAccountsFinancialAccountClose :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ financial_account | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryFinancialAccountsFinancialAccountCloseResponse) -- ^ Monadic computation which returns the result of the operation
postTreasuryFinancialAccountsFinancialAccountClose financialAccount
                                                   body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTreasuryFinancialAccountsFinancialAccountCloseResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTreasuryFinancialAccountsFinancialAccountCloseResponse200 Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
reasury'financialAccount)
                                                                                                                                                                                                                                       | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTreasuryFinancialAccountsFinancialAccountCloseResponseDefault Data.Functor.<$> (Data.Aeson.Decoding.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Error)
                                                                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/treasury/financial_accounts/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel financialAccount)) GHC.Base.<> "/close")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/close.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody = PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyExpand :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  -- | forwarding_settings: A different bank account where funds can be deposited\/debited in order to get the closing FA\'s balance to \$0
  , postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("forwarding_settings" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("forwarding_settings" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "forwarding_settings"))}
-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountCloseRequestBody :: PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody
mkPostTreasuryFinancialAccountsFinancialAccountCloseRequestBody = PostTreasuryFinancialAccountsFinancialAccountCloseRequestBody{postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/close.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.forwarding_settings@ in the specification.
-- 
-- A different bank account where funds can be deposited\/debited in order to get the closing FA\'s balance to \$0
data PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings' = PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings' {
  -- | financial_account
  postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'FinancialAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | payment_method
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'PaymentMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | type
  , postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type :: PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'FinancialAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'PaymentMethod obj) : ["type" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'FinancialAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'PaymentMethod obj) : ["type" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'" (\obj -> ((GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))}
-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings' :: PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type' -- ^ 'postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'
  -> PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'
mkPostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings' postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type = PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'{postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'FinancialAccount = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                           postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'PaymentMethod = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                           postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type = postTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type}
-- | Defines the enum schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/close.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.forwarding_settings.properties.type@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type' =
   PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'EnumFinancialAccount -- ^ Represents the JSON value @"financial_account"@
  | PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'EnumPaymentMethod -- ^ Represents the JSON value @"payment_method"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'
    where {toJSON (PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'Other val) = val;
           toJSON (PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'EnumFinancialAccount) = "financial_account";
           toJSON (PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'EnumPaymentMethod) = "payment_method"}
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "financial_account" -> PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'EnumFinancialAccount
                                             | val GHC.Classes.== "payment_method" -> PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'EnumPaymentMethod
                                             | GHC.Base.otherwise -> PostTreasuryFinancialAccountsFinancialAccountCloseRequestBodyForwardingSettings'Type'Other val)}
-- | Represents a response of the operation 'postTreasuryFinancialAccountsFinancialAccountClose'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryFinancialAccountsFinancialAccountCloseResponseError' is used.
data PostTreasuryFinancialAccountsFinancialAccountCloseResponse =
   PostTreasuryFinancialAccountsFinancialAccountCloseResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTreasuryFinancialAccountsFinancialAccountCloseResponse200 Treasury'financialAccount -- ^ Successful response.
  | PostTreasuryFinancialAccountsFinancialAccountCloseResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
