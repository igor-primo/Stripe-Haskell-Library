-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ConfirmationToken
module StripeAPI.Types.ConfirmationToken where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Address
import {-# SOURCE #-} StripeAPI.Types.BillingDetails
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourceMandateData
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourceMandateDataResourceCustomerAcceptance
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourcePaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourcePaymentMethodOptionsResourceCard
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourcePaymentMethodOptionsResourceCardResourceInstallment
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourcePaymentMethodPreview
import {-# SOURCE #-} StripeAPI.Types.ConfirmationTokensResourceShipping
import {-# SOURCE #-} StripeAPI.Types.Customer
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodAcssDebit
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodAuBecsDebit
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodBacsDebit
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodBoleto
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodCard
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodCardPresent
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodCashapp
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodEps
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodFpx
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodIdeal
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodInteracPresent
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodKlarna
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodKrCard
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodLink
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodNaverPay
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodNzBankAccount
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodP24
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodPaypal
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodSepaDebit
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodSofort
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodUsBankAccount

-- | Defines the object schema located at @components.schemas.confirmation_token@ in the specification.
-- 
-- ConfirmationTokens help transport client side data collected by Stripe JS over
-- to your server for confirming a PaymentIntent or SetupIntent. If the confirmation
-- is successful, values present on the ConfirmationToken are written onto the Intent.
-- 
-- To learn more about how to use ConfirmationToken, visit the related guides:
-- - [Finalize payments on the server](https:\/\/stripe.com\/docs\/payments\/finalize-payments-on-the-server)
-- - [Build two-step confirmation](https:\/\/stripe.com\/docs\/payments\/build-a-two-step-confirmation).
data ConfirmationToken = ConfirmationToken {
  -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
  confirmationTokenCreated :: GHC.Types.Int
  -- | expires_at: Time at which this ConfirmationToken expires and can no longer be used to confirm a PaymentIntent or SetupIntent.
  , confirmationTokenExpiresAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , confirmationTokenId :: Data.Text.Internal.Text
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , confirmationTokenLivemode :: GHC.Types.Bool
  -- | mandate_data: Data used for generating a Mandate.
  , confirmationTokenMandateData :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenMandateData'NonNullable))
  -- | payment_intent: ID of the PaymentIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , confirmationTokenPaymentIntent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | payment_method_options: Payment-method-specific configuration for this ConfirmationToken.
  , confirmationTokenPaymentMethodOptions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenPaymentMethodOptions'NonNullable))
  -- | payment_method_preview: Payment details collected by the Payment Element, used to create a PaymentMethod when a PaymentIntent or SetupIntent is confirmed with this ConfirmationToken.
  , confirmationTokenPaymentMethodPreview :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenPaymentMethodPreview'NonNullable))
  -- | return_url: Return URL used to confirm the Intent.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , confirmationTokenReturnUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | setup_future_usage: Indicates that you intend to make future payments with this ConfirmationToken\'s payment method.
  -- 
  -- The presence of this property will [attach the payment method](https:\/\/stripe.com\/docs\/payments\/save-during-payment) to the PaymentIntent\'s Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
  , confirmationTokenSetupFutureUsage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenSetupFutureUsage'NonNullable))
  -- | setup_intent: ID of the SetupIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , confirmationTokenSetupIntent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | shipping: Shipping information collected on this ConfirmationToken.
  , confirmationTokenShipping :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenShipping'NonNullable))
  -- | use_stripe_sdk: Indicates whether the Stripe SDK is used to handle confirmation flow. Defaults to \`true\` on ConfirmationToken.
  , confirmationTokenUseStripeSdk :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationToken
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= confirmationTokenCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (confirmationTokenExpiresAt obj) : ["id" Data.Aeson.Types.ToJSON..= confirmationTokenId obj] : ["livemode" Data.Aeson.Types.ToJSON..= confirmationTokenLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_data" Data.Aeson.Types.ToJSON..=)) (confirmationTokenMandateData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_preview" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (confirmationTokenReturnUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_future_usage" Data.Aeson.Types.ToJSON..=)) (confirmationTokenSetupFutureUsage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_intent" Data.Aeson.Types.ToJSON..=)) (confirmationTokenSetupIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping obj) : ["use_stripe_sdk" Data.Aeson.Types.ToJSON..= confirmationTokenUseStripeSdk obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "confirmation_token"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= confirmationTokenCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (confirmationTokenExpiresAt obj) : ["id" Data.Aeson.Types.ToJSON..= confirmationTokenId obj] : ["livemode" Data.Aeson.Types.ToJSON..= confirmationTokenLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_data" Data.Aeson.Types.ToJSON..=)) (confirmationTokenMandateData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_preview" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (confirmationTokenReturnUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_future_usage" Data.Aeson.Types.ToJSON..=)) (confirmationTokenSetupFutureUsage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_intent" Data.Aeson.Types.ToJSON..=)) (confirmationTokenSetupIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping obj) : ["use_stripe_sdk" Data.Aeson.Types.ToJSON..= confirmationTokenUseStripeSdk obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "confirmation_token"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationToken
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConfirmationToken" (\obj -> ((((((((((((GHC.Base.pure ConfirmationToken GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_preview")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "setup_future_usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "setup_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "use_stripe_sdk"))}
-- | Create a new 'ConfirmationToken' with all required fields.
mkConfirmationToken :: GHC.Types.Int -- ^ 'confirmationTokenCreated'
  -> Data.Text.Internal.Text -- ^ 'confirmationTokenId'
  -> GHC.Types.Bool -- ^ 'confirmationTokenLivemode'
  -> GHC.Types.Bool -- ^ 'confirmationTokenUseStripeSdk'
  -> ConfirmationToken
mkConfirmationToken confirmationTokenCreated confirmationTokenId confirmationTokenLivemode confirmationTokenUseStripeSdk = ConfirmationToken{confirmationTokenCreated = confirmationTokenCreated,
                                                                                                                                             confirmationTokenExpiresAt = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenId = confirmationTokenId,
                                                                                                                                             confirmationTokenLivemode = confirmationTokenLivemode,
                                                                                                                                             confirmationTokenMandateData = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenPaymentIntent = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenPaymentMethodOptions = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenPaymentMethodPreview = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenReturnUrl = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenSetupFutureUsage = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenSetupIntent = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenShipping = GHC.Maybe.Nothing,
                                                                                                                                             confirmationTokenUseStripeSdk = confirmationTokenUseStripeSdk}
-- | Defines the object schema located at @components.schemas.confirmation_token.properties.mandate_data.anyOf@ in the specification.
-- 
-- Data used for generating a Mandate.
data ConfirmationTokenMandateData'NonNullable = ConfirmationTokenMandateData'NonNullable {
  -- | customer_acceptance: This hash contains details about the customer acceptance of the Mandate.
  confirmationTokenMandateData'NonNullableCustomerAcceptance :: (GHC.Maybe.Maybe ConfirmationTokensResourceMandateDataResourceCustomerAcceptance)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenMandateData'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_acceptance" Data.Aeson.Types.ToJSON..=)) (confirmationTokenMandateData'NonNullableCustomerAcceptance obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_acceptance" Data.Aeson.Types.ToJSON..=)) (confirmationTokenMandateData'NonNullableCustomerAcceptance obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenMandateData'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConfirmationTokenMandateData'NonNullable" (\obj -> GHC.Base.pure ConfirmationTokenMandateData'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_acceptance"))}
-- | Create a new 'ConfirmationTokenMandateData'NonNullable' with all required fields.
mkConfirmationTokenMandateData'NonNullable :: ConfirmationTokenMandateData'NonNullable
mkConfirmationTokenMandateData'NonNullable = ConfirmationTokenMandateData'NonNullable{confirmationTokenMandateData'NonNullableCustomerAcceptance = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.confirmation_token.properties.payment_method_options.anyOf@ in the specification.
-- 
-- Payment-method-specific configuration for this ConfirmationToken.
data ConfirmationTokenPaymentMethodOptions'NonNullable = ConfirmationTokenPaymentMethodOptions'NonNullable {
  -- | card: This hash contains the card payment method options.
  confirmationTokenPaymentMethodOptions'NonNullableCard :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenPaymentMethodOptions'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions'NonNullableCard obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions'NonNullableCard obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenPaymentMethodOptions'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConfirmationTokenPaymentMethodOptions'NonNullable" (\obj -> GHC.Base.pure ConfirmationTokenPaymentMethodOptions'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card"))}
-- | Create a new 'ConfirmationTokenPaymentMethodOptions'NonNullable' with all required fields.
mkConfirmationTokenPaymentMethodOptions'NonNullable :: ConfirmationTokenPaymentMethodOptions'NonNullable
mkConfirmationTokenPaymentMethodOptions'NonNullable = ConfirmationTokenPaymentMethodOptions'NonNullable{confirmationTokenPaymentMethodOptions'NonNullableCard = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.confirmation_token.properties.payment_method_options.anyOf.properties.card.anyOf@ in the specification.
-- 
-- This hash contains the card payment method options.
data ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable = ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable {
  -- | cvc_token: The \`cvc_update\` Token collected from the Payment Element.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableCvcToken :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | installments: Installment configuration for payments.
  , confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableInstallments :: (GHC.Maybe.Maybe ConfirmationTokensResourcePaymentMethodOptionsResourceCardResourceInstallment)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_token" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableCvcToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("installments" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableInstallments obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_token" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableCvcToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("installments" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableInstallments obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable" (\obj -> (GHC.Base.pure ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "installments"))}
-- | Create a new 'ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable' with all required fields.
mkConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable :: ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable
mkConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable = ConfirmationTokenPaymentMethodOptions'NonNullableCard'NonNullable{confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableCvcToken = GHC.Maybe.Nothing,
                                                                                                                                        confirmationTokenPaymentMethodOptions'NonNullableCard'NonNullableInstallments = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.confirmation_token.properties.payment_method_preview.anyOf@ in the specification.
-- 
-- Payment details collected by the Payment Element, used to create a PaymentMethod when a PaymentIntent or SetupIntent is confirmed with this ConfirmationToken.
data ConfirmationTokenPaymentMethodPreview'NonNullable = ConfirmationTokenPaymentMethodPreview'NonNullable {
  -- | acss_debit: 
  confirmationTokenPaymentMethodPreview'NonNullableAcssDebit :: (GHC.Maybe.Maybe PaymentMethodAcssDebit)
  -- | affirm: 
  , confirmationTokenPaymentMethodPreview'NonNullableAffirm :: (GHC.Maybe.Maybe PaymentMethodAffirm)
  -- | afterpay_clearpay: 
  , confirmationTokenPaymentMethodPreview'NonNullableAfterpayClearpay :: (GHC.Maybe.Maybe PaymentMethodAfterpayClearpay)
  -- | alipay: 
  , confirmationTokenPaymentMethodPreview'NonNullableAlipay :: (GHC.Maybe.Maybe PaymentFlowsPrivatePaymentMethodsAlipay)
  -- | allow_redisplay: This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.
  , confirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay :: (GHC.Maybe.Maybe ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay')
  -- | alma: 
  , confirmationTokenPaymentMethodPreview'NonNullableAlma :: (GHC.Maybe.Maybe PaymentMethodAlma)
  -- | amazon_pay: 
  , confirmationTokenPaymentMethodPreview'NonNullableAmazonPay :: (GHC.Maybe.Maybe PaymentMethodAmazonPay)
  -- | au_becs_debit: 
  , confirmationTokenPaymentMethodPreview'NonNullableAuBecsDebit :: (GHC.Maybe.Maybe PaymentMethodAuBecsDebit)
  -- | bacs_debit: 
  , confirmationTokenPaymentMethodPreview'NonNullableBacsDebit :: (GHC.Maybe.Maybe PaymentMethodBacsDebit)
  -- | bancontact: 
  , confirmationTokenPaymentMethodPreview'NonNullableBancontact :: (GHC.Maybe.Maybe PaymentMethodBancontact)
  -- | billie: 
  , confirmationTokenPaymentMethodPreview'NonNullableBillie :: (GHC.Maybe.Maybe PaymentMethodBillie)
  -- | billing_details: 
  , confirmationTokenPaymentMethodPreview'NonNullableBillingDetails :: (GHC.Maybe.Maybe BillingDetails)
  -- | blik: 
  , confirmationTokenPaymentMethodPreview'NonNullableBlik :: (GHC.Maybe.Maybe PaymentMethodBlik)
  -- | boleto: 
  , confirmationTokenPaymentMethodPreview'NonNullableBoleto :: (GHC.Maybe.Maybe PaymentMethodBoleto)
  -- | card: 
  , confirmationTokenPaymentMethodPreview'NonNullableCard :: (GHC.Maybe.Maybe PaymentMethodCard)
  -- | card_present: 
  , confirmationTokenPaymentMethodPreview'NonNullableCardPresent :: (GHC.Maybe.Maybe PaymentMethodCardPresent)
  -- | cashapp: 
  , confirmationTokenPaymentMethodPreview'NonNullableCashapp :: (GHC.Maybe.Maybe PaymentMethodCashapp)
  -- | crypto: 
  , confirmationTokenPaymentMethodPreview'NonNullableCrypto :: (GHC.Maybe.Maybe PaymentMethodCrypto)
  -- | customer: The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.
  , confirmationTokenPaymentMethodPreview'NonNullableCustomer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableVariants))
  -- | customer_balance: 
  , confirmationTokenPaymentMethodPreview'NonNullableCustomerBalance :: (GHC.Maybe.Maybe PaymentMethodCustomerBalance)
  -- | eps: 
  , confirmationTokenPaymentMethodPreview'NonNullableEps :: (GHC.Maybe.Maybe PaymentMethodEps)
  -- | fpx: 
  , confirmationTokenPaymentMethodPreview'NonNullableFpx :: (GHC.Maybe.Maybe PaymentMethodFpx)
  -- | giropay: 
  , confirmationTokenPaymentMethodPreview'NonNullableGiropay :: (GHC.Maybe.Maybe PaymentMethodGiropay)
  -- | grabpay: 
  , confirmationTokenPaymentMethodPreview'NonNullableGrabpay :: (GHC.Maybe.Maybe PaymentMethodGrabpay)
  -- | ideal: 
  , confirmationTokenPaymentMethodPreview'NonNullableIdeal :: (GHC.Maybe.Maybe PaymentMethodIdeal)
  -- | interac_present: 
  , confirmationTokenPaymentMethodPreview'NonNullableInteracPresent :: (GHC.Maybe.Maybe PaymentMethodInteracPresent)
  -- | kakao_pay: 
  , confirmationTokenPaymentMethodPreview'NonNullableKakaoPay :: (GHC.Maybe.Maybe PaymentMethodKakaoPay)
  -- | klarna: 
  , confirmationTokenPaymentMethodPreview'NonNullableKlarna :: (GHC.Maybe.Maybe PaymentMethodKlarna)
  -- | konbini: 
  , confirmationTokenPaymentMethodPreview'NonNullableKonbini :: (GHC.Maybe.Maybe PaymentMethodKonbini)
  -- | kr_card: 
  , confirmationTokenPaymentMethodPreview'NonNullableKrCard :: (GHC.Maybe.Maybe PaymentMethodKrCard)
  -- | link: 
  , confirmationTokenPaymentMethodPreview'NonNullableLink :: (GHC.Maybe.Maybe PaymentMethodLink)
  -- | mobilepay: 
  , confirmationTokenPaymentMethodPreview'NonNullableMobilepay :: (GHC.Maybe.Maybe PaymentMethodMobilepay)
  -- | multibanco: 
  , confirmationTokenPaymentMethodPreview'NonNullableMultibanco :: (GHC.Maybe.Maybe PaymentMethodMultibanco)
  -- | naver_pay: 
  , confirmationTokenPaymentMethodPreview'NonNullableNaverPay :: (GHC.Maybe.Maybe PaymentMethodNaverPay)
  -- | nz_bank_account: 
  , confirmationTokenPaymentMethodPreview'NonNullableNzBankAccount :: (GHC.Maybe.Maybe PaymentMethodNzBankAccount)
  -- | oxxo: 
  , confirmationTokenPaymentMethodPreview'NonNullableOxxo :: (GHC.Maybe.Maybe PaymentMethodOxxo)
  -- | p24: 
  , confirmationTokenPaymentMethodPreview'NonNullableP24 :: (GHC.Maybe.Maybe PaymentMethodP24)
  -- | pay_by_bank: 
  , confirmationTokenPaymentMethodPreview'NonNullablePayByBank :: (GHC.Maybe.Maybe PaymentMethodPayByBank)
  -- | payco: 
  , confirmationTokenPaymentMethodPreview'NonNullablePayco :: (GHC.Maybe.Maybe PaymentMethodPayco)
  -- | paynow: 
  , confirmationTokenPaymentMethodPreview'NonNullablePaynow :: (GHC.Maybe.Maybe PaymentMethodPaynow)
  -- | paypal: 
  , confirmationTokenPaymentMethodPreview'NonNullablePaypal :: (GHC.Maybe.Maybe PaymentMethodPaypal)
  -- | pix: 
  , confirmationTokenPaymentMethodPreview'NonNullablePix :: (GHC.Maybe.Maybe PaymentMethodPix)
  -- | promptpay: 
  , confirmationTokenPaymentMethodPreview'NonNullablePromptpay :: (GHC.Maybe.Maybe PaymentMethodPromptpay)
  -- | revolut_pay: 
  , confirmationTokenPaymentMethodPreview'NonNullableRevolutPay :: (GHC.Maybe.Maybe PaymentMethodRevolutPay)
  -- | samsung_pay: 
  , confirmationTokenPaymentMethodPreview'NonNullableSamsungPay :: (GHC.Maybe.Maybe PaymentMethodSamsungPay)
  -- | satispay: 
  , confirmationTokenPaymentMethodPreview'NonNullableSatispay :: (GHC.Maybe.Maybe PaymentMethodSatispay)
  -- | sepa_debit: 
  , confirmationTokenPaymentMethodPreview'NonNullableSepaDebit :: (GHC.Maybe.Maybe PaymentMethodSepaDebit)
  -- | sofort: 
  , confirmationTokenPaymentMethodPreview'NonNullableSofort :: (GHC.Maybe.Maybe PaymentMethodSofort)
  -- | swish: 
  , confirmationTokenPaymentMethodPreview'NonNullableSwish :: (GHC.Maybe.Maybe PaymentMethodSwish)
  -- | twint: 
  , confirmationTokenPaymentMethodPreview'NonNullableTwint :: (GHC.Maybe.Maybe PaymentMethodTwint)
  -- | type: The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
  , confirmationTokenPaymentMethodPreview'NonNullableType :: (GHC.Maybe.Maybe ConfirmationTokenPaymentMethodPreview'NonNullableType')
  -- | us_bank_account: 
  , confirmationTokenPaymentMethodPreview'NonNullableUsBankAccount :: (GHC.Maybe.Maybe PaymentMethodUsBankAccount)
  -- | wechat_pay: 
  , confirmationTokenPaymentMethodPreview'NonNullableWechatPay :: (GHC.Maybe.Maybe PaymentMethodWechatPay)
  -- | zip: 
  , confirmationTokenPaymentMethodPreview'NonNullableZip :: (GHC.Maybe.Maybe PaymentMethodZip)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenPaymentMethodPreview'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_redisplay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alma" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAlma obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAmazonPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billie" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBillie obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("crypto" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCrypto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interac_present" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableInteracPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kakao_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKakaoPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kr_card" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKrCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mobilepay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableMobilepay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableMultibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("naver_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableNaverPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nz_bank_account" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableNzBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pay_by_bank" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePayByBank obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payco" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePayco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pix" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("samsung_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSamsungPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("satispay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSatispay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("swish" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSwish obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("twint" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableTwint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableWechatPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("zip" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableZip obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_redisplay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alma" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAlma obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAmazonPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billie" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBillie obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("crypto" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCrypto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableCustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interac_present" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableInteracPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kakao_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKakaoPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("kr_card" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableKrCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mobilepay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableMobilepay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableMultibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("naver_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableNaverPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nz_bank_account" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableNzBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pay_by_bank" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePayByBank obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payco" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePayco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pix" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullablePromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("samsung_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSamsungPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("satispay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSatispay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("swish" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableSwish obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("twint" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableTwint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableWechatPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("zip" Data.Aeson.Types.ToJSON..=)) (confirmationTokenPaymentMethodPreview'NonNullableZip obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenPaymentMethodPreview'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConfirmationTokenPaymentMethodPreview'NonNullable" (\obj -> (((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure ConfirmationTokenPaymentMethodPreview'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_redisplay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alma")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amazon_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billie")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "blik")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "crypto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interac_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "kakao_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "kr_card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mobilepay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "multibanco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "naver_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nz_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pay_by_bank")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "samsung_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "satispay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "swish")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "twint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "zip"))}
-- | Create a new 'ConfirmationTokenPaymentMethodPreview'NonNullable' with all required fields.
mkConfirmationTokenPaymentMethodPreview'NonNullable :: ConfirmationTokenPaymentMethodPreview'NonNullable
mkConfirmationTokenPaymentMethodPreview'NonNullable = ConfirmationTokenPaymentMethodPreview'NonNullable{confirmationTokenPaymentMethodPreview'NonNullableAcssDebit = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAffirm = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAfterpayClearpay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAlipay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAlma = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAmazonPay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableAuBecsDebit = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableBacsDebit = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableBancontact = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableBillie = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableBillingDetails = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableBlik = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableBoleto = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableCard = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableCardPresent = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableCashapp = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableCrypto = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableCustomer = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableCustomerBalance = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableEps = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableFpx = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableGiropay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableGrabpay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableIdeal = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableInteracPresent = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableKakaoPay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableKlarna = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableKonbini = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableKrCard = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableLink = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableMobilepay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableMultibanco = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableNaverPay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableNzBankAccount = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableOxxo = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableP24 = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullablePayByBank = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullablePayco = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullablePaynow = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullablePaypal = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullablePix = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullablePromptpay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableRevolutPay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableSamsungPay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableSatispay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableSepaDebit = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableSofort = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableSwish = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableTwint = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableType = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableUsBankAccount = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableWechatPay = GHC.Maybe.Nothing,
                                                                                                        confirmationTokenPaymentMethodPreview'NonNullableZip = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.confirmation_token.properties.payment_method_preview.anyOf.properties.allow_redisplay@ in the specification.
-- 
-- This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.
data ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay' =
   ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumAlways -- ^ Represents the JSON value @"always"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumLimited -- ^ Represents the JSON value @"limited"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumUnspecified -- ^ Represents the JSON value @"unspecified"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'
    where {toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'Other val) = val;
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumAlways) = "always";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumLimited) = "limited";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumUnspecified) = "unspecified"}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "always" -> ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumAlways
                                             | val GHC.Classes.== "limited" -> ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumLimited
                                             | val GHC.Classes.== "unspecified" -> ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'EnumUnspecified
                                             | GHC.Base.otherwise -> ConfirmationTokenPaymentMethodPreview'NonNullableAllowRedisplay'Other val)}
-- | Defines the oneOf schema located at @components.schemas.confirmation_token.properties.payment_method_preview.anyOf.properties.customer.anyOf@ in the specification.
-- 
-- The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.
data ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableVariants =
   ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableText Data.Text.Internal.Text
  | ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableCustomer Customer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableVariants
    where {toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableVariants
    where {parseJSON val = case (ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((ConfirmationTokenPaymentMethodPreview'NonNullableCustomer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                           {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @components.schemas.confirmation_token.properties.payment_method_preview.anyOf.properties.type@ in the specification.
-- 
-- The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
data ConfirmationTokenPaymentMethodPreview'NonNullableType' =
   ConfirmationTokenPaymentMethodPreview'NonNullableType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAcssDebit -- ^ Represents the JSON value @"acss_debit"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAffirm -- ^ Represents the JSON value @"affirm"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAfterpayClearpay -- ^ Represents the JSON value @"afterpay_clearpay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAlipay -- ^ Represents the JSON value @"alipay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAlma -- ^ Represents the JSON value @"alma"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAmazonPay -- ^ Represents the JSON value @"amazon_pay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAuBecsDebit -- ^ Represents the JSON value @"au_becs_debit"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBacsDebit -- ^ Represents the JSON value @"bacs_debit"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBancontact -- ^ Represents the JSON value @"bancontact"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBillie -- ^ Represents the JSON value @"billie"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBlik -- ^ Represents the JSON value @"blik"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBoleto -- ^ Represents the JSON value @"boleto"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCard -- ^ Represents the JSON value @"card"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCardPresent -- ^ Represents the JSON value @"card_present"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCashapp -- ^ Represents the JSON value @"cashapp"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCrypto -- ^ Represents the JSON value @"crypto"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCustomerBalance -- ^ Represents the JSON value @"customer_balance"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumEps -- ^ Represents the JSON value @"eps"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumFpx -- ^ Represents the JSON value @"fpx"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumGiropay -- ^ Represents the JSON value @"giropay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumGrabpay -- ^ Represents the JSON value @"grabpay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumIdeal -- ^ Represents the JSON value @"ideal"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumInteracPresent -- ^ Represents the JSON value @"interac_present"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKakaoPay -- ^ Represents the JSON value @"kakao_pay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKlarna -- ^ Represents the JSON value @"klarna"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKonbini -- ^ Represents the JSON value @"konbini"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKrCard -- ^ Represents the JSON value @"kr_card"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumLink -- ^ Represents the JSON value @"link"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumMobilepay -- ^ Represents the JSON value @"mobilepay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumMultibanco -- ^ Represents the JSON value @"multibanco"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumNaverPay -- ^ Represents the JSON value @"naver_pay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumNzBankAccount -- ^ Represents the JSON value @"nz_bank_account"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumOxxo -- ^ Represents the JSON value @"oxxo"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumP24 -- ^ Represents the JSON value @"p24"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPayByBank -- ^ Represents the JSON value @"pay_by_bank"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPayco -- ^ Represents the JSON value @"payco"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPaynow -- ^ Represents the JSON value @"paynow"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPaypal -- ^ Represents the JSON value @"paypal"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPix -- ^ Represents the JSON value @"pix"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPromptpay -- ^ Represents the JSON value @"promptpay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumRevolutPay -- ^ Represents the JSON value @"revolut_pay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSamsungPay -- ^ Represents the JSON value @"samsung_pay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSatispay -- ^ Represents the JSON value @"satispay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSepaDebit -- ^ Represents the JSON value @"sepa_debit"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSofort -- ^ Represents the JSON value @"sofort"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSwish -- ^ Represents the JSON value @"swish"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumTwint -- ^ Represents the JSON value @"twint"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumUsBankAccount -- ^ Represents the JSON value @"us_bank_account"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumWechatPay -- ^ Represents the JSON value @"wechat_pay"@
  | ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumZip -- ^ Represents the JSON value @"zip"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenPaymentMethodPreview'NonNullableType'
    where {toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'Other val) = val;
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAcssDebit) = "acss_debit";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAffirm) = "affirm";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAfterpayClearpay) = "afterpay_clearpay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAlipay) = "alipay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAlma) = "alma";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAmazonPay) = "amazon_pay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAuBecsDebit) = "au_becs_debit";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBacsDebit) = "bacs_debit";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBancontact) = "bancontact";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBillie) = "billie";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBlik) = "blik";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBoleto) = "boleto";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCard) = "card";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCardPresent) = "card_present";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCashapp) = "cashapp";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCrypto) = "crypto";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCustomerBalance) = "customer_balance";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumEps) = "eps";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumFpx) = "fpx";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumGiropay) = "giropay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumGrabpay) = "grabpay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumIdeal) = "ideal";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumInteracPresent) = "interac_present";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKakaoPay) = "kakao_pay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKlarna) = "klarna";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKonbini) = "konbini";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKrCard) = "kr_card";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumLink) = "link";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumMobilepay) = "mobilepay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumMultibanco) = "multibanco";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumNaverPay) = "naver_pay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumNzBankAccount) = "nz_bank_account";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumOxxo) = "oxxo";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumP24) = "p24";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPayByBank) = "pay_by_bank";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPayco) = "payco";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPaynow) = "paynow";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPaypal) = "paypal";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPix) = "pix";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPromptpay) = "promptpay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumRevolutPay) = "revolut_pay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSamsungPay) = "samsung_pay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSatispay) = "satispay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSepaDebit) = "sepa_debit";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSofort) = "sofort";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSwish) = "swish";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumTwint) = "twint";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumUsBankAccount) = "us_bank_account";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumWechatPay) = "wechat_pay";
           toJSON (ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumZip) = "zip"}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenPaymentMethodPreview'NonNullableType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "acss_debit" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAcssDebit
                                             | val GHC.Classes.== "affirm" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAffirm
                                             | val GHC.Classes.== "afterpay_clearpay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAfterpayClearpay
                                             | val GHC.Classes.== "alipay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAlipay
                                             | val GHC.Classes.== "alma" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAlma
                                             | val GHC.Classes.== "amazon_pay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAmazonPay
                                             | val GHC.Classes.== "au_becs_debit" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumAuBecsDebit
                                             | val GHC.Classes.== "bacs_debit" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBacsDebit
                                             | val GHC.Classes.== "bancontact" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBancontact
                                             | val GHC.Classes.== "billie" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBillie
                                             | val GHC.Classes.== "blik" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBlik
                                             | val GHC.Classes.== "boleto" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumBoleto
                                             | val GHC.Classes.== "card" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCard
                                             | val GHC.Classes.== "card_present" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCardPresent
                                             | val GHC.Classes.== "cashapp" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCashapp
                                             | val GHC.Classes.== "crypto" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCrypto
                                             | val GHC.Classes.== "customer_balance" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumCustomerBalance
                                             | val GHC.Classes.== "eps" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumEps
                                             | val GHC.Classes.== "fpx" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumFpx
                                             | val GHC.Classes.== "giropay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumGiropay
                                             | val GHC.Classes.== "grabpay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumGrabpay
                                             | val GHC.Classes.== "ideal" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumIdeal
                                             | val GHC.Classes.== "interac_present" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumInteracPresent
                                             | val GHC.Classes.== "kakao_pay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKakaoPay
                                             | val GHC.Classes.== "klarna" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKlarna
                                             | val GHC.Classes.== "konbini" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKonbini
                                             | val GHC.Classes.== "kr_card" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumKrCard
                                             | val GHC.Classes.== "link" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumLink
                                             | val GHC.Classes.== "mobilepay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumMobilepay
                                             | val GHC.Classes.== "multibanco" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumMultibanco
                                             | val GHC.Classes.== "naver_pay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumNaverPay
                                             | val GHC.Classes.== "nz_bank_account" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumNzBankAccount
                                             | val GHC.Classes.== "oxxo" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumOxxo
                                             | val GHC.Classes.== "p24" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumP24
                                             | val GHC.Classes.== "pay_by_bank" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPayByBank
                                             | val GHC.Classes.== "payco" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPayco
                                             | val GHC.Classes.== "paynow" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPaynow
                                             | val GHC.Classes.== "paypal" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPaypal
                                             | val GHC.Classes.== "pix" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPix
                                             | val GHC.Classes.== "promptpay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumPromptpay
                                             | val GHC.Classes.== "revolut_pay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumRevolutPay
                                             | val GHC.Classes.== "samsung_pay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSamsungPay
                                             | val GHC.Classes.== "satispay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSatispay
                                             | val GHC.Classes.== "sepa_debit" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSepaDebit
                                             | val GHC.Classes.== "sofort" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSofort
                                             | val GHC.Classes.== "swish" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumSwish
                                             | val GHC.Classes.== "twint" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumTwint
                                             | val GHC.Classes.== "us_bank_account" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumUsBankAccount
                                             | val GHC.Classes.== "wechat_pay" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumWechatPay
                                             | val GHC.Classes.== "zip" -> ConfirmationTokenPaymentMethodPreview'NonNullableType'EnumZip
                                             | GHC.Base.otherwise -> ConfirmationTokenPaymentMethodPreview'NonNullableType'Other val)}
-- | Defines the enum schema located at @components.schemas.confirmation_token.properties.setup_future_usage@ in the specification.
-- 
-- Indicates that you intend to make future payments with this ConfirmationToken\'s payment method.
-- 
-- The presence of this property will [attach the payment method](https:\/\/stripe.com\/docs\/payments\/save-during-payment) to the PaymentIntent\'s Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
data ConfirmationTokenSetupFutureUsage'NonNullable =
   ConfirmationTokenSetupFutureUsage'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ConfirmationTokenSetupFutureUsage'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ConfirmationTokenSetupFutureUsage'NonNullableEnumOffSession -- ^ Represents the JSON value @"off_session"@
  | ConfirmationTokenSetupFutureUsage'NonNullableEnumOnSession -- ^ Represents the JSON value @"on_session"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenSetupFutureUsage'NonNullable
    where {toJSON (ConfirmationTokenSetupFutureUsage'NonNullableOther val) = val;
           toJSON (ConfirmationTokenSetupFutureUsage'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (ConfirmationTokenSetupFutureUsage'NonNullableEnumOffSession) = "off_session";
           toJSON (ConfirmationTokenSetupFutureUsage'NonNullableEnumOnSession) = "on_session"}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenSetupFutureUsage'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "off_session" -> ConfirmationTokenSetupFutureUsage'NonNullableEnumOffSession
                                             | val GHC.Classes.== "on_session" -> ConfirmationTokenSetupFutureUsage'NonNullableEnumOnSession
                                             | GHC.Base.otherwise -> ConfirmationTokenSetupFutureUsage'NonNullableOther val)}
-- | Defines the object schema located at @components.schemas.confirmation_token.properties.shipping.anyOf@ in the specification.
-- 
-- Shipping information collected on this ConfirmationToken.
data ConfirmationTokenShipping'NonNullable = ConfirmationTokenShipping'NonNullable {
  -- | address: 
  confirmationTokenShipping'NonNullableAddress :: (GHC.Maybe.Maybe Address)
  -- | name: Recipient name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , confirmationTokenShipping'NonNullableName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phone: Recipient phone (including extension).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , confirmationTokenShipping'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConfirmationTokenShipping'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping'NonNullablePhone obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (confirmationTokenShipping'NonNullablePhone obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConfirmationTokenShipping'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConfirmationTokenShipping'NonNullable" (\obj -> ((GHC.Base.pure ConfirmationTokenShipping'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone"))}
-- | Create a new 'ConfirmationTokenShipping'NonNullable' with all required fields.
mkConfirmationTokenShipping'NonNullable :: ConfirmationTokenShipping'NonNullable
mkConfirmationTokenShipping'NonNullable = ConfirmationTokenShipping'NonNullable{confirmationTokenShipping'NonNullableAddress = GHC.Maybe.Nothing,
                                                                                confirmationTokenShipping'NonNullableName = GHC.Maybe.Nothing,
                                                                                confirmationTokenShipping'NonNullablePhone = GHC.Maybe.Nothing}
