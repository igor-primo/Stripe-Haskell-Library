-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ConnectEmbeddedInstantPayoutsPromotionFeatures
module StripeAPI.Types.ConnectEmbeddedInstantPayoutsPromotionFeatures where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.connect_embedded_instant_payouts_promotion_features@ in the specification.
-- 
-- 
data ConnectEmbeddedInstantPayoutsPromotionFeatures = ConnectEmbeddedInstantPayoutsPromotionFeatures {
  -- | disable_stripe_user_authentication: Whether Stripe user authentication is disabled. This value can only be \`true\` for accounts where \`controller.requirement_collection\` is \`application\` for the account. The default value is the opposite of the \`external_account_collection\` value. For example, if you don\'t set \`external_account_collection\`, it defaults to \`true\` and \`disable_stripe_user_authentication\` defaults to \`false\`.
  connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication :: GHC.Types.Bool
  -- | external_account_collection: Whether external account collection is enabled. This feature can only be \`false\` for accounts where youâ€™re responsible for collecting updated information when requirements are due or change, like Custom accounts. The default value for this feature is \`true\`.
  , connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection :: GHC.Types.Bool
  -- | instant_payouts: Whether to allow creation of instant payouts. Defaults to \`true\` when \`controller.losses.payments\` is set to \`stripe\` for the account, otherwise \`false\`.
  , connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ConnectEmbeddedInstantPayoutsPromotionFeatures
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..= connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication obj] : ["external_account_collection" Data.Aeson.Types.ToJSON..= connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection obj] : ["instant_payouts" Data.Aeson.Types.ToJSON..= connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["disable_stripe_user_authentication" Data.Aeson.Types.ToJSON..= connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication obj] : ["external_account_collection" Data.Aeson.Types.ToJSON..= connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection obj] : ["instant_payouts" Data.Aeson.Types.ToJSON..= connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ConnectEmbeddedInstantPayoutsPromotionFeatures
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ConnectEmbeddedInstantPayoutsPromotionFeatures" (\obj -> ((GHC.Base.pure ConnectEmbeddedInstantPayoutsPromotionFeatures GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "disable_stripe_user_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "external_account_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "instant_payouts"))}
-- | Create a new 'ConnectEmbeddedInstantPayoutsPromotionFeatures' with all required fields.
mkConnectEmbeddedInstantPayoutsPromotionFeatures :: GHC.Types.Bool -- ^ 'connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication'
  -> GHC.Types.Bool -- ^ 'connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection'
  -> GHC.Types.Bool -- ^ 'connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts'
  -> ConnectEmbeddedInstantPayoutsPromotionFeatures
mkConnectEmbeddedInstantPayoutsPromotionFeatures connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts = ConnectEmbeddedInstantPayoutsPromotionFeatures{connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication = connectEmbeddedInstantPayoutsPromotionFeaturesDisableStripeUserAuthentication,
                                                                                                                                                                                                                                                                                                                     connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection = connectEmbeddedInstantPayoutsPromotionFeaturesExternalAccountCollection,
                                                                                                                                                                                                                                                                                                                     connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts = connectEmbeddedInstantPayoutsPromotionFeaturesInstantPayouts}
