-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ForwardedRequestContext
module StripeAPI.Types.ForwardedRequestContext where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.forwarded_request_context@ in the specification.
-- 
-- Metadata about the forwarded request.
data ForwardedRequestContext = ForwardedRequestContext {
  -- | destination_duration: The time it took in milliseconds for the destination endpoint to respond.
  forwardedRequestContextDestinationDuration :: GHC.Types.Int
  -- | destination_ip_address: The IP address of the destination.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , forwardedRequestContextDestinationIpAddress :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ForwardedRequestContext
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["destination_duration" Data.Aeson.Types.ToJSON..= forwardedRequestContextDestinationDuration obj] : ["destination_ip_address" Data.Aeson.Types.ToJSON..= forwardedRequestContextDestinationIpAddress obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["destination_duration" Data.Aeson.Types.ToJSON..= forwardedRequestContextDestinationDuration obj] : ["destination_ip_address" Data.Aeson.Types.ToJSON..= forwardedRequestContextDestinationIpAddress obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ForwardedRequestContext
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ForwardedRequestContext" (\obj -> (GHC.Base.pure ForwardedRequestContext GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination_duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination_ip_address"))}
-- | Create a new 'ForwardedRequestContext' with all required fields.
mkForwardedRequestContext :: GHC.Types.Int -- ^ 'forwardedRequestContextDestinationDuration'
  -> Data.Text.Internal.Text -- ^ 'forwardedRequestContextDestinationIpAddress'
  -> ForwardedRequestContext
mkForwardedRequestContext forwardedRequestContextDestinationDuration forwardedRequestContextDestinationIpAddress = ForwardedRequestContext{forwardedRequestContextDestinationDuration = forwardedRequestContextDestinationDuration,
                                                                                                                                           forwardedRequestContextDestinationIpAddress = forwardedRequestContextDestinationIpAddress}
