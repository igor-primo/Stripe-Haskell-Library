-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Forwarding_Request
module StripeAPI.Types.Forwarding_Request where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.ForwardedRequestContext
import {-# SOURCE #-} StripeAPI.Types.ForwardedRequestDetails
import {-# SOURCE #-} StripeAPI.Types.ForwardedRequestHeader
import {-# SOURCE #-} StripeAPI.Types.ForwardedResponseDetails

-- | Defines the object schema located at @components.schemas.forwarding.request@ in the specification.
-- 
-- Instructs Stripe to make a request on your behalf using the destination URL. The destination URL
-- is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials
-- provided during onboarding, and injects card details from the payment_method into the request.
-- 
-- Stripe redacts all sensitive fields and headers, including authentication credentials and card numbers,
-- before storing the request and response data in the forwarding Request object, which are subject to a
-- 30-day retention period.
-- 
-- You can provide a Stripe idempotency key to make sure that requests with the same key result in only one
-- outbound request. The Stripe idempotency key provided should be unique and different from any idempotency
-- keys provided on the underlying third-party request.
-- 
-- Forwarding Requests are synchronous requests that return a response or time out according to
-- Stripeâ€™s limits.
-- 
-- Related guide: [Forward card details to third-party API endpoints](https:\/\/docs.stripe.com\/payments\/forwarding).
data Forwarding'request = Forwarding'request {
  -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
  forwarding'requestCreated :: GHC.Types.Int
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , forwarding'requestId :: Data.Text.Internal.Text
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , forwarding'requestLivemode :: GHC.Types.Bool
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , forwarding'requestMetadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object))
  -- | payment_method: The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , forwarding'requestPaymentMethod :: Data.Text.Internal.Text
  -- | replacements: The field kinds to be replaced in the forwarded request.
  , forwarding'requestReplacements :: [Forwarding'requestReplacements']
  -- | request_context: Context about the request from Stripe\'s servers to the destination endpoint.
  , forwarding'requestRequestContext :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Forwarding'requestRequestContext'NonNullable))
  -- | request_details: The request that was sent to the destination endpoint. We redact any sensitive fields.
  , forwarding'requestRequestDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Forwarding'requestRequestDetails'NonNullable))
  -- | response_details: The response that the destination endpoint returned to us. We redact any sensitive fields.
  , forwarding'requestResponseDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Forwarding'requestResponseDetails'NonNullable))
  -- | url: The destination URL for the forwarded request. Must be supported by the config.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , forwarding'requestUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Forwarding'request
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= forwarding'requestCreated obj] : ["id" Data.Aeson.Types.ToJSON..= forwarding'requestId obj] : ["livemode" Data.Aeson.Types.ToJSON..= forwarding'requestLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (forwarding'requestMetadata obj) : ["payment_method" Data.Aeson.Types.ToJSON..= forwarding'requestPaymentMethod obj] : ["replacements" Data.Aeson.Types.ToJSON..= forwarding'requestReplacements obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_context" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestContext obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_details" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("response_details" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (forwarding'requestUrl obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "forwarding.request"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= forwarding'requestCreated obj] : ["id" Data.Aeson.Types.ToJSON..= forwarding'requestId obj] : ["livemode" Data.Aeson.Types.ToJSON..= forwarding'requestLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (forwarding'requestMetadata obj) : ["payment_method" Data.Aeson.Types.ToJSON..= forwarding'requestPaymentMethod obj] : ["replacements" Data.Aeson.Types.ToJSON..= forwarding'requestReplacements obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_context" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestContext obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_details" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("response_details" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (forwarding'requestUrl obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "forwarding.request"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON Forwarding'request
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "Forwarding'request" (\obj -> (((((((((GHC.Base.pure Forwarding'request GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "replacements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request_context")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "response_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))}
-- | Create a new 'Forwarding'request' with all required fields.
mkForwarding'request :: GHC.Types.Int -- ^ 'forwarding'requestCreated'
  -> Data.Text.Internal.Text -- ^ 'forwarding'requestId'
  -> GHC.Types.Bool -- ^ 'forwarding'requestLivemode'
  -> Data.Text.Internal.Text -- ^ 'forwarding'requestPaymentMethod'
  -> [Forwarding'requestReplacements'] -- ^ 'forwarding'requestReplacements'
  -> Forwarding'request
mkForwarding'request forwarding'requestCreated forwarding'requestId forwarding'requestLivemode forwarding'requestPaymentMethod forwarding'requestReplacements = Forwarding'request{forwarding'requestCreated = forwarding'requestCreated,
                                                                                                                                                                                   forwarding'requestId = forwarding'requestId,
                                                                                                                                                                                   forwarding'requestLivemode = forwarding'requestLivemode,
                                                                                                                                                                                   forwarding'requestMetadata = GHC.Maybe.Nothing,
                                                                                                                                                                                   forwarding'requestPaymentMethod = forwarding'requestPaymentMethod,
                                                                                                                                                                                   forwarding'requestReplacements = forwarding'requestReplacements,
                                                                                                                                                                                   forwarding'requestRequestContext = GHC.Maybe.Nothing,
                                                                                                                                                                                   forwarding'requestRequestDetails = GHC.Maybe.Nothing,
                                                                                                                                                                                   forwarding'requestResponseDetails = GHC.Maybe.Nothing,
                                                                                                                                                                                   forwarding'requestUrl = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.forwarding.request.properties.replacements.items@ in the specification.
-- 
-- 
data Forwarding'requestReplacements' =
   Forwarding'requestReplacements'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Forwarding'requestReplacements'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Forwarding'requestReplacements'EnumCardCvc -- ^ Represents the JSON value @"card_cvc"@
  | Forwarding'requestReplacements'EnumCardExpiry -- ^ Represents the JSON value @"card_expiry"@
  | Forwarding'requestReplacements'EnumCardNumber -- ^ Represents the JSON value @"card_number"@
  | Forwarding'requestReplacements'EnumCardholderName -- ^ Represents the JSON value @"cardholder_name"@
  | Forwarding'requestReplacements'EnumRequestSignature -- ^ Represents the JSON value @"request_signature"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Forwarding'requestReplacements'
    where {toJSON (Forwarding'requestReplacements'Other val) = val;
           toJSON (Forwarding'requestReplacements'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (Forwarding'requestReplacements'EnumCardCvc) = "card_cvc";
           toJSON (Forwarding'requestReplacements'EnumCardExpiry) = "card_expiry";
           toJSON (Forwarding'requestReplacements'EnumCardNumber) = "card_number";
           toJSON (Forwarding'requestReplacements'EnumCardholderName) = "cardholder_name";
           toJSON (Forwarding'requestReplacements'EnumRequestSignature) = "request_signature"}
instance Data.Aeson.Types.FromJSON.FromJSON Forwarding'requestReplacements'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "card_cvc" -> Forwarding'requestReplacements'EnumCardCvc
                                             | val GHC.Classes.== "card_expiry" -> Forwarding'requestReplacements'EnumCardExpiry
                                             | val GHC.Classes.== "card_number" -> Forwarding'requestReplacements'EnumCardNumber
                                             | val GHC.Classes.== "cardholder_name" -> Forwarding'requestReplacements'EnumCardholderName
                                             | val GHC.Classes.== "request_signature" -> Forwarding'requestReplacements'EnumRequestSignature
                                             | GHC.Base.otherwise -> Forwarding'requestReplacements'Other val)}
-- | Defines the object schema located at @components.schemas.forwarding.request.properties.request_context.anyOf@ in the specification.
-- 
-- Context about the request from Stripe\\\'s servers to the destination endpoint.
data Forwarding'requestRequestContext'NonNullable = Forwarding'requestRequestContext'NonNullable {
  -- | destination_duration: The time it took in milliseconds for the destination endpoint to respond.
  forwarding'requestRequestContext'NonNullableDestinationDuration :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | destination_ip_address: The IP address of the destination.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , forwarding'requestRequestContext'NonNullableDestinationIpAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Forwarding'requestRequestContext'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_duration" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestContext'NonNullableDestinationDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_ip_address" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestContext'NonNullableDestinationIpAddress obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_duration" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestContext'NonNullableDestinationDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_ip_address" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestContext'NonNullableDestinationIpAddress obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON Forwarding'requestRequestContext'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "Forwarding'requestRequestContext'NonNullable" (\obj -> (GHC.Base.pure Forwarding'requestRequestContext'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_ip_address"))}
-- | Create a new 'Forwarding'requestRequestContext'NonNullable' with all required fields.
mkForwarding'requestRequestContext'NonNullable :: Forwarding'requestRequestContext'NonNullable
mkForwarding'requestRequestContext'NonNullable = Forwarding'requestRequestContext'NonNullable{forwarding'requestRequestContext'NonNullableDestinationDuration = GHC.Maybe.Nothing,
                                                                                              forwarding'requestRequestContext'NonNullableDestinationIpAddress = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.forwarding.request.properties.request_details.anyOf@ in the specification.
-- 
-- The request that was sent to the destination endpoint. We redact any sensitive fields.
data Forwarding'requestRequestDetails'NonNullable = Forwarding'requestRequestDetails'NonNullable {
  -- | body: The body payload to send to the destination endpoint.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  forwarding'requestRequestDetails'NonNullableBody :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headers: The headers to include in the forwarded request. Can be omitted if no additional headers (excluding Stripe-generated ones such as the Content-Type header) should be included.
  , forwarding'requestRequestDetails'NonNullableHeaders :: (GHC.Maybe.Maybe [ForwardedRequestHeader])
  -- | http_method: The HTTP method used to call the destination endpoint.
  , forwarding'requestRequestDetails'NonNullableHttpMethod :: (GHC.Maybe.Maybe Forwarding'requestRequestDetails'NonNullableHttpMethod')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Forwarding'requestRequestDetails'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("body" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails'NonNullableBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("headers" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails'NonNullableHeaders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("http_method" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails'NonNullableHttpMethod obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("body" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails'NonNullableBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("headers" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails'NonNullableHeaders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("http_method" Data.Aeson.Types.ToJSON..=)) (forwarding'requestRequestDetails'NonNullableHttpMethod obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON Forwarding'requestRequestDetails'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "Forwarding'requestRequestDetails'NonNullable" (\obj -> ((GHC.Base.pure Forwarding'requestRequestDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "headers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "http_method"))}
-- | Create a new 'Forwarding'requestRequestDetails'NonNullable' with all required fields.
mkForwarding'requestRequestDetails'NonNullable :: Forwarding'requestRequestDetails'NonNullable
mkForwarding'requestRequestDetails'NonNullable = Forwarding'requestRequestDetails'NonNullable{forwarding'requestRequestDetails'NonNullableBody = GHC.Maybe.Nothing,
                                                                                              forwarding'requestRequestDetails'NonNullableHeaders = GHC.Maybe.Nothing,
                                                                                              forwarding'requestRequestDetails'NonNullableHttpMethod = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.forwarding.request.properties.request_details.anyOf.properties.http_method@ in the specification.
-- 
-- The HTTP method used to call the destination endpoint.
data Forwarding'requestRequestDetails'NonNullableHttpMethod' =
   Forwarding'requestRequestDetails'NonNullableHttpMethod'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Forwarding'requestRequestDetails'NonNullableHttpMethod'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Forwarding'requestRequestDetails'NonNullableHttpMethod'EnumPOST -- ^ Represents the JSON value @"POST"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Forwarding'requestRequestDetails'NonNullableHttpMethod'
    where {toJSON (Forwarding'requestRequestDetails'NonNullableHttpMethod'Other val) = val;
           toJSON (Forwarding'requestRequestDetails'NonNullableHttpMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (Forwarding'requestRequestDetails'NonNullableHttpMethod'EnumPOST) = "POST"}
instance Data.Aeson.Types.FromJSON.FromJSON Forwarding'requestRequestDetails'NonNullableHttpMethod'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "POST" -> Forwarding'requestRequestDetails'NonNullableHttpMethod'EnumPOST
                                             | GHC.Base.otherwise -> Forwarding'requestRequestDetails'NonNullableHttpMethod'Other val)}
-- | Defines the object schema located at @components.schemas.forwarding.request.properties.response_details.anyOf@ in the specification.
-- 
-- The response that the destination endpoint returned to us. We redact any sensitive fields.
data Forwarding'requestResponseDetails'NonNullable = Forwarding'requestResponseDetails'NonNullable {
  -- | body: The response body from the destination endpoint to Stripe.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  forwarding'requestResponseDetails'NonNullableBody :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headers: HTTP headers that the destination endpoint returned.
  , forwarding'requestResponseDetails'NonNullableHeaders :: (GHC.Maybe.Maybe [ForwardedRequestHeader])
  -- | status: The HTTP status code that the destination endpoint returned.
  , forwarding'requestResponseDetails'NonNullableStatus :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Forwarding'requestResponseDetails'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("body" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails'NonNullableBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("headers" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails'NonNullableHeaders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails'NonNullableStatus obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("body" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails'NonNullableBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("headers" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails'NonNullableHeaders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (forwarding'requestResponseDetails'NonNullableStatus obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON Forwarding'requestResponseDetails'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "Forwarding'requestResponseDetails'NonNullable" (\obj -> ((GHC.Base.pure Forwarding'requestResponseDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "headers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status"))}
-- | Create a new 'Forwarding'requestResponseDetails'NonNullable' with all required fields.
mkForwarding'requestResponseDetails'NonNullable :: Forwarding'requestResponseDetails'NonNullable
mkForwarding'requestResponseDetails'NonNullable = Forwarding'requestResponseDetails'NonNullable{forwarding'requestResponseDetails'NonNullableBody = GHC.Maybe.Nothing,
                                                                                                forwarding'requestResponseDetails'NonNullableHeaders = GHC.Maybe.Nothing,
                                                                                                forwarding'requestResponseDetails'NonNullableStatus = GHC.Maybe.Nothing}
