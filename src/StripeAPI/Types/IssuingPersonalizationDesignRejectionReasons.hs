-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema IssuingPersonalizationDesignRejectionReasons
module StripeAPI.Types.IssuingPersonalizationDesignRejectionReasons where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.issuing_personalization_design_rejection_reasons@ in the specification.
-- 
-- 
data IssuingPersonalizationDesignRejectionReasons = IssuingPersonalizationDesignRejectionReasons {
  -- | card_logo: The reason(s) the card logo was rejected.
  issuingPersonalizationDesignRejectionReasonsCardLogo :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullable]))
  -- | carrier_text: The reason(s) the carrier text was rejected.
  , issuingPersonalizationDesignRejectionReasonsCarrierText :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullable]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingPersonalizationDesignRejectionReasons
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (issuingPersonalizationDesignRejectionReasonsCardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (issuingPersonalizationDesignRejectionReasonsCarrierText obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_logo" Data.Aeson.Types.ToJSON..=)) (issuingPersonalizationDesignRejectionReasonsCardLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier_text" Data.Aeson.Types.ToJSON..=)) (issuingPersonalizationDesignRejectionReasonsCarrierText obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON IssuingPersonalizationDesignRejectionReasons
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingPersonalizationDesignRejectionReasons" (\obj -> (GHC.Base.pure IssuingPersonalizationDesignRejectionReasons GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier_text"))}
-- | Create a new 'IssuingPersonalizationDesignRejectionReasons' with all required fields.
mkIssuingPersonalizationDesignRejectionReasons :: IssuingPersonalizationDesignRejectionReasons
mkIssuingPersonalizationDesignRejectionReasons = IssuingPersonalizationDesignRejectionReasons{issuingPersonalizationDesignRejectionReasonsCardLogo = GHC.Maybe.Nothing,
                                                                                              issuingPersonalizationDesignRejectionReasonsCarrierText = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.issuing_personalization_design_rejection_reasons.properties.card_logo.items@ in the specification.
-- 
-- 
data IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullable =
   IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumGeographicLocation -- ^ Represents the JSON value @"geographic_location"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumInappropriate -- ^ Represents the JSON value @"inappropriate"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNetworkName -- ^ Represents the JSON value @"network_name"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNonBinaryImage -- ^ Represents the JSON value @"non_binary_image"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNonFiatCurrency -- ^ Represents the JSON value @"non_fiat_currency"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumOther -- ^ Represents the JSON value @"other"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumOtherEntity -- ^ Represents the JSON value @"other_entity"@
  | IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumPromotionalMaterial -- ^ Represents the JSON value @"promotional_material"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullable
    where {toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableOther val) = val;
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumGeographicLocation) = "geographic_location";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumInappropriate) = "inappropriate";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNetworkName) = "network_name";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNonBinaryImage) = "non_binary_image";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNonFiatCurrency) = "non_fiat_currency";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumOther) = "other";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumOtherEntity) = "other_entity";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumPromotionalMaterial) = "promotional_material"}
instance Data.Aeson.Types.FromJSON.FromJSON IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "geographic_location" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumGeographicLocation
                                             | val GHC.Classes.== "inappropriate" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumInappropriate
                                             | val GHC.Classes.== "network_name" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNetworkName
                                             | val GHC.Classes.== "non_binary_image" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNonBinaryImage
                                             | val GHC.Classes.== "non_fiat_currency" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumNonFiatCurrency
                                             | val GHC.Classes.== "other" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumOther
                                             | val GHC.Classes.== "other_entity" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumOtherEntity
                                             | val GHC.Classes.== "promotional_material" -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableEnumPromotionalMaterial
                                             | GHC.Base.otherwise -> IssuingPersonalizationDesignRejectionReasonsCardLogo'NonNullableOther val)}
-- | Defines the enum schema located at @components.schemas.issuing_personalization_design_rejection_reasons.properties.carrier_text.items@ in the specification.
-- 
-- 
data IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullable =
   IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumGeographicLocation -- ^ Represents the JSON value @"geographic_location"@
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumInappropriate -- ^ Represents the JSON value @"inappropriate"@
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumNetworkName -- ^ Represents the JSON value @"network_name"@
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumNonFiatCurrency -- ^ Represents the JSON value @"non_fiat_currency"@
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumOther -- ^ Represents the JSON value @"other"@
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumOtherEntity -- ^ Represents the JSON value @"other_entity"@
  | IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumPromotionalMaterial -- ^ Represents the JSON value @"promotional_material"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullable
    where {toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableOther val) = val;
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumGeographicLocation) = "geographic_location";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumInappropriate) = "inappropriate";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumNetworkName) = "network_name";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumNonFiatCurrency) = "non_fiat_currency";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumOther) = "other";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumOtherEntity) = "other_entity";
           toJSON (IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumPromotionalMaterial) = "promotional_material"}
instance Data.Aeson.Types.FromJSON.FromJSON IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "geographic_location" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumGeographicLocation
                                             | val GHC.Classes.== "inappropriate" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumInappropriate
                                             | val GHC.Classes.== "network_name" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumNetworkName
                                             | val GHC.Classes.== "non_fiat_currency" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumNonFiatCurrency
                                             | val GHC.Classes.== "other" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumOther
                                             | val GHC.Classes.== "other_entity" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumOtherEntity
                                             | val GHC.Classes.== "promotional_material" -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableEnumPromotionalMaterial
                                             | GHC.Base.otherwise -> IssuingPersonalizationDesignRejectionReasonsCarrierText'NonNullableOther val)}
