-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Issuing_Settlement
module StripeAPI.Types.Issuing_Settlement where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.issuing.settlement@ in the specification.
-- 
-- When a non-stripe BIN is used, any use of an [issued card](https:\/\/stripe.com\/docs\/issuing) must be settled directly with the card network. The net amount owed is represented by an Issuing \`Settlement\` object.
data Issuing'settlement = Issuing'settlement {
  -- | bin: The Bank Identification Number reflecting this settlement record.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  issuing'settlementBin :: Data.Text.Internal.Text
  -- | clearing_date: The date that the transactions are cleared and posted to user\'s accounts.
  , issuing'settlementClearingDate :: GHC.Types.Int
  -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
  , issuing'settlementCreated :: GHC.Types.Int
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  , issuing'settlementCurrency :: Data.Text.Internal.Text
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuing'settlementId :: Data.Text.Internal.Text
  -- | interchange_fees_amount: The total interchange received as reimbursement for the transactions.
  , issuing'settlementInterchangeFeesAmount :: GHC.Types.Int
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , issuing'settlementLivemode :: GHC.Types.Bool
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , issuing'settlementMetadata :: Data.Aeson.Types.Internal.Object
  -- | net_total_amount: The total net amount required to settle with the network.
  , issuing'settlementNetTotalAmount :: GHC.Types.Int
  -- | network: The card network for this settlement report. One of [\"visa\", \"maestro\"]
  , issuing'settlementNetwork :: Issuing'settlementNetwork'
  -- | network_fees_amount: The total amount of fees owed to the network.
  , issuing'settlementNetworkFeesAmount :: GHC.Types.Int
  -- | network_settlement_identifier: The Settlement Identification Number assigned by the network.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuing'settlementNetworkSettlementIdentifier :: Data.Text.Internal.Text
  -- | settlement_service: One of \`international\` or \`uk_national_net\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuing'settlementSettlementService :: Data.Text.Internal.Text
  -- | status: The current processing status of this settlement.
  , issuing'settlementStatus :: Issuing'settlementStatus'
  -- | transaction_amount: The total transaction amount reflected in this settlement.
  , issuing'settlementTransactionAmount :: GHC.Types.Int
  -- | transaction_count: The total number of transactions reflected in this settlement.
  , issuing'settlementTransactionCount :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Issuing'settlement
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["bin" Data.Aeson.Types.ToJSON..= issuing'settlementBin obj] : ["clearing_date" Data.Aeson.Types.ToJSON..= issuing'settlementClearingDate obj] : ["created" Data.Aeson.Types.ToJSON..= issuing'settlementCreated obj] : ["currency" Data.Aeson.Types.ToJSON..= issuing'settlementCurrency obj] : ["id" Data.Aeson.Types.ToJSON..= issuing'settlementId obj] : ["interchange_fees_amount" Data.Aeson.Types.ToJSON..= issuing'settlementInterchangeFeesAmount obj] : ["livemode" Data.Aeson.Types.ToJSON..= issuing'settlementLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= issuing'settlementMetadata obj] : ["net_total_amount" Data.Aeson.Types.ToJSON..= issuing'settlementNetTotalAmount obj] : ["network" Data.Aeson.Types.ToJSON..= issuing'settlementNetwork obj] : ["network_fees_amount" Data.Aeson.Types.ToJSON..= issuing'settlementNetworkFeesAmount obj] : ["network_settlement_identifier" Data.Aeson.Types.ToJSON..= issuing'settlementNetworkSettlementIdentifier obj] : ["settlement_service" Data.Aeson.Types.ToJSON..= issuing'settlementSettlementService obj] : ["status" Data.Aeson.Types.ToJSON..= issuing'settlementStatus obj] : ["transaction_amount" Data.Aeson.Types.ToJSON..= issuing'settlementTransactionAmount obj] : ["transaction_count" Data.Aeson.Types.ToJSON..= issuing'settlementTransactionCount obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "issuing.settlement"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["bin" Data.Aeson.Types.ToJSON..= issuing'settlementBin obj] : ["clearing_date" Data.Aeson.Types.ToJSON..= issuing'settlementClearingDate obj] : ["created" Data.Aeson.Types.ToJSON..= issuing'settlementCreated obj] : ["currency" Data.Aeson.Types.ToJSON..= issuing'settlementCurrency obj] : ["id" Data.Aeson.Types.ToJSON..= issuing'settlementId obj] : ["interchange_fees_amount" Data.Aeson.Types.ToJSON..= issuing'settlementInterchangeFeesAmount obj] : ["livemode" Data.Aeson.Types.ToJSON..= issuing'settlementLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= issuing'settlementMetadata obj] : ["net_total_amount" Data.Aeson.Types.ToJSON..= issuing'settlementNetTotalAmount obj] : ["network" Data.Aeson.Types.ToJSON..= issuing'settlementNetwork obj] : ["network_fees_amount" Data.Aeson.Types.ToJSON..= issuing'settlementNetworkFeesAmount obj] : ["network_settlement_identifier" Data.Aeson.Types.ToJSON..= issuing'settlementNetworkSettlementIdentifier obj] : ["settlement_service" Data.Aeson.Types.ToJSON..= issuing'settlementSettlementService obj] : ["status" Data.Aeson.Types.ToJSON..= issuing'settlementStatus obj] : ["transaction_amount" Data.Aeson.Types.ToJSON..= issuing'settlementTransactionAmount obj] : ["transaction_count" Data.Aeson.Types.ToJSON..= issuing'settlementTransactionCount obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "issuing.settlement"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON Issuing'settlement
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "Issuing'settlement" (\obj -> (((((((((((((((GHC.Base.pure Issuing'settlement GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clearing_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interchange_fees_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "net_total_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network_fees_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network_settlement_identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "settlement_service")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transaction_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transaction_count"))}
-- | Create a new 'Issuing'settlement' with all required fields.
mkIssuing'settlement :: Data.Text.Internal.Text -- ^ 'issuing'settlementBin'
  -> GHC.Types.Int -- ^ 'issuing'settlementClearingDate'
  -> GHC.Types.Int -- ^ 'issuing'settlementCreated'
  -> Data.Text.Internal.Text -- ^ 'issuing'settlementCurrency'
  -> Data.Text.Internal.Text -- ^ 'issuing'settlementId'
  -> GHC.Types.Int -- ^ 'issuing'settlementInterchangeFeesAmount'
  -> GHC.Types.Bool -- ^ 'issuing'settlementLivemode'
  -> Data.Aeson.Types.Internal.Object -- ^ 'issuing'settlementMetadata'
  -> GHC.Types.Int -- ^ 'issuing'settlementNetTotalAmount'
  -> Issuing'settlementNetwork' -- ^ 'issuing'settlementNetwork'
  -> GHC.Types.Int -- ^ 'issuing'settlementNetworkFeesAmount'
  -> Data.Text.Internal.Text -- ^ 'issuing'settlementNetworkSettlementIdentifier'
  -> Data.Text.Internal.Text -- ^ 'issuing'settlementSettlementService'
  -> Issuing'settlementStatus' -- ^ 'issuing'settlementStatus'
  -> GHC.Types.Int -- ^ 'issuing'settlementTransactionAmount'
  -> GHC.Types.Int -- ^ 'issuing'settlementTransactionCount'
  -> Issuing'settlement
mkIssuing'settlement issuing'settlementBin issuing'settlementClearingDate issuing'settlementCreated issuing'settlementCurrency issuing'settlementId issuing'settlementInterchangeFeesAmount issuing'settlementLivemode issuing'settlementMetadata issuing'settlementNetTotalAmount issuing'settlementNetwork issuing'settlementNetworkFeesAmount issuing'settlementNetworkSettlementIdentifier issuing'settlementSettlementService issuing'settlementStatus issuing'settlementTransactionAmount issuing'settlementTransactionCount = Issuing'settlement{issuing'settlementBin = issuing'settlementBin,
issuing'settlementClearingDate = issuing'settlementClearingDate,
issuing'settlementCreated = issuing'settlementCreated,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        issuing'settlementCurrency = issuing'settlementCurrency,
issuing'settlementId = issuing'settlementId,
issuing'settlementInterchangeFeesAmount = issuing'settlementInterchangeFeesAmount,
issuing'settlementLivemode = issuing'settlementLivemode,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        issuing'settlementMetadata = issuing'settlementMetadata,
issuing'settlementNetTotalAmount = issuing'settlementNetTotalAmount,
issuing'settlementNetwork = issuing'settlementNetwork,
issuing'settlementNetworkFeesAmount = issuing'settlementNetworkFeesAmount,
issuing'settlementNetworkSettlementIdentifier = issuing'settlementNetworkSettlementIdentifier,
issuing'settlementSettlementService = issuing'settlementSettlementService,
issuing'settlementStatus = issuing'settlementStatus,
issuing'settlementTransactionAmount = issuing'settlementTransactionAmount,
issuing'settlementTransactionCount = issuing'settlementTransactionCount}
-- | Defines the enum schema located at @components.schemas.issuing.settlement.properties.network@ in the specification.
-- 
-- The card network for this settlement report. One of [\"visa\", \"maestro\"]
data Issuing'settlementNetwork' =
   Issuing'settlementNetwork'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Issuing'settlementNetwork'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Issuing'settlementNetwork'EnumMaestro -- ^ Represents the JSON value @"maestro"@
  | Issuing'settlementNetwork'EnumVisa -- ^ Represents the JSON value @"visa"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Issuing'settlementNetwork'
    where {toJSON (Issuing'settlementNetwork'Other val) = val;
           toJSON (Issuing'settlementNetwork'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (Issuing'settlementNetwork'EnumMaestro) = "maestro";
           toJSON (Issuing'settlementNetwork'EnumVisa) = "visa"}
instance Data.Aeson.Types.FromJSON.FromJSON Issuing'settlementNetwork'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "maestro" -> Issuing'settlementNetwork'EnumMaestro
                                             | val GHC.Classes.== "visa" -> Issuing'settlementNetwork'EnumVisa
                                             | GHC.Base.otherwise -> Issuing'settlementNetwork'Other val)}
-- | Defines the enum schema located at @components.schemas.issuing.settlement.properties.status@ in the specification.
-- 
-- The current processing status of this settlement.
data Issuing'settlementStatus' =
   Issuing'settlementStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Issuing'settlementStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Issuing'settlementStatus'EnumComplete -- ^ Represents the JSON value @"complete"@
  | Issuing'settlementStatus'EnumPending -- ^ Represents the JSON value @"pending"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Issuing'settlementStatus'
    where {toJSON (Issuing'settlementStatus'Other val) = val;
           toJSON (Issuing'settlementStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (Issuing'settlementStatus'EnumComplete) = "complete";
           toJSON (Issuing'settlementStatus'EnumPending) = "pending"}
instance Data.Aeson.Types.FromJSON.FromJSON Issuing'settlementStatus'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "complete" -> Issuing'settlementStatus'EnumComplete
                                             | val GHC.Classes.== "pending" -> Issuing'settlementStatus'EnumPending
                                             | GHC.Base.otherwise -> Issuing'settlementStatus'Other val)}
