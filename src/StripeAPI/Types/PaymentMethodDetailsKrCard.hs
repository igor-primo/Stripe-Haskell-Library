-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema PaymentMethodDetailsKrCard
module StripeAPI.Types.PaymentMethodDetailsKrCard where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.payment_method_details_kr_card@ in the specification.
-- 
-- 
data PaymentMethodDetailsKrCard = PaymentMethodDetailsKrCard {
  -- | brand: The local credit or debit card brand.
  paymentMethodDetailsKrCardBrand :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsKrCardBrand'NonNullable))
  -- | buyer_id: A unique identifier for the buyer as determined by the local payment processor.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , paymentMethodDetailsKrCardBuyerId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | last4: The last four digits of the card. This may not be present for American Express cards.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 4
  , paymentMethodDetailsKrCardLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsKrCard
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsKrCardBrand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("buyer_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsKrCardBuyerId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsKrCardLast4 obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsKrCardBrand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("buyer_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsKrCardBuyerId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsKrCardLast4 obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsKrCard
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsKrCard" (\obj -> ((GHC.Base.pure PaymentMethodDetailsKrCard GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "buyer_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4"))}
-- | Create a new 'PaymentMethodDetailsKrCard' with all required fields.
mkPaymentMethodDetailsKrCard :: PaymentMethodDetailsKrCard
mkPaymentMethodDetailsKrCard = PaymentMethodDetailsKrCard{paymentMethodDetailsKrCardBrand = GHC.Maybe.Nothing,
                                                          paymentMethodDetailsKrCardBuyerId = GHC.Maybe.Nothing,
                                                          paymentMethodDetailsKrCardLast4 = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.payment_method_details_kr_card.properties.brand@ in the specification.
-- 
-- The local credit or debit card brand.
data PaymentMethodDetailsKrCardBrand'NonNullable =
   PaymentMethodDetailsKrCardBrand'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PaymentMethodDetailsKrCardBrand'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumBc -- ^ Represents the JSON value @"bc"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumCiti -- ^ Represents the JSON value @"citi"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumHana -- ^ Represents the JSON value @"hana"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumHyundai -- ^ Represents the JSON value @"hyundai"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumJeju -- ^ Represents the JSON value @"jeju"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumJeonbuk -- ^ Represents the JSON value @"jeonbuk"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumKakaobank -- ^ Represents the JSON value @"kakaobank"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumKbank -- ^ Represents the JSON value @"kbank"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumKdbbank -- ^ Represents the JSON value @"kdbbank"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumKookmin -- ^ Represents the JSON value @"kookmin"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumKwangju -- ^ Represents the JSON value @"kwangju"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumLotte -- ^ Represents the JSON value @"lotte"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumMg -- ^ Represents the JSON value @"mg"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumNh -- ^ Represents the JSON value @"nh"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumPost -- ^ Represents the JSON value @"post"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumSamsung -- ^ Represents the JSON value @"samsung"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumSavingsbank -- ^ Represents the JSON value @"savingsbank"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumShinhan -- ^ Represents the JSON value @"shinhan"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumShinhyup -- ^ Represents the JSON value @"shinhyup"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumSuhyup -- ^ Represents the JSON value @"suhyup"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumTossbank -- ^ Represents the JSON value @"tossbank"@
  | PaymentMethodDetailsKrCardBrand'NonNullableEnumWoori -- ^ Represents the JSON value @"woori"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsKrCardBrand'NonNullable
    where {toJSON (PaymentMethodDetailsKrCardBrand'NonNullableOther val) = val;
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumBc) = "bc";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumCiti) = "citi";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumHana) = "hana";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumHyundai) = "hyundai";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumJeju) = "jeju";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumJeonbuk) = "jeonbuk";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumKakaobank) = "kakaobank";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumKbank) = "kbank";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumKdbbank) = "kdbbank";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumKookmin) = "kookmin";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumKwangju) = "kwangju";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumLotte) = "lotte";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumMg) = "mg";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumNh) = "nh";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumPost) = "post";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumSamsung) = "samsung";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumSavingsbank) = "savingsbank";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumShinhan) = "shinhan";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumShinhyup) = "shinhyup";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumSuhyup) = "suhyup";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumTossbank) = "tossbank";
           toJSON (PaymentMethodDetailsKrCardBrand'NonNullableEnumWoori) = "woori"}
instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsKrCardBrand'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "bc" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumBc
                                             | val GHC.Classes.== "citi" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumCiti
                                             | val GHC.Classes.== "hana" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumHana
                                             | val GHC.Classes.== "hyundai" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumHyundai
                                             | val GHC.Classes.== "jeju" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumJeju
                                             | val GHC.Classes.== "jeonbuk" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumJeonbuk
                                             | val GHC.Classes.== "kakaobank" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumKakaobank
                                             | val GHC.Classes.== "kbank" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumKbank
                                             | val GHC.Classes.== "kdbbank" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumKdbbank
                                             | val GHC.Classes.== "kookmin" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumKookmin
                                             | val GHC.Classes.== "kwangju" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumKwangju
                                             | val GHC.Classes.== "lotte" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumLotte
                                             | val GHC.Classes.== "mg" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumMg
                                             | val GHC.Classes.== "nh" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumNh
                                             | val GHC.Classes.== "post" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumPost
                                             | val GHC.Classes.== "samsung" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumSamsung
                                             | val GHC.Classes.== "savingsbank" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumSavingsbank
                                             | val GHC.Classes.== "shinhan" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumShinhan
                                             | val GHC.Classes.== "shinhyup" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumShinhyup
                                             | val GHC.Classes.== "suhyup" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumSuhyup
                                             | val GHC.Classes.== "tossbank" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumTossbank
                                             | val GHC.Classes.== "woori" -> PaymentMethodDetailsKrCardBrand'NonNullableEnumWoori
                                             | GHC.Base.otherwise -> PaymentMethodDetailsKrCardBrand'NonNullableOther val)}
