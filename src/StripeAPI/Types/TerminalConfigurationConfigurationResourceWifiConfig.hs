-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalConfigurationConfigurationResourceWifiConfig
module StripeAPI.Types.TerminalConfigurationConfigurationResourceWifiConfig where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.TerminalConfigurationConfigurationResourceEnterprisePeapWifi
import {-# SOURCE #-} StripeAPI.Types.TerminalConfigurationConfigurationResourceEnterpriseTlsWifi
import {-# SOURCE #-} StripeAPI.Types.TerminalConfigurationConfigurationResourcePersonalPskWifi

-- | Defines the object schema located at @components.schemas.terminal_configuration_configuration_resource_wifi_config@ in the specification.
-- 
-- 
data TerminalConfigurationConfigurationResourceWifiConfig = TerminalConfigurationConfigurationResourceWifiConfig {
  -- | enterprise_eap_peap: 
  terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapPeap :: (GHC.Maybe.Maybe TerminalConfigurationConfigurationResourceEnterprisePeapWifi)
  -- | enterprise_eap_tls: 
  , terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapTls :: (GHC.Maybe.Maybe TerminalConfigurationConfigurationResourceEnterpriseTlsWifi)
  -- | personal_psk: 
  , terminalConfigurationConfigurationResourceWifiConfigPersonalPsk :: (GHC.Maybe.Maybe TerminalConfigurationConfigurationResourcePersonalPskWifi)
  -- | type: Security type of the WiFi network. The hash with the corresponding name contains the credentials for this security type.
  , terminalConfigurationConfigurationResourceWifiConfigType :: TerminalConfigurationConfigurationResourceWifiConfigType'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalConfigurationConfigurationResourceWifiConfig
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enterprise_eap_peap" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapPeap obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enterprise_eap_tls" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("personal_psk" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceWifiConfigPersonalPsk obj) : ["type" Data.Aeson.Types.ToJSON..= terminalConfigurationConfigurationResourceWifiConfigType obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enterprise_eap_peap" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapPeap obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enterprise_eap_tls" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("personal_psk" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceWifiConfigPersonalPsk obj) : ["type" Data.Aeson.Types.ToJSON..= terminalConfigurationConfigurationResourceWifiConfigType obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalConfigurationConfigurationResourceWifiConfig
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalConfigurationConfigurationResourceWifiConfig" (\obj -> (((GHC.Base.pure TerminalConfigurationConfigurationResourceWifiConfig GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enterprise_eap_peap")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enterprise_eap_tls")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "personal_psk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))}
-- | Create a new 'TerminalConfigurationConfigurationResourceWifiConfig' with all required fields.
mkTerminalConfigurationConfigurationResourceWifiConfig :: TerminalConfigurationConfigurationResourceWifiConfigType' -- ^ 'terminalConfigurationConfigurationResourceWifiConfigType'
  -> TerminalConfigurationConfigurationResourceWifiConfig
mkTerminalConfigurationConfigurationResourceWifiConfig terminalConfigurationConfigurationResourceWifiConfigType = TerminalConfigurationConfigurationResourceWifiConfig{terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapPeap = GHC.Maybe.Nothing,
                                                                                                                                                                       terminalConfigurationConfigurationResourceWifiConfigEnterpriseEapTls = GHC.Maybe.Nothing,
                                                                                                                                                                       terminalConfigurationConfigurationResourceWifiConfigPersonalPsk = GHC.Maybe.Nothing,
                                                                                                                                                                       terminalConfigurationConfigurationResourceWifiConfigType = terminalConfigurationConfigurationResourceWifiConfigType}
-- | Defines the enum schema located at @components.schemas.terminal_configuration_configuration_resource_wifi_config.properties.type@ in the specification.
-- 
-- Security type of the WiFi network. The hash with the corresponding name contains the credentials for this security type.
data TerminalConfigurationConfigurationResourceWifiConfigType' =
   TerminalConfigurationConfigurationResourceWifiConfigType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | TerminalConfigurationConfigurationResourceWifiConfigType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | TerminalConfigurationConfigurationResourceWifiConfigType'EnumEnterpriseEapPeap -- ^ Represents the JSON value @"enterprise_eap_peap"@
  | TerminalConfigurationConfigurationResourceWifiConfigType'EnumEnterpriseEapTls -- ^ Represents the JSON value @"enterprise_eap_tls"@
  | TerminalConfigurationConfigurationResourceWifiConfigType'EnumPersonalPsk -- ^ Represents the JSON value @"personal_psk"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalConfigurationConfigurationResourceWifiConfigType'
    where {toJSON (TerminalConfigurationConfigurationResourceWifiConfigType'Other val) = val;
           toJSON (TerminalConfigurationConfigurationResourceWifiConfigType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (TerminalConfigurationConfigurationResourceWifiConfigType'EnumEnterpriseEapPeap) = "enterprise_eap_peap";
           toJSON (TerminalConfigurationConfigurationResourceWifiConfigType'EnumEnterpriseEapTls) = "enterprise_eap_tls";
           toJSON (TerminalConfigurationConfigurationResourceWifiConfigType'EnumPersonalPsk) = "personal_psk"}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalConfigurationConfigurationResourceWifiConfigType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "enterprise_eap_peap" -> TerminalConfigurationConfigurationResourceWifiConfigType'EnumEnterpriseEapPeap
                                             | val GHC.Classes.== "enterprise_eap_tls" -> TerminalConfigurationConfigurationResourceWifiConfigType'EnumEnterpriseEapTls
                                             | val GHC.Classes.== "personal_psk" -> TerminalConfigurationConfigurationResourceWifiConfigType'EnumPersonalPsk
                                             | GHC.Base.otherwise -> TerminalConfigurationConfigurationResourceWifiConfigType'Other val)}
