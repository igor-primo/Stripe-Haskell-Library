-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceChoice
module StripeAPI.Types.TerminalReaderReaderResourceChoice where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_choice@ in the specification.
-- 
-- Choice to be selected on a Reader
data TerminalReaderReaderResourceChoice = TerminalReaderReaderResourceChoice {
  -- | id: The id to be selected
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  terminalReaderReaderResourceChoiceId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | style: The button style for the choice
  , terminalReaderReaderResourceChoiceStyle :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable TerminalReaderReaderResourceChoiceStyle'NonNullable))
  -- | text: The text to be selected
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceChoiceText :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceChoice
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceChoiceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("style" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceChoiceStyle obj) : ["text" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceChoiceText obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceChoiceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("style" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceChoiceStyle obj) : ["text" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceChoiceText obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceChoice
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceChoice" (\obj -> ((GHC.Base.pure TerminalReaderReaderResourceChoice GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "style")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "text"))}
-- | Create a new 'TerminalReaderReaderResourceChoice' with all required fields.
mkTerminalReaderReaderResourceChoice :: Data.Text.Internal.Text -- ^ 'terminalReaderReaderResourceChoiceText'
  -> TerminalReaderReaderResourceChoice
mkTerminalReaderReaderResourceChoice terminalReaderReaderResourceChoiceText = TerminalReaderReaderResourceChoice{terminalReaderReaderResourceChoiceId = GHC.Maybe.Nothing,
                                                                                                                 terminalReaderReaderResourceChoiceStyle = GHC.Maybe.Nothing,
                                                                                                                 terminalReaderReaderResourceChoiceText = terminalReaderReaderResourceChoiceText}
-- | Defines the enum schema located at @components.schemas.terminal_reader_reader_resource_choice.properties.style@ in the specification.
-- 
-- The button style for the choice
data TerminalReaderReaderResourceChoiceStyle'NonNullable =
   TerminalReaderReaderResourceChoiceStyle'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | TerminalReaderReaderResourceChoiceStyle'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | TerminalReaderReaderResourceChoiceStyle'NonNullableEnumPrimary -- ^ Represents the JSON value @"primary"@
  | TerminalReaderReaderResourceChoiceStyle'NonNullableEnumSecondary -- ^ Represents the JSON value @"secondary"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceChoiceStyle'NonNullable
    where {toJSON (TerminalReaderReaderResourceChoiceStyle'NonNullableOther val) = val;
           toJSON (TerminalReaderReaderResourceChoiceStyle'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (TerminalReaderReaderResourceChoiceStyle'NonNullableEnumPrimary) = "primary";
           toJSON (TerminalReaderReaderResourceChoiceStyle'NonNullableEnumSecondary) = "secondary"}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceChoiceStyle'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "primary" -> TerminalReaderReaderResourceChoiceStyle'NonNullableEnumPrimary
                                             | val GHC.Classes.== "secondary" -> TerminalReaderReaderResourceChoiceStyle'NonNullableEnumSecondary
                                             | GHC.Base.otherwise -> TerminalReaderReaderResourceChoiceStyle'NonNullableOther val)}
