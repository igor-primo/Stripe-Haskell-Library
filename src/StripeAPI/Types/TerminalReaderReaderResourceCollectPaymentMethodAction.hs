-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceCollectPaymentMethodAction
module StripeAPI.Types.TerminalReaderReaderResourceCollectPaymentMethodAction where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentIntent
import {-# SOURCE #-} StripeAPI.Types.PaymentMethod
import {-# SOURCE #-} StripeAPI.Types.TerminalReaderReaderResourceCollectConfig

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_collect_payment_method_action@ in the specification.
-- 
-- Represents a reader action to collect a payment method
data TerminalReaderReaderResourceCollectPaymentMethodAction = TerminalReaderReaderResourceCollectPaymentMethodAction {
  -- | collect_config: Represents a per-transaction override of a reader configuration
  terminalReaderReaderResourceCollectPaymentMethodActionCollectConfig :: (GHC.Maybe.Maybe TerminalReaderReaderResourceCollectConfig)
  -- | payment_intent: Most recent PaymentIntent processed by the reader.
  , terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent :: TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Variants
  -- | payment_method: PaymentMethod objects represent your customer\'s payment instruments.
  -- You can use them with [PaymentIntents](https:\/\/stripe.com\/docs\/payments\/payment-intents) to collect payments or save them to
  -- Customer objects to store instrument details for future payments.
  -- 
  -- Related guides: [Payment Methods](https:\/\/stripe.com\/docs\/payments\/payment-methods) and [More Payment Scenarios](https:\/\/stripe.com\/docs\/payments\/more-payment-scenarios).
  , terminalReaderReaderResourceCollectPaymentMethodActionPaymentMethod :: (GHC.Maybe.Maybe PaymentMethod)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceCollectPaymentMethodAction
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collect_config" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCollectPaymentMethodActionCollectConfig obj) : ["payment_intent" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCollectPaymentMethodActionPaymentMethod obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collect_config" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCollectPaymentMethodActionCollectConfig obj) : ["payment_intent" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCollectPaymentMethodActionPaymentMethod obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceCollectPaymentMethodAction
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceCollectPaymentMethodAction" (\obj -> ((GHC.Base.pure TerminalReaderReaderResourceCollectPaymentMethodAction GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "collect_config")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method"))}
-- | Create a new 'TerminalReaderReaderResourceCollectPaymentMethodAction' with all required fields.
mkTerminalReaderReaderResourceCollectPaymentMethodAction :: TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Variants -- ^ 'terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'
  -> TerminalReaderReaderResourceCollectPaymentMethodAction
mkTerminalReaderReaderResourceCollectPaymentMethodAction terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent = TerminalReaderReaderResourceCollectPaymentMethodAction{terminalReaderReaderResourceCollectPaymentMethodActionCollectConfig = GHC.Maybe.Nothing,
                                                                                                                                                                                      terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent = terminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent,
                                                                                                                                                                                      terminalReaderReaderResourceCollectPaymentMethodActionPaymentMethod = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.terminal_reader_reader_resource_collect_payment_method_action.properties.payment_intent.anyOf@ in the specification.
-- 
-- Most recent PaymentIntent processed by the reader.
data TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Variants =
   TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Text Data.Text.Internal.Text
  | TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'PaymentIntent PaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Variants
    where {toJSON (TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'PaymentIntent a) = Data.Aeson.Types.ToJSON.toJSON a}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Variants
    where {parseJSON val = case (TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((TerminalReaderReaderResourceCollectPaymentMethodActionPaymentIntent'PaymentIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                           {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
