-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceConfirmPaymentIntentAction
module StripeAPI.Types.TerminalReaderReaderResourceConfirmPaymentIntentAction where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentIntent
import {-# SOURCE #-} StripeAPI.Types.TerminalReaderReaderResourceConfirmConfig

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_confirm_payment_intent_action@ in the specification.
-- 
-- Represents a reader action to confirm a payment
data TerminalReaderReaderResourceConfirmPaymentIntentAction = TerminalReaderReaderResourceConfirmPaymentIntentAction {
  -- | confirm_config: Represents a per-transaction override of a reader configuration
  terminalReaderReaderResourceConfirmPaymentIntentActionConfirmConfig :: (GHC.Maybe.Maybe TerminalReaderReaderResourceConfirmConfig)
  -- | payment_intent: Most recent PaymentIntent processed by the reader.
  , terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent :: TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Variants
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceConfirmPaymentIntentAction
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("confirm_config" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceConfirmPaymentIntentActionConfirmConfig obj) : ["payment_intent" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("confirm_config" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceConfirmPaymentIntentActionConfirmConfig obj) : ["payment_intent" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceConfirmPaymentIntentAction
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceConfirmPaymentIntentAction" (\obj -> (GHC.Base.pure TerminalReaderReaderResourceConfirmPaymentIntentAction GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "confirm_config")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_intent"))}
-- | Create a new 'TerminalReaderReaderResourceConfirmPaymentIntentAction' with all required fields.
mkTerminalReaderReaderResourceConfirmPaymentIntentAction :: TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Variants -- ^ 'terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'
  -> TerminalReaderReaderResourceConfirmPaymentIntentAction
mkTerminalReaderReaderResourceConfirmPaymentIntentAction terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent = TerminalReaderReaderResourceConfirmPaymentIntentAction{terminalReaderReaderResourceConfirmPaymentIntentActionConfirmConfig = GHC.Maybe.Nothing,
                                                                                                                                                                                      terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent = terminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent}
-- | Defines the oneOf schema located at @components.schemas.terminal_reader_reader_resource_confirm_payment_intent_action.properties.payment_intent.anyOf@ in the specification.
-- 
-- Most recent PaymentIntent processed by the reader.
data TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Variants =
   TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Text Data.Text.Internal.Text
  | TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'PaymentIntent PaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Variants
    where {toJSON (TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'PaymentIntent a) = Data.Aeson.Types.ToJSON.toJSON a}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Variants
    where {parseJSON val = case (TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((TerminalReaderReaderResourceConfirmPaymentIntentActionPaymentIntent'PaymentIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                           {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
