-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceCustomText
module StripeAPI.Types.TerminalReaderReaderResourceCustomText where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_custom_text@ in the specification.
-- 
-- Represents custom text to be displayed when collecting the input using a reader
data TerminalReaderReaderResourceCustomText = TerminalReaderReaderResourceCustomText {
  -- | description: Customize the default description for this input
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  terminalReaderReaderResourceCustomTextDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | skip_button: Customize the default label for this input\'s skip button
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceCustomTextSkipButton :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | submit_button: Customize the default label for this input\'s submit button
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceCustomTextSubmitButton :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | title: Customize the default title for this input
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceCustomTextTitle :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceCustomText
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_button" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextSkipButton obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit_button" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextSubmitButton obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextTitle obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_button" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextSkipButton obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit_button" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextSubmitButton obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceCustomTextTitle obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceCustomText
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceCustomText" (\obj -> (((GHC.Base.pure TerminalReaderReaderResourceCustomText GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "skip_button")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "submit_button")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "title"))}
-- | Create a new 'TerminalReaderReaderResourceCustomText' with all required fields.
mkTerminalReaderReaderResourceCustomText :: TerminalReaderReaderResourceCustomText
mkTerminalReaderReaderResourceCustomText = TerminalReaderReaderResourceCustomText{terminalReaderReaderResourceCustomTextDescription = GHC.Maybe.Nothing,
                                                                                  terminalReaderReaderResourceCustomTextSkipButton = GHC.Maybe.Nothing,
                                                                                  terminalReaderReaderResourceCustomTextSubmitButton = GHC.Maybe.Nothing,
                                                                                  terminalReaderReaderResourceCustomTextTitle = GHC.Maybe.Nothing}
