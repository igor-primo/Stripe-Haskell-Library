-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceSelection
module StripeAPI.Types.TerminalReaderReaderResourceSelection where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.TerminalReaderReaderResourceChoice

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_selection@ in the specification.
-- 
-- Information about a selection being collected using a reader
data TerminalReaderReaderResourceSelection = TerminalReaderReaderResourceSelection {
  -- | choices: List of possible choices to be selected
  terminalReaderReaderResourceSelectionChoices :: [TerminalReaderReaderResourceChoice]
  -- | id: The id of the selected choice
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceSelectionId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | text: The text of the selected choice
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceSelectionText :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceSelection
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["choices" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceSelectionChoices obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSelectionId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("text" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSelectionText obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["choices" Data.Aeson.Types.ToJSON..= terminalReaderReaderResourceSelectionChoices obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSelectionId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("text" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSelectionText obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceSelection
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceSelection" (\obj -> ((GHC.Base.pure TerminalReaderReaderResourceSelection GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "choices")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "text"))}
-- | Create a new 'TerminalReaderReaderResourceSelection' with all required fields.
mkTerminalReaderReaderResourceSelection :: [TerminalReaderReaderResourceChoice] -- ^ 'terminalReaderReaderResourceSelectionChoices'
  -> TerminalReaderReaderResourceSelection
mkTerminalReaderReaderResourceSelection terminalReaderReaderResourceSelectionChoices = TerminalReaderReaderResourceSelection{terminalReaderReaderResourceSelectionChoices = terminalReaderReaderResourceSelectionChoices,
                                                                                                                             terminalReaderReaderResourceSelectionId = GHC.Maybe.Nothing,
                                                                                                                             terminalReaderReaderResourceSelectionText = GHC.Maybe.Nothing}
