-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceToggle
module StripeAPI.Types.TerminalReaderReaderResourceToggle where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_toggle@ in the specification.
-- 
-- Information about an input\'s toggle
data TerminalReaderReaderResourceToggle = TerminalReaderReaderResourceToggle {
  -- | default_value: The toggle\'s default value
  terminalReaderReaderResourceToggleDefaultValue :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable TerminalReaderReaderResourceToggleDefaultValue'NonNullable))
  -- | description: The toggle\'s description text
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceToggleDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | title: The toggle\'s title text
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , terminalReaderReaderResourceToggleTitle :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | value: The toggle\'s collected value
  , terminalReaderReaderResourceToggleValue :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable TerminalReaderReaderResourceToggleValue'NonNullable))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceToggle
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_value" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleDefaultValue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("value" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleValue obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_value" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleDefaultValue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("value" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceToggleValue obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceToggle
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceToggle" (\obj -> (((GHC.Base.pure TerminalReaderReaderResourceToggle GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_value")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "value"))}
-- | Create a new 'TerminalReaderReaderResourceToggle' with all required fields.
mkTerminalReaderReaderResourceToggle :: TerminalReaderReaderResourceToggle
mkTerminalReaderReaderResourceToggle = TerminalReaderReaderResourceToggle{terminalReaderReaderResourceToggleDefaultValue = GHC.Maybe.Nothing,
                                                                          terminalReaderReaderResourceToggleDescription = GHC.Maybe.Nothing,
                                                                          terminalReaderReaderResourceToggleTitle = GHC.Maybe.Nothing,
                                                                          terminalReaderReaderResourceToggleValue = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.terminal_reader_reader_resource_toggle.properties.default_value@ in the specification.
-- 
-- The toggle\'s default value
data TerminalReaderReaderResourceToggleDefaultValue'NonNullable =
   TerminalReaderReaderResourceToggleDefaultValue'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | TerminalReaderReaderResourceToggleDefaultValue'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | TerminalReaderReaderResourceToggleDefaultValue'NonNullableEnumDisabled -- ^ Represents the JSON value @"disabled"@
  | TerminalReaderReaderResourceToggleDefaultValue'NonNullableEnumEnabled -- ^ Represents the JSON value @"enabled"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceToggleDefaultValue'NonNullable
    where {toJSON (TerminalReaderReaderResourceToggleDefaultValue'NonNullableOther val) = val;
           toJSON (TerminalReaderReaderResourceToggleDefaultValue'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (TerminalReaderReaderResourceToggleDefaultValue'NonNullableEnumDisabled) = "disabled";
           toJSON (TerminalReaderReaderResourceToggleDefaultValue'NonNullableEnumEnabled) = "enabled"}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceToggleDefaultValue'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "disabled" -> TerminalReaderReaderResourceToggleDefaultValue'NonNullableEnumDisabled
                                             | val GHC.Classes.== "enabled" -> TerminalReaderReaderResourceToggleDefaultValue'NonNullableEnumEnabled
                                             | GHC.Base.otherwise -> TerminalReaderReaderResourceToggleDefaultValue'NonNullableOther val)}
-- | Defines the enum schema located at @components.schemas.terminal_reader_reader_resource_toggle.properties.value@ in the specification.
-- 
-- The toggle\'s collected value
data TerminalReaderReaderResourceToggleValue'NonNullable =
   TerminalReaderReaderResourceToggleValue'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | TerminalReaderReaderResourceToggleValue'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | TerminalReaderReaderResourceToggleValue'NonNullableEnumDisabled -- ^ Represents the JSON value @"disabled"@
  | TerminalReaderReaderResourceToggleValue'NonNullableEnumEnabled -- ^ Represents the JSON value @"enabled"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceToggleValue'NonNullable
    where {toJSON (TerminalReaderReaderResourceToggleValue'NonNullableOther val) = val;
           toJSON (TerminalReaderReaderResourceToggleValue'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (TerminalReaderReaderResourceToggleValue'NonNullableEnumDisabled) = "disabled";
           toJSON (TerminalReaderReaderResourceToggleValue'NonNullableEnumEnabled) = "enabled"}
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceToggleValue'NonNullable
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "disabled" -> TerminalReaderReaderResourceToggleValue'NonNullableEnumDisabled
                                             | val GHC.Classes.== "enabled" -> TerminalReaderReaderResourceToggleValue'NonNullableEnumEnabled
                                             | GHC.Base.otherwise -> TerminalReaderReaderResourceToggleValue'NonNullableOther val)}
