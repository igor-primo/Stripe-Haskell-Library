-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails
module StripeAPI.Types.TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.treasury_outbound_transfers_resource_us_domestic_wire_tracking_details@ in the specification.
-- 
-- 
data TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails = TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails {
  -- | chips: CHIPS System Sequence Number (SSN) of the OutboundTransfer for transfers sent over the \`us_domestic_wire\` network.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsChips :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | imad: IMAD of the OutboundTransfer for transfers sent over the \`us_domestic_wire\` network.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsImad :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | omad: OMAD of the OutboundTransfer for transfers sent over the \`us_domestic_wire\` network.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsOmad :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("chips" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsChips obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("imad" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsImad obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("omad" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsOmad obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("chips" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsChips obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("imad" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsImad obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("omad" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsOmad obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails" (\obj -> ((GHC.Base.pure TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "chips")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "imad")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "omad"))}
-- | Create a new 'TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails' with all required fields.
mkTreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails :: TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails
mkTreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails = TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails{treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsChips = GHC.Maybe.Nothing,
                                                                                                                                  treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsImad = GHC.Maybe.Nothing,
                                                                                                                                  treasuryOutboundTransfersResourceUsDomesticWireTrackingDetailsOmad = GHC.Maybe.Nothing}
